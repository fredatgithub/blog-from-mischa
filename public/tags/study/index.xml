<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
	<title>Mischa&#39;s Blog</title>
	<link>http://mischavandenburg.com/tags/study/</link>
	<description>Recent content in Study on Mischa&#39;s Blog</description>
	<generator>Hugo -- gohugo.io</generator>
	<language>en-us</language>
	<lastBuildDate>Sun, 01 Jan 2023 19:05:13 +0100</lastBuildDate>
    
        <atom:link href="http://mischavandenburg.com/tags/study/index.xml" rel="self" type="application/rss+xml" />
	
	
	<item>
		<title>Application Insights: Telemetry Sampling</title>
		<link>http://mischavandenburg.com/zet/application-insights-sampling/</link>
		<pubDate>Tue, 03 Jan 2023 08:41:09 +0100</pubDate>
		
		<guid>http://mischavandenburg.com/zet/application-insights-sampling/</guid>
		<description>&lt;p&gt;Telemetry is the collection of measurements or other data at remote points, and transmitting that data to a receiver for monitoring.&lt;/p&gt;
&lt;p&gt;Sampling is used to reduce telemetry traffic and costs for storage and data in Application Insights.&lt;/p&gt;
&lt;p&gt;For small and medium sized applications sampling is generally not necessary.&lt;/p&gt;
&lt;p&gt;Advantages of sampling:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Throttling data when the application suddenly sends a high volume of telemetry in a short time
&lt;ul&gt;
&lt;li&gt;This saves costs!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Keeping a pricing tier quota&lt;/li&gt;
&lt;li&gt;Reduce network traffic from telemetry collection&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Three different kinds of sampling:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;adaptive sampling
&lt;ul&gt;
&lt;li&gt;automatically adjusts volume of telemetry&lt;/li&gt;
&lt;li&gt;from ASP.NET or Azure Functions&lt;/li&gt;
&lt;li&gt;only for these two&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;fixed-rate sampling
&lt;ul&gt;
&lt;li&gt;rate is set by the administrator&lt;/li&gt;
&lt;li&gt;use when you have a clear idea of the appropriate sampling percentage&lt;/li&gt;
&lt;li&gt;reduces volume from
&lt;ul&gt;
&lt;li&gt;ASP.NET or ASP.NET Core server&lt;/li&gt;
&lt;li&gt;Java server&lt;/li&gt;
&lt;li&gt;Python applications&lt;/li&gt;
&lt;li&gt;User browsers&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ingestion sampling
&lt;ul&gt;
&lt;li&gt;used when monthly quota is often met&lt;/li&gt;
&lt;li&gt;reduces amount of processed and retained traffic by Application Insights
&lt;ul&gt;
&lt;li&gt;less processing = less cost&lt;/li&gt;
&lt;li&gt;doesn&amp;rsquo;t reduce telemetry traffic sent from the app&lt;/li&gt;
&lt;li&gt;happens at Applications Insight service endpoint&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;disabled if SDK samples telemetry&lt;/li&gt;
&lt;li&gt;can set sampling rate without redeploying the app&lt;/li&gt;
&lt;li&gt;only applies when no other sampling is in effect
&lt;ul&gt;
&lt;li&gt;supports all Application Insights SDK&amp;rsquo;s&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
	</item>
	
	<item>
		<title>Pipelines: Continuous Monitoring</title>
		<link>http://mischavandenburg.com/zet/pipelines-continuous-monitoring/</link>
		<pubDate>Tue, 03 Jan 2023 08:30:03 +0100</pubDate>
		
		<guid>http://mischavandenburg.com/zet/pipelines-continuous-monitoring/</guid>
		<description>&lt;p&gt;This term can be confusing. Initially I thought it meant monitoring of the pipelines themselves. However, in the context of Azure Release Pipelines, continuous monitoring refers to something else.&lt;/p&gt;
&lt;p&gt;Continuous monitoring leverages metrics from other services such as Application Insights. You can set up release gates based on these metrics. For example, you can set up a release gate to roll back the deployment if an alert is being fired for high CPU usage in the application.&lt;/p&gt;
&lt;p&gt;You can set up several of these checks. If all these checks pass, the pipeline can proceed.&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>Distributed Tracing</title>
		<link>http://mischavandenburg.com/zet/distributed-tracing/</link>
		<pubDate>Tue, 03 Jan 2023 07:58:44 +0100</pubDate>
		
		<guid>http://mischavandenburg.com/zet/distributed-tracing/</guid>
		<description>&lt;p&gt;Debugging is done using &lt;a href=&#34;http://mischavandenburg.com/content/zet/call-stacks/&#34;&gt;call stacks&lt;/a&gt; in monolithic applications. Nowadays it is more common to deploy an application using a microservices architecture. Microservices make it easier to update certain parts of the application, and allow for more frequent deployments.&lt;/p&gt;
&lt;p&gt;Using microservices does have a disadvantage: you cannot use the local call stack for debugging, because calls are sent to different microservices.&lt;/p&gt;
&lt;p&gt;Distributed tracing is an implementation of the call stack in the cloud. It is usually implemented by adding an agent, &lt;a href=&#34;http://mischavandenburg.com/content/zet/sdk/&#34;&gt;SDK&lt;/a&gt;, or library to the service. In Azure you can enable distributed tracing via Application Insights through auto-instrumentation or SDKs.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/azure/azure-monitor/app/transaction-diagnostics&#34;&gt;Unified cross-component transaction diagnostics&lt;/a&gt;&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>What is a SDK?</title>
		<link>http://mischavandenburg.com/zet/sdk/</link>
		<pubDate>Tue, 03 Jan 2023 07:50:55 +0100</pubDate>
		
		<guid>http://mischavandenburg.com/zet/sdk/</guid>
		<description>&lt;p&gt;A software development kit (SDK) is a set of tools provided by the manufacturer of (usually) a hardware platform, operating system (OS), or programming language.&lt;/p&gt;
&lt;p&gt;SDKs contain all the tools you need to get started. They typically contain a compiler, a debugger and an API. But they can also contain documentation and testing tools.&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>Call Stacks</title>
		<link>http://mischavandenburg.com/zet/call-stacks/</link>
		<pubDate>Mon, 02 Jan 2023 21:11:26 +0100</pubDate>
		
		<guid>http://mischavandenburg.com/zet/call-stacks/</guid>
		<description>&lt;p&gt;When you call a function, the system sets aside space in memory  for the function to do its work. Those chunks are called &amp;ldquo;stack frames&amp;rdquo; or &amp;ldquo;function frames.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;These frames are arranged in a stack. The frame for the most recently called function is always at the top of the stack. When a new function is called, it becomes the active frame, and it is on top of the stack.&lt;/p&gt;
&lt;p&gt;The function that is actually doing something at the moment is on top of the stack and is known as the &amp;ldquo;active frame.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;When the function finishes its work, the frame is popped off of the stack. The frame in second place becomes the active frame. It had been paused in the meantime, and now it is active again, because it is on top.&lt;/p&gt;
&lt;p&gt;Functions that are not on top, are not running.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=aCPkszeKRa4&#34;&gt;This video explains it well.&lt;/a&gt;&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>Starting a Project</title>
		<link>http://mischavandenburg.com/zet/starting-a-project/</link>
		<pubDate>Mon, 02 Jan 2023 21:00:11 +0100</pubDate>
		
		<guid>http://mischavandenburg.com/zet/starting-a-project/</guid>
		<description>&lt;p&gt;I&amp;rsquo;m starting a project with a friend. Developing an application. We make a good team, he&amp;rsquo;s great at coding and knows the backend too.&lt;/p&gt;
&lt;p&gt;He&amp;rsquo;ll do the development, I&amp;rsquo;m in charge of hosting. We&amp;rsquo;re setting everything up in Azure DevOps, so it is a great way to practice my Azure skills and apply the things I&amp;rsquo;ve learned in my recently obtained &lt;a href=&#34;http://mischavandenburg.com/articles/az-104-study-guide/&#34;&gt;AZ-104&lt;/a&gt; Azure Administrator certification.&lt;/p&gt;
&lt;p&gt;Even though it is a small scale hobby project, I still plan to approach it as if it was an enterprise production application. I&amp;rsquo;ll set up a full CI/CD pipeline with testing in a secure manner. Credentials stored in an Azure key vault and images pushed to a private registry.&lt;/p&gt;
&lt;p&gt;This is going to be fun!&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>Going to Publish Smaller, and More Often</title>
		<link>http://mischavandenburg.com/zet/move-to-zet/</link>
		<pubDate>Mon, 02 Jan 2023 20:52:50 +0100</pubDate>
		
		<guid>http://mischavandenburg.com/zet/move-to-zet/</guid>
		<description>&lt;p&gt;I&amp;rsquo;ve transitioned my note taking system towards a Zettelkasten system. I still use directories for folders and make copious links, but more often than not I put them in the larger generic 00-zettelkasten directory in my &lt;a href=&#34;http://mischavandenburg.com/articles/obsidian-introduction/&#34;&gt;Obsidian&lt;/a&gt; vault.&lt;/p&gt;
&lt;p&gt;The concept of &amp;ldquo;atomic notes&amp;rdquo; is also very important in Zettelkasten methods. Notes should be small and concise.&lt;/p&gt;
&lt;p&gt;Up until this point I&amp;rsquo;ve been publishing full articles on my blog. I came across &lt;a href=&#34;https://github.com/rwxrob&#34;&gt;Rob Muhlestein&lt;/a&gt; yesterday and I was very inspired by his setup and public zettelkasten. I think I&amp;rsquo;ll move to a similar approach. Still planning to write and publish full articles as well, but also including atomic notes and personal status updates.&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>Obsidian: A Note Taking App For DevOps Engineers</title>
		<link>http://mischavandenburg.com/articles/obsidian-introduction/</link>
		<pubDate>Sun, 01 Jan 2023 19:05:13 +0100</pubDate>
		
		<guid>http://mischavandenburg.com/articles/obsidian-introduction/</guid>
		<description>&lt;p&gt;As a DevOps or Cloud engineer, you work with many different technologies daily. Therefore, a good engineer needs a solid foundation in Linux, a lot of knowledge about your cloud solution, networking, CI/CD, at least one programming language, and many other topics.&lt;/p&gt;
&lt;p&gt;Not only are there many of these categories, but within these categories, there are several alternatives. For example, in the category of infrastructure management, there is Ansible, Puppet, or Chef, each with its particular approach and configuration methods.&lt;/p&gt;
&lt;p&gt;It can be challenging to keep everything memorized at all times. However, when I started my journey to become a DevOps engineer, I kept meticulous notes of everything I learned, and this practice has been highly beneficial so far. This blog is a result of the notes I keep every day.&lt;/p&gt;
&lt;p&gt;Note-taking is an essential part of the DevOps engineer&amp;rsquo;s toolkit. It allows you to stay organized, track changes, document processes, and keep track of important information. Using a powerful note-taking app like Obsidian can streamline your note-taking process and work more efficiently.&lt;/p&gt;
&lt;h1 id=&#34;obsidian-for-devops-engineers&#34;&gt;Obsidian for DevOps engineers&lt;/h1&gt;
&lt;p&gt;Having a reliable and efficient system in place for managing your notes and documentation is crucial. That&amp;rsquo;s where &lt;a href=&#34;https://obsidian.md/&#34;&gt;Obsidian&lt;/a&gt; comes in. Obsidian is a powerful note-taking app that can help you organize and manage your notes more efficiently.&lt;/p&gt;
&lt;p&gt;One of the main features of Obsidian is its use of &amp;ldquo;vaults.&amp;rdquo; A vault is a folder containing your notes as markdown text files. Your notes are stored on your machine rather than in the cloud. This gives you complete control over your data. You always have access to your local text files and can interact with them or back them up as you see fit.&lt;/p&gt;
&lt;p&gt;Because your notes are stored as markdown files, you can use different tools to write or edit your notes. I mostly use neovim for editing, but I use the Obsidian application for making new links and visualization. Moreover, storing your notes as files allows you to run python scripts on your notes and customize your workflow as needed. This can be especially useful for automating tasks, streamlining your work, or making bulk updates.&lt;/p&gt;
&lt;h1 id=&#34;links-and-graph-view&#34;&gt;Links and graph view&lt;/h1&gt;
&lt;p&gt;In addition to its local storage capabilities, Obsidian also offers several other valuable features for DevOps engineers. For example, you can use the &amp;ldquo;graph view&amp;rdquo; to visualize your notes and see how they&amp;rsquo;re related to one another. This can be particularly useful for understanding complex systems and tracking changes over time.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/graph-view.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;These relations between notes are created by &amp;ldquo;[[markdown links]]&amp;rdquo;. When a note receives many links, its dot size will increase on the graph view, and in this manner, it is easy to see which notes or topics are significant in your vault and play an important role in your life.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/local-graph.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;This is the local graph view, showing all the linked notes to my Linux note.&lt;/p&gt;
&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Many note-taking apps, such as Evernote, Notion, or Roam research, are available. I tried a few of these, but Obsidian was the best solution for me. Mainly because your notes are stored as markdown files on your machine and because they offer a syncing service with end-to-end encryption. Their graph view provides an interesting way to navigate your notes and discover unexpected connections.&lt;/p&gt;
&lt;p&gt;Give it a try. It&amp;rsquo;s free.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://obsidian.md/&#34;&gt;Obsidian website&lt;/a&gt;&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>What Are Containers?</title>
		<link>http://mischavandenburg.com/articles/what-are-containers/</link>
		<pubDate>Sun, 01 Jan 2023 16:17:58 +0100</pubDate>
		
		<guid>http://mischavandenburg.com/articles/what-are-containers/</guid>
		<description>&lt;p&gt;When you learn about DevOps, you will come across the concept of a container early on. This is a &amp;ldquo;Mischa Explains&amp;rdquo; article where I attempt to explain a concept in my own words as simply as possible. I use the Feynman technique and pretend to explain it to a 12-year-old.&lt;/p&gt;
&lt;h1 id=&#34;virtualization&#34;&gt;Virtualization&lt;/h1&gt;
&lt;p&gt;To understand containers, we need to understand virtualization. Virtualization is the process of creating &amp;ldquo;fake computers&amp;rdquo; or &amp;ldquo;virtual computers&amp;rdquo; on a physical computer.&lt;/p&gt;
&lt;p&gt;On your desk, you have a laptop or a desktop PC. This machine has hardware such as a motherboard, a hard disk, and a video card. To run programs on your computer, it needs an Operating System. Usually, Windows, macOS, or Linux are used.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s say you have a computer running Windows, but you want to run a program that can only run on Linux. One solution is to buy another laptop and put it beside your Windows laptop on your desk. So now you have two computers with two different operating systems.&lt;/p&gt;
&lt;p&gt;Fortunately, there are other solutions. We can use virtualization to make a Virtual Machine. A virtual machine is created by software to imitate a fully functional running computer inside your current operating system. You can create a virtual machine that runs Linux on your Windows computer. Your Windows computer running the Linux virtual machine is known as the **host.&lt;/p&gt;
&lt;p&gt;Now you don&amp;rsquo;t need to buy another computer to run your Linux program. Instead, you can boot up your Linux virtual machine and run your program when needed. If you have a powerful computer, you could run ten or more virtual machines, each of which has its own operating system and custom environment.&lt;/p&gt;
&lt;h1 id=&#34;containers&#34;&gt;Containers&lt;/h1&gt;
&lt;p&gt;Every time you create a virtual machine, the virtual machine needs a complete operating system to work. So, first, the software creates a virtual processor, virtual video card, and a virtual network interface. Then, it runs a fully functional operating system on that virtual hardware. This takes up a lot of resources.&lt;/p&gt;
&lt;p&gt;Containers are lightweight packages of software. They are designed to do a very specific task, and therefore they only contain the resources they need to do that task. Nothing more.&lt;/p&gt;
&lt;p&gt;Containers use the operating system of the physical computer to run. They have a very minimal, lightweight operating system inside them, but it only contains the elements they need to do their specific task. Therefore, containers are very easy to distribute, and you can run them very quickly.&lt;/p&gt;
&lt;h1 id=&#34;containers-are-like-newspapers&#34;&gt;Containers are like newspapers&lt;/h1&gt;
&lt;p&gt;Containers are like newspapers. Newspapers have a particular task: providing you with the day&amp;rsquo;s news. You cannot use newspapers to study for your mathematics exam. You use your math book to study for your math exam. If you want to be informed of the day&amp;rsquo;s news, you use a newspaper. This is what I mean by containers having a specific task.&lt;/p&gt;
&lt;p&gt;Next, newspapers are printed on a specific kind of paper. When you buy an expensive book, it will have a sturdy and durable cover, and the pages are made of nice thick paper that will last a long time. The pages don&amp;rsquo;t tear very quickly, and when the book gets wet, it can withstand it. This thick cover and high-quality papers are like the operating system of a virtual machine.&lt;/p&gt;
&lt;p&gt;Newspapers, on the other hand, are printed on very thin paper. Because they are designed to distribute the news to you effectively, newspapers do not need to be stored forever or do any other tasks. If you used thick, expensive paper for newspapers, they would become costly, and no one would buy them anymore. The paper is optimized to bring the news to you.&lt;/p&gt;
&lt;p&gt;In the same way, the container only comes with the components it needs to do its specific task. Therefore, the container is optimized for its purpose. As a result, they can be distributed more quickly and do not take up a lot of resources when running.&lt;/p&gt;
&lt;p&gt;There are other benefits to containers, such as improving the ability to autoscale your application, but I will expand on those in a future blog post.&lt;/p&gt;
&lt;h1 id=&#34;further-study&#34;&gt;Further study&lt;/h1&gt;
&lt;p&gt;To learn more about containers, you can use the following resources:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://youtu.be/r6YIlPEC4y4&#34;&gt;Containers &amp;amp; Friends from John Savill&amp;rsquo;s DevOps Masterclass&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.docker.com/get-started/overview/&#34;&gt;Docker Documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://youtu.be/3c-iBn73dDE&#34;&gt;Docker Tutorial for Beginners&lt;/a&gt;&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>Getting Started with Neovim: kickstart.nvim</title>
		<link>http://mischavandenburg.com/articles/kickstart-nvim/</link>
		<pubDate>Sun, 01 Jan 2023 09:11:57 +0100</pubDate>
		
		<guid>http://mischavandenburg.com/articles/kickstart-nvim/</guid>
		<description>&lt;p&gt;I&amp;rsquo;ve been using neovim for over a year now, and I&amp;rsquo;m very happy that I went through the initial difficulty of learning vim. One of the best perks of using neovim is that you can customize your entire editing experience and workflow. However, it can be a daunting experience to start with an empty configuration and set up everything from scratch.&lt;/p&gt;
&lt;p&gt;I started with an empty vanilla vim config and slowly added the plugins as I went along. Videos by content creators such as ThePrimagen were also helpful in getting inspiration on which plugins I might like for my setup. But this might not be suitable for everyone. I was only editing yaml files and writing simple Python scripts at the time, whereas you might be looking for an IDE experience out of the box.&lt;/p&gt;
&lt;p&gt;Recently I discovered &lt;a href=&#34;https://github.com/nvim-lua/kickstart.nvim&#34;&gt;kickstart.nvim&lt;/a&gt; by neovim core maintainer TJdeVries.&lt;/p&gt;
&lt;p&gt;I decided to give it a try, and I was pleasantly surprised. It is a great starting setup for a beginner. It is simple and does not overwhelm you with thousands of features.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve completely rewritten my config based on kickstart.nvim, and I am delighted with the result. Especially the LSP setup is very well thought out, and it works much better than the setup I came up with on my own.&lt;/p&gt;
&lt;p&gt;TJ DeVries also made a &lt;a href=&#34;https://youtu.be/stqUbv-5u2s&#34;&gt;video&lt;/a&gt; introducing kickstart.nvim and going through the initial setup.&lt;/p&gt;
&lt;p&gt;I highly recommend kickstart.nvim if you are interested in using neovim and are looking for a sane place to start.&lt;/p&gt;
&lt;h1 id=&#34;links&#34;&gt;links&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/nvim-lua/kickstart.nvim&#34;&gt;kickstart.nvim&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://youtu.be/stqUbv-5u2s&#34;&gt;Kickstart video by TJdeVries&lt;/a&gt;&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>Study Guide: AZ-104 Azure Administrator Associate</title>
		<link>http://mischavandenburg.com/articles/az-104-study-guide/</link>
		<pubDate>Fri, 30 Dec 2022 00:00:00 +0000</pubDate>
		
		<guid>http://mischavandenburg.com/articles/az-104-study-guide/</guid>
		<description>&lt;h1 id=&#34;tldr&#34;&gt;TLDR&lt;/h1&gt;
&lt;p&gt;It took me 80 hours of studying to gain this certification. Here are my notes and Anki deck:
&lt;a href=&#34;https://github.com/mischavandenburg/az-104-azure-administrator&#34;&gt;GitHub repo&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;When I did my English degree at University, exams were usually handwritten essays that needed to be done within a 3-hour timeframe. Sometimes we had multiple-choice tests, and I would always consider them a guaranteed pass because multiple-choice was much easier in my experience.&lt;/p&gt;
&lt;p&gt;That opinion has changed since I&amp;rsquo;ve obtained a few IT certifications. These tests are hard! I&amp;rsquo;m typing this while sitting on the bus on my way home from my AZ-104 exam. I passed with an 860 score of 1000, where 700 or higher is a pass. But it was an astonishingly tough exam. Usually, I finish quickly and spend at least half an hour reviewing my answers. I had only 5 minutes to review my questions this time because I had used up all of the available time. The questions required intense concentration and were time-consuming because I needed to compare many options which were very similar to each other. There were no easy questions.&lt;/p&gt;
&lt;h1 id=&#34;preparation&#34;&gt;Preparation&lt;/h1&gt;
&lt;p&gt;I studied 80 hours for this exam in a month. I work full-time as a DevOps Engineer, so I study in the evenings and on weekends. I have my Azure Fundamentals and CKA, but I only work with Azure occasionally in my current role.&lt;/p&gt;
&lt;p&gt;Here is what I did to prepare for my exam:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go through all of the &lt;a href=&#34;https://learn.microsoft.com/en-us/certifications/exams/az-104&#34;&gt;Microsoft Learn modules for the AZ-104&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Watch the entire &lt;a href=&#34;https://www.youtube.com/playlist?list=PLlVtbbG169nGlGPWs9xaLKT1KfwqREHbs&#34;&gt;AZ-104 study list by John Savill&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Practice exams on &lt;a href=&#34;https://tutorialsdojo.com/&#34;&gt;TutorialsDojo&lt;/a&gt; until I could pass them with 90%+ scores&lt;/li&gt;
&lt;li&gt;Microsoft ESI practice exams&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/shows/exam-readiness-zone/preparing-for-az-104-manage-azure-identities-and-governance-1-of-5&#34;&gt;Microsoft AZ-104 Exam prep videos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;microsoft-learn&#34;&gt;Microsoft Learn&lt;/h2&gt;
&lt;p&gt;You really need to master all of the subject matter. Only completing the Microsoft Learn modules is not enough preparation. They are more like summaries. At the end of each module, they provide links to the documentation for the subject for further study. Unfortunately, Microsoft does not go easy on you. It expects you to know obscure details of nearly every service this exam covers. Therefore, I advise going beyond the Microsoft Learn modules and studying the linked articles after each module.&lt;/p&gt;
&lt;h2 id=&#34;youtube-az-104-study-playlist-by-john-savill&#34;&gt;YouTube AZ-104 Study Playlist by John Savill&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m not sure if it&amp;rsquo;s better to watch this playlist first and then do the Microsoft modules or the other way around. I did the Microsoft modules first, but for my next exam (AZ-400 DevOps Expert), I&amp;rsquo;ll start with the videos and then do the Microsoft Learn modules.&lt;/p&gt;
&lt;h2 id=&#34;tutorialsdojo&#34;&gt;Tutorialsdojo&lt;/h2&gt;
&lt;p&gt;These practice exams are excellent. I used them in preparation for my fundamentals exam.&lt;/p&gt;
&lt;p&gt;The best thing about them is that they provide extensive documentation and explanation of the questions. So after you finish the exam, you can study a lot with these examples.&lt;/p&gt;
&lt;h2 id=&#34;esi-practice-exams&#34;&gt;ESI Practice Exams&lt;/h2&gt;
&lt;p&gt;You&amp;rsquo;re lucky if your organization participates in Microsoft&amp;rsquo;s &lt;a href=&#34;esi.microsoft.com/&#34;&gt;Enterprise Skills Initiative&lt;/a&gt;. The practice exams provided in the ESI environment give you a good indication of what you can expect at the exam. I first did the Tutorialsdojo exams and then moved on to the ESI exams, and I was humiliated. The ESI questions are very complex and hard to solve, and I learned a lot from these exams.&lt;/p&gt;
&lt;p&gt;There are 210 questions total, and I worked through all of them, and whenever I failed a question, I did a deeper dive into the question&amp;rsquo;s theme.&lt;/p&gt;
&lt;h1 id=&#34;studying&#34;&gt;studying&lt;/h1&gt;
&lt;p&gt;I take notes in Obsidian, and I use Anki for spaced repetition. I highly recommend keeping a deck of Anki cards and continuously testing yourself. You will need to memorize a lot of details. For example, you are expected to remember that storage accounts of the FileStorage type do not support Geo Redundant Storage. You can find my Anki deck in the &lt;a href=&#34;https://github.com/mischavandenburg/az-104-azure-administrator&#34;&gt;GitHub repo.&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;links&#34;&gt;links&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/certifications/exams/az-104&#34;&gt;AZ-104 Exam page with learning modules&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLlVtbbG169nGlGPWs9xaLKT1KfwqREHbs&#34;&gt;John Savill&amp;rsquo;s AZ-104 Study playlist&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/mischavandenburg/az-104-azure-administrator&#34;&gt;GitHub repo containing my notes and Anki deck&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/shows/exam-readiness-zone/preparing-for-az-104-manage-azure-identities-and-governance-1-of-5&#34;&gt;Microsoft AZ-104 Exam prep videos&lt;/a&gt;&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>Lab Project: GitOps with ArgoCD, Azure Pipelines and Minikube</title>
		<link>http://mischavandenburg.com/articles/lab-argocd-azure-pipelines/</link>
		<pubDate>Sat, 24 Dec 2022 13:49:55 +0100</pubDate>
		
		<guid>http://mischavandenburg.com/articles/lab-argocd-azure-pipelines/</guid>
		<description>&lt;p&gt;This weekend I had a lot of fun with a project. I wanted to learn more about GitOps and try out ArgoCD.&lt;/p&gt;
&lt;p&gt;My goal was to be able to deploy an application from a GitHub repo to my local Kubernetes cluster running in minikube. There are many options I could have used, such as running Jenkins in my cluster. But I wanted to use Azure pipelines for practice, which complicates the deployment to my local cluster, because the cluster is not running on Azure. I also wanted to try out ArgoCD and learn more about GitOps.&lt;/p&gt;
&lt;p&gt;The application is a simple web app that I wrote which displays a quote in the browser:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/app.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;gitops-and-structure&#34;&gt;GitOps and Structure&lt;/h1&gt;
&lt;p&gt;GitOps is used to automate the process of provisioning infrastructure. Infrastructure as code is used to generate the same environment every time the environment is deployed.&lt;/p&gt;
&lt;p&gt;For my project I have two separate GitHub repos. &lt;a href=&#34;https://github.com/mischavandenburg/static-quote-app&#34;&gt;The first repo&lt;/a&gt; contains the code for a simple web app I created and the Dockerfile to generate the image. I call this my application repo. The other repo is &lt;a href=&#34;https://github.com/mischavandenburg/static-quote-app-gitops&#34;&gt;my GitOps repo&lt;/a&gt; which contains the manifest files to deploy the application in Kubernetes. I decided to leverage Helm to create my manifest files. This way I can create templates and define my desired values in a values.yaml file in the repo.&lt;/p&gt;
&lt;p&gt;Ultimately my goal was to use an Azure pipeline to build an image from my application repo and push it to Docker hub. This new image is given a new tag which needs to be stored. The first pipeline should trigger a new pipeline that makes a pull request to the GitOps repo to update the tag in my Helm chart.&lt;/p&gt;
&lt;p&gt;ArgoCD will then scan the GitOps repo and realize that the tag has been updated, and deploy the new tag to my cluster.&lt;/p&gt;
&lt;h1 id=&#34;minikube&#34;&gt;Minikube&lt;/h1&gt;
&lt;p&gt;I used &lt;a href=&#34;https://minikube.sigs.k8s.io/docs/&#34;&gt;minikube&lt;/a&gt; to deploy my local Kubernetes cluster. Another option is &lt;a href=&#34;https://kind.sigs.k8s.io/&#34;&gt;kind&lt;/a&gt; (Kubernetes In Docker) but I wanted to use a VM approach this time.&lt;/p&gt;
&lt;h1 id=&#34;argocd&#34;&gt;ArgoCD&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://argo-cd.readthedocs.io/&#34;&gt;ArgoCD&lt;/a&gt; is a declarative GitOps continuous delivery tool for Kubernetes. This is the solution I used to continuously scan my GitOps repo. When ArgoCD detects a change in the desired state, it will compare it with the state in my running cluster and make changes accordingly. I found a really good &lt;a href=&#34;https://redhat-scholars.github.io/argocd-tutorial/argocd-tutorial/02-getting_started.html&#34;&gt;tutorial to run ArgoCD in minikube&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/argocd-dashboard.png&#34; alt=&#34;ArgoCD dashboard&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;azure-pipelines&#34;&gt;Azure Pipelines&lt;/h1&gt;
&lt;p&gt;With my cluster running on my local machine and my repos set up, I needed to use Azure Pipelines to bring it all together. Building the image and pushing it to Docker Hub wasn&amp;rsquo;t a big deal. But I had two big challenges in my desired setup: I needed to pass the new tag number to a new pipeline, and I needed to use Azure Pipelines to create a new PR to my GitOps repo.&lt;/p&gt;
&lt;h3 id=&#34;passing-a-value-from-one-pipeline-to-another&#34;&gt;Passing a value from one pipeline to another&lt;/h3&gt;
&lt;p&gt;Interestingly, this wasn&amp;rsquo;t as easy as it sounds, and from my internet searching it seemed that many people struggled with this. I decided to use the Variable Groups in Azure DevOps. However, after I finished writing my pipeline, I discovered I had no problems with reading the value from the Variable Groups, but it was impossible to update it using existing pipeline tasks. So I had to a bit of hacking to make it work. In the end I had to use the Azure CLI from within the pipeline to update my variable:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;stage&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;update_tag&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;jobs&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;job&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;update_tag_variable &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;displayName&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Update Tag Variable&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;bash&lt;/span&gt;: |&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          az pipelines variable-group variable \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          update --group-id 202 \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          --org $(System.CollectionUri) \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          --project $(System.TeamProject) \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          --name tag --value $(Build.BuildId)&lt;/span&gt;          
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;env&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;AZURE_DEVOPS_EXT_PAT&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$(System.AccessToken)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This didn&amp;rsquo;t feel like a very elegant solution, but it was the only solution I could come up with.&lt;/p&gt;
&lt;p&gt;I also struggled a lot with permissions. I needed to find the correct service principal to assign the administrator rights to. &lt;a href=&#34;https://stackoverflow.com/questions/52986076/having-no-permission-for-updating-variable-group-via-azure-devops-rest-api-from&#34;&gt;This post&lt;/a&gt; really helped to solve my problem.&lt;/p&gt;
&lt;h3 id=&#34;submitting-a-pr-to-a-github-repo&#34;&gt;Submitting a PR to a GitHub repo&lt;/h3&gt;
&lt;p&gt;When I started writing my pipeline I thought it would be very straightforward to just submit a PR to a repo, but I quickly discovered that this is not natively supported in Azure pipelines yet. In fact, I could not find a way to submit a PR at all. I had to settle for a solution that checks out the GitOps repo and creates a new branch. This new branch updates the tag in the values.yaml with the new tag that was passed from the previous pipeline.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;variables&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;group&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;mischa-quote&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;passed_tag&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;value&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$[variables.tag]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;branch_name&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;value&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pipeline-$(passed_tag)&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;pool&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;vmImage&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;checkout&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;self&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;persistCredentials&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;clean&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;: |&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      git config --global user.email &amp;#34;mischa@pipeline.com&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      git config --global user.name &amp;#34;Mischa Pipeline&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      git switch -c &amp;#34;$(branch_name)&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      sed -i &amp;#34;s/tag:.*/tag: $(passed_tag)/&amp;#34; values.yaml 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      git add .
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      git commit -m &amp;#34;Update tag to $(passed_tag)&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      git push --set-upstream origin &amp;#34;$(branch_name)&amp;#34;&lt;/span&gt;      
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This also felt a bit hacky to do with explicit shell commands, but it was the only way I could find to achieve my goal. I used sed to update the tag.&lt;/p&gt;
&lt;h1 id=&#34;result&#34;&gt;Result&lt;/h1&gt;
&lt;p&gt;The resulting deployment pipeline is as follows.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I make a commit to my application repo, which triggers a build pipeline in Azure DevOps:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/trigger-pipeline1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;This resulted in an image pushed to my Docker Hub:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/docker-hub.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;The pipeline created a new branch in my GitOps repo. Unfortunately, I have to make the PR myself, but as you can see, the pipeline successfully updates the values.yaml with the new tag which we also saw in Docker Hub:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/new-branch.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/update-tag.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;When I merged the pull request, ArgoCD detected the change and deployed a new pod with the new tag.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/argocd-sync.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Running a &lt;code&gt;kubectl describe&lt;/code&gt; on the pod also verifies that we have the correct image:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/kubectl-tag.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;This was a fun challenge, but I learned a lot from solving the problems I encountered and my entire Saturday flew by in an uninterrupted flow state. I had some good practice in setting up Azure pipelines, learned about Helm, and did my first implementation of GitOps. Not bad for a day&amp;rsquo;s work!&lt;/p&gt;
&lt;h1 id=&#34;links&#34;&gt;Links&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/mischavandenburg/static-quote-app&#34;&gt;Application GitHub repo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/mischavandenburg/static-quote-app-gitops&#34;&gt;GitOps repo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://minikube.sigs.k8s.io/docs/&#34;&gt;minikube&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://kind.sigs.k8s.io/&#34;&gt;kind&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://argo-cd.readthedocs.io/&#34;&gt;ArgoCD&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://redhat-scholars.github.io/argocd-tutorial/argocd-tutorial/02-getting_started.html&#34;&gt;tutorial to run ArgoCD in minikube&lt;/a&gt;&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>Tokens and Identity on the Internet</title>
		<link>http://mischavandenburg.com/articles/identity/</link>
		<pubDate>Sun, 18 Dec 2022 00:55:47 +0100</pubDate>
		
		<guid>http://mischavandenburg.com/articles/identity/</guid>
		<description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Have you ever thought about your identity on the internet? How does LinkedIn know it is you when you log in to LinkedIn? And when you allow LinkedIn to post to your Twitter, how does LinkedIn access your account and not your kindergarten teacher&amp;rsquo;s account?&lt;/p&gt;
&lt;p&gt;This is a &amp;ldquo;Mischa Explains&amp;rdquo; article where I attempt to explain a concept in my own words as simply as possible. I use the Feynman technique and pretend to explain it to a 12-year-old.&lt;/p&gt;
&lt;h1 id=&#34;identity&#34;&gt;Identity&lt;/h1&gt;
&lt;p&gt;The first step in this process is identity. You need a starting point; for many of us, this can be our Google account. You signed up for this account and probably verified this with your phone number.&lt;/p&gt;
&lt;p&gt;This relates to &lt;strong&gt;authentication&lt;/strong&gt;. Authentication is the process of verifying identity. You&amp;rsquo;ll need to provide the correct password when you log in to your Google account. You must give a valid password to log in to your account and access the resources. Google uses your password to &lt;strong&gt;authenticate&lt;/strong&gt; that it is you.&lt;/p&gt;
&lt;h1 id=&#34;authorization&#34;&gt;Authorization&lt;/h1&gt;
&lt;p&gt;Then we have &lt;strong&gt;authorization&lt;/strong&gt;. Authorization means granting access to particular resources. For example, let&amp;rsquo;s say you are working in the science classroom at school. In the classroom is a bookcase that everybody can use: it is not dangerous, and every student can take the books they need without asking for permission. In the back of the science classroom is a cabinet that contains chemicals. It would be very dangerous if everybody could go into the cabinet and take out the sulphuric acid. Not everybody might know how dangerous sulphuric acid is. That&amp;rsquo;s why the cabinet is locked.&lt;/p&gt;
&lt;p&gt;If you need something from the chemicals cabinet, you need to ask permission from the teacher. You need to be &lt;strong&gt;authorized&lt;/strong&gt; by the teacher to take out the sulphuric acid. When you make your request, the teacher may ask you questions to ensure you know what you are doing. He might even ask you for your school ID card because he has not seen you before. The teacher &lt;strong&gt;authenticates&lt;/strong&gt; you by asking for your school ID, and then he &lt;strong&gt;authorizes&lt;/strong&gt; you to take out the sulphuric acid.&lt;/p&gt;
&lt;h1 id=&#34;tokens&#34;&gt;Tokens&lt;/h1&gt;
&lt;p&gt;How do we accomplish this on the internet?&lt;/p&gt;
&lt;p&gt;To verify identities on the internet, we have identity providers. Google is an identity provider. Azure AD is also an identity provider. An open-source identity provider is Keycloak.&lt;/p&gt;
&lt;p&gt;Identity providers use &lt;em&gt;tokens&lt;/em&gt; to verify identity and authorize access to resources. There are two types of tokens: ID tokens and access tokens. And for each token, there is an associated protocol.&lt;/p&gt;
&lt;h2 id=&#34;id-tokens&#34;&gt;ID tokens&lt;/h2&gt;
&lt;p&gt;OpenID Connect, also known as OIDC, is an open standard for authentication. Identity providers have agreed with each other that they will use this standard. When you go through an OpenID workflow, the result is an ID token, proving that the user has been authenticated.&lt;/p&gt;
&lt;p&gt;Your school ID card is the ID token in our science class example. When you started at your school, you went through a registration process. Your parents probably handled this. Your name was written down, and the school verified that it was you by looking at your passport and talking to your parents. The result of this process was your school ID card, which you use to borrow books from the library. The school ID card proves that you are a student of that school and that you can use the facilities at the school.&lt;/p&gt;
&lt;h2 id=&#34;access-tokens&#34;&gt;Access tokens&lt;/h2&gt;
&lt;p&gt;These are specifically designed to allow access to a resource. For example, this resource could be a file on a server or a database.&lt;/p&gt;
&lt;p&gt;Access tokens are strictly for authorization and use the OAuth 2.0 standard.&lt;/p&gt;
&lt;p&gt;In our science class example, the token would be the key to the chemicals cabinet. The teacher authorizes you to access the cabinet and gives you the key to the cabinet.&lt;/p&gt;
&lt;h2 id=&#34;putting-it-together&#34;&gt;Putting it Together&lt;/h2&gt;
&lt;p&gt;Now let&amp;rsquo;s put it together with an example.&lt;/p&gt;
&lt;p&gt;You just created a new Facebook account and want to add all your friends. However, you have a Google account, and Facebook can use the contacts in your Google account to automatically add all of your friends.&lt;/p&gt;
&lt;p&gt;Your Google account can only be accessed by you, and your contacts are locked away behind a password. But it is possible to grant Facebook access to this.&lt;/p&gt;
&lt;p&gt;On Facebook, you select the &amp;ldquo;import contacts from Google&amp;rdquo; function. Facebook sends you to Google, and Google will ask you to log in. Google is the teacher in our science class example. Google needs you to &lt;strong&gt;authenticate&lt;/strong&gt; to prove that it is you. When this is done, Google generates an ID token using OIDC for Facebook: Google gives Facebook a school ID that it can use.&lt;/p&gt;
&lt;p&gt;Next, Facebook needs access to the contacts in your Google account. In our example, Facebook asks to take the sulphuric acid from the chemicals cabinet. You will see a menu that specifies what Facebook wants to do, and you need to give your permission. When you give your permission, Google generates an OAuth 2.0 token for Facebook. In other words, Google gives the key to the chemicals cabinet to Facebook, and Facebook is now authorized to take the sulphuric acid.&lt;/p&gt;
&lt;p&gt;When both of these tokens are generated, Facebook contacts Google and asks if it can take the sulphuric acid from the chemicals cabinet.&lt;/p&gt;
&lt;p&gt;Google, the teacher, asks Facebook for the school ID, and Facebook shows the ID card it received earlier. When Google is satisfied with the ID and successfully authenticates Facebook, it gives Facebook the key to the chemicals cabinet. Facebook is now authorized to take out the sulphuric acid. Facebook is now authorized to access the contacts in your Google account.&lt;/p&gt;
&lt;h1 id=&#34;links&#34;&gt;Links&lt;/h1&gt;
&lt;p&gt;You can use these resources to learn more about this topic:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=t18YB3xDfXI&#34;&gt;An Illustrated Guide to OAuth and OpenID connect&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=M4JIvUIE17c&#34;&gt;ID Tokens vs Access Tokens - Do you know the difference?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/azure/active-directory/develop/id-tokens&#34;&gt;Microsoft Learn: ID Tokens&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/azure/active-directory/develop/security-tokens&#34;&gt;Microsoft Learn: Security Tokens&lt;/a&gt;&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>Podcast Tip: The system that runs Norway&#39;s welfare payments</title>
		<link>http://mischavandenburg.com/articles/nav-podcast/</link>
		<pubDate>Fri, 02 Dec 2022 20:45:46 +0100</pubDate>
		
		<guid>http://mischavandenburg.com/articles/nav-podcast/</guid>
		<description>&lt;p&gt;An interesting podcast episode describing the system that runs Norway&amp;rsquo;s welfare payments. It was interesting to hear that they focus on open source and that everything runs one one big kubernetes cluster.&lt;/p&gt;
&lt;p&gt;It was also very inspiring to hear that they went from 4 nightly deployments a year to 1700 deployments a week.&lt;/p&gt;
&lt;p&gt;Link to the podcast episode:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://changelog.com/shipit/78&#34;&gt;The system that runs Norway&amp;rsquo;s welfare payments&lt;/a&gt;&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>Book Notes: Ikigai: The Japanese Secret to a Long and Happy Life</title>
		<link>http://mischavandenburg.com/articles/ikigai-book/</link>
		<pubDate>Tue, 18 Oct 2022 00:00:00 +0000</pubDate>
		
		<guid>http://mischavandenburg.com/articles/ikigai-book/</guid>
		<description>&lt;p&gt;I came across this little book while doing some research for my &lt;a href=&#34;http://mischavandenburg.com/articles/jiro-sushi&#34;&gt;Jiro Dreams of Sushi article.&lt;/a&gt; While scanning the book&amp;rsquo;s description, I was intrigued by this sentence: &amp;ldquo;the happiness of always being busy.&amp;rdquo; Although I work hard every day, I also enjoy ticking off the last item on my to-do list and enjoying some rest. Is there more happiness in being in constant activity?&lt;/p&gt;
&lt;h2 id=&#34;ikigai&#34;&gt;Ikigai&lt;/h2&gt;
&lt;blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&amp;ldquo;He who has a why to live for can bear with almost any how.&amp;rdquo;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Friedrich Nietzsche&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;/blockquote&gt;
&lt;p&gt;According to Japanese culture, everybody has a purpose in life: the ikigai. &amp;ldquo;Ikigai is the reason we get up in the morning.&amp;rdquo; The book explores this concept through interesting stories and brings related notions from various areas to explain ikigai to the Western mind.&lt;/p&gt;
&lt;p&gt;There are many different ikigai, and people can have several ikigai simultaneously. For example, some people have their vegetable garden as their ikigai, while others have drawing or calligraphy. &lt;a href=&#34;http://mischavandenburg.com/articles/jiro-sushi&#34;&gt;Jiro&lt;/a&gt; has making sushi as his ikigai. Even though many people have their work as their ikigai, it does not necessarily have to be the case. Ikigai can also be of a social nature, such as a family or local community.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2F3nw94z2pgadc432nw33p8qg5-wpengine.netdna-ssl.com%2Fwp-content%2Fuploads%2F2018%2F01%2Fwhat-is-ikigai-darling.png&amp;amp;f=1&amp;amp;nofb=1&amp;amp;ipt=f5fa9a17a2865d283af2bfdf8d978f1dcb0e9ff4e7fb646fb2c26c4963f95e77&amp;amp;ipo=images&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;retirement&#34;&gt;Retirement&lt;/h2&gt;
&lt;p&gt;When I watched Jiro Dreams of Sushi for the first time, I was surprised that Jiro still worked at his restaurant every day at age 85. This book explores that further.&lt;/p&gt;
&lt;p&gt;Apparently, many people never really retire in Japan. The concept of retirement, as we know it in the West, does not exist in the Japanese language: there is &amp;ldquo;no word in Japanese that means retire in the sense of &amp;ldquo;leaving the workforce for good&amp;rdquo; as in English.&amp;rdquo; People continue doing what they like doing as long as their health allows. They keep following their ikigai.&lt;/p&gt;
&lt;p&gt;This concept was very refreshing to me and had a profound influence on how I imagine my own future. After becoming more intentional about my career, I became interested in &lt;a href=&#34;https://www.investopedia.com/terms/f/financial-independence-retire-early-fire.asp&#34;&gt;FIRE&lt;/a&gt; and the possibility of retiring early. However, as I contemplated this strategy, I discovered that I didn&amp;rsquo;t want to stop working because I really enjoy my work.&lt;/p&gt;
&lt;p&gt;Why would I want to retire if I&amp;rsquo;m doing what I love? That was the whole point of switching my career to IT, and this is where Western culture can learn a lot from Japanese culture. In Japanese culture, there is more emphasis on aligning your career with your interests and continuing that passion well into old age.&lt;/p&gt;
&lt;blockquote&gt;
&lt;hr&gt;
&lt;p&gt;When to quit? The job you have worked so hard for? I never once hated my job. I fell in love with my work and gave my life to it. Even though I&amp;rsquo;m 85 years old, I don&amp;rsquo;t feel like retiring.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jiro&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;longevity&#34;&gt;Longevity&lt;/h2&gt;
&lt;p&gt;A large part of the book is about the residents of Okinawa: the island with the highest number of people 100 years old or older. The authors tell the story of their visit to the island to reveal the secret of the Okinawan&amp;rsquo;s long lives. It is not uncommon to see people working in the fields who are well into their eighties. The Okinawans freely share their secrets with us, and the authors do a great job translating the Japanese principles into actionable advice.&lt;/p&gt;
&lt;p&gt;Much of the advice is centered around dietary habits. Not only what to eat, but also how to eat it: &amp;ldquo;Okinawans stop eating when they feel their stomachs reach 80 percent of their capacity, rather than overeating&amp;rdquo;, a practice which is named &amp;ldquo;hara haci bu.&amp;rdquo; They consume a daily average of 1800 to 1900 calories, a significant difference from the 2200 to 3300 calories consumed by an average person in the US every day.&lt;/p&gt;
&lt;p&gt;Another theme that keeps returning is the crucial function of social groups for finding meaning in life, especially in old age: &amp;ldquo;It is customary in Okinawa to form close bonds within local communities. A moai is an informal group of people with common interests who look out for one another. For many, serving the community becomes part of their ikigai.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;This book may be a good resource if you are interested in longevity. Even though I only expected to read about the ikigai concept, it contains a surprisingly large amount of valuable advice and practical tips to live a longer and happier life.&lt;/p&gt;
&lt;h2 id=&#34;chock-full&#34;&gt;Chock-full&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;Ikigai: The Japanese Secret to a Long and Happy Life&amp;rdquo; is a small book that covers an astonishing amount of subjects. It covers topics such as meditation, flow states, and exercise methods such as Tai Chi and Qi Gong. The disadvantage is that it does not deeply cover any of these topics. But I think this book can be a very useful springboard for further research and a great introduction to many different subjects that can improve your life.&lt;/p&gt;
&lt;p&gt;It is a short read, but it contains a lot of wisdom, and I learned much from this book. It has changed the way I think of retirement and the way I approach my work. I am also very interested in health and longevity. Through the conversations with the centenarians of Okinawa, I received a lot of helpful tips, which I&amp;rsquo;m already applying to my daily life.&lt;/p&gt;
&lt;p&gt;Have I discovered the art of being busy? I believe I took this definition too literally when I started reading this book. I found that Okinawans lead active lives full of meaning but also take plenty of rest. Always being busy does not mean that you have to work yourself to death. However, it does mean that the secret to reaching a healthy old age is to keep doing what you love. There is no need to become sedentary and only sit in front of the TV when you turn 67. I think Western culture has a lot to learn in this area.&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>Book Notes: The Unicorn Project</title>
		<link>http://mischavandenburg.com/articles/unicorn-project/</link>
		<pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate>
		
		<guid>http://mischavandenburg.com/articles/unicorn-project/</guid>
		<description>&lt;p&gt;&lt;img src=&#34;https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/91UM5i4nirL.jpg&#34; alt=&#34;Unicorn Project&#34;&gt;&lt;/p&gt;
&lt;p&gt;This book is the sequel to &lt;a href=&#34;http://mischavandenburg.com/articles/phoenix-project&#34;&gt;the Phoenix project&lt;/a&gt;. Both books are set at Parts Unlimited, a fictitious company that supplies car parts to DIY mechanics and repair shops. Phoenix is a new system that Parts Unlimited has worked on for multiple years. It is supposed to handle order processing and communication between manufacturing, stores, and clients. Phoenix will also play a role in sales and marketing. The company has been gathering customer data for years, but it cannot use any of this data yet. Phoenix will enable it to generate targeted marketing campaigns from the data when it&amp;rsquo;s finished.&lt;/p&gt;
&lt;p&gt;But as we saw in the previous book, it is far from finished, and things go wrong all the time. The company is not doing well, the stock prices are falling, and they need an edge over the competition. Phoenix will be their edge, but they&amp;rsquo;ve been working on it for years. Eventually, management decided that Phoenix needed to be deployed in two weeks. But it is far from ready.&lt;/p&gt;
&lt;p&gt;The main character in the Unicorn project is Maxine, a senior developer who temporarily transferred to a different department. She had to work on the Phoenix project against her will because of an unfortunate situation that needed a scapegoat. However, Maxine decides to make the best out of it, and she&amp;rsquo;d like to begin with one thing: to get a Phoenix build going on her laptop.&lt;/p&gt;
&lt;p&gt;Very quickly, she finds it impossible to run a full build of the Phoenix project due to missing files and other elements. She is appalled and makes it her mission to get the build going, but she meets another hurdle every step of the way. Missing credentials. Missing binaries and libraries. And for each of these hurdles, she must submit a ticket with a different department. Very soon, she has over 20 tickets running with long waiting times. Just to get a build going on her machine so she can work! Dozens of developers were hired to work on the Phoenix project. But when she asks them if they&amp;rsquo;ve managed to get a build going yet, Maxine is horrified to discover that they&amp;rsquo;ve tried for several months but haven&amp;rsquo;t made any progress. Maxine has made more progress in a week.&lt;/p&gt;
&lt;blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&amp;ldquo;Everyone around here thinks features are important because they can see them in their app, on the web page, or in the API. But no one seems to realize how important the build process is. Developers cannot be productive without a great build, integration, and test process.&amp;rdquo;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unicorn Project&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;/blockquote&gt;
&lt;p&gt;After a few weeks, Maxine receives an invitation to have a drink with a group of people who are very interested in her. When she arrives at the bar, she meets the Rebellion: a group of developers, managers, and people from Operations, who are tired of the old organizational structure and want to make real changes. They think out of the box and experiment with new technologies, even though they are not authorized to do so.&lt;/p&gt;
&lt;p&gt;With the Rebellion, Maxine significantly improves the build and deployment process. They recognized that Phoenix actually never was being built in its entirety. Developers were always working on parts of the application. However, after a lot of struggle, they create a build process that enables each developer to become operational on his first day.&lt;/p&gt;
&lt;p&gt;This is the first step of a long series of exciting events that lead to Phoenix becoming a success. By the end of the book, they have a completely new development and testing process, and they can deploy changes to production without needing to take the entire application down. This allows them to create targeted marketing campaigns and respond to changes in the market. The first campaign was a huge success and generated the highest sales ever.&lt;/p&gt;
&lt;p&gt;Maxine&amp;rsquo;s struggle with the build process was an eye-opening experience for me. It gave me a very practical example of the need for DevOps principles to enable delivering value to customers. It is also something I recognize in my current organization. For example, projects can get stuck on a firewall change that needs to be approved by an external party. By implementing DevOps principles and arranging teams according to the &amp;ldquo;you build it, you run it&amp;rdquo; principle, teams can be responsible for the entire process from idea to production and therefore have a very short release cycle for their application.&lt;/p&gt;
&lt;p&gt;I thoroughly enjoyed the first part of the book. However, the second part was less engaging to me. It became long-winded and felt like butter spread over too much bread. The author demonstrates a high level of technical experience and knowledge through his descriptions of processes, deployments, and fictional applications. Although I understand the intention of making Parts Unlimited a believable company, I think it could have been accomplished with much less detail and words.&lt;/p&gt;
&lt;p&gt;The second part has more corporate drama, such as temporarily suspended managers without any clear reason. The focus shifts from a development and operations perspective to a managerial perspective. Maybe I will reread the book in a few years and this part will make a lot more sense to me then. The same happened when I reread the Phoenix project. I could not understand some aspects of the book, which became much clearer to me when I revisited it after gaining experience in the field.&lt;/p&gt;
&lt;p&gt;I highly recommend this book to anyone working as a developer, DevOps Engineer, or in operations, especially if you are starting your career. The book gave me a lot of insights into &amp;ldquo;the old way of working&amp;rdquo; and a better understanding of the need for DevOps principles in the modern IT landscape. However, make sure to read the Phoenix project first.&lt;/p&gt;
&lt;h2 id=&#34;the-unicorn-project-a-novel-about-developers-digital-disruption-and-thriving-in-the-age-of-data-by-gene-kim&#34;&gt;The Unicorn Project: A Novel about Developers, Digital Disruption, and Thriving in the Age of Data by Gene Kim&lt;/h2&gt;
</description>
	</item>
	
	<item>
		<title>I&#39;m In Love with my Work: Lessons from a Japanese Sushi Master</title>
		<link>http://mischavandenburg.com/articles/jiro-sushi/</link>
		<pubDate>Sat, 08 Oct 2022 00:00:00 +0000</pubDate>
		
		<guid>http://mischavandenburg.com/articles/jiro-sushi/</guid>
		<description>&lt;p&gt;Last week I watched &amp;ldquo;Jiro Dreams of Sushi&amp;rdquo; again. It must be the eighth time I revisited this piece of art. I have very little interest in sushi, but there is much more to this documentary. It was first recommended to me by my good friend Anders more than five years ago, but I couldn&amp;rsquo;t grasp its underlying life lessons the first time around.&lt;/p&gt;
&lt;p&gt;Even though I couldn&amp;rsquo;t fully understand the message, I was intrigued by it and kept returning to the documentary. Over the years, I managed to grasp more of its deeper meaning. The documentary is about Jiro: one of the best sushi chefs in the world. His tiny restaurant, located in a subway station, even received a 3 Michelin star rating. So how does a man operating from a subway restaurant become the best in the world? And what can a DevOps Engineer learn from a sushi chef?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://culinaireambiance.com/wp-content/uploads/2019/12/1_J8Bw5e9O9AfmLNdDKRRv6A-1.jpeg&#34; alt=&#34;Jiro, the Master&#34;&gt;&lt;/p&gt;
&lt;p&gt;Jiro is referred to as a shokunin, a Japanese cultural phenomenon that doesn&amp;rsquo;t have a direct translation into English. A shokunin is an artisan or a craftsman who has devoted his entire life to becoming a master of his craft. For example, there are shokunin carpenters, weavers, and blacksmiths. The shokunin achieve mastery by doing the same action over and over again and trying to improve with every repetition.&lt;/p&gt;
&lt;blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&amp;ldquo;Once you decide on your occupation, you must immerse yourself in your work. You have to fall in love with your work. Never complain about your job. You must dedicate your life to mastering your skill. That&amp;rsquo;s the secret of success and is the key to being regarded honorably.&amp;rdquo;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jiro&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;/blockquote&gt;
&lt;p&gt;We get to know Jiro as a man who is devoted to his occupation. He follows the same routine every day; he even gets on the train from the same position. He says he dislikes holidays and prefers to be at work. He used to get up at 5:00 and get home after 22:00. Even at age 85, he&amp;rsquo;s still working at the restaurant every day, simply because he doesn&amp;rsquo;t want to do anything else.&lt;/p&gt;
&lt;p&gt;But it&amp;rsquo;s not just about putting in long hours and working past the retirement age. It&amp;rsquo;s also about the mindset and the attitude that Jiro has adopted towards his craft:&lt;/p&gt;
&lt;blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&amp;ldquo;I&amp;rsquo;ve seen many chefs who are self-critical, but I&amp;rsquo;ve never seen another chef who is so hard on himself. He sets the standard for self-discipline. He&amp;rsquo;s always looking ahead. He&amp;rsquo;s never satisfied with his work. He&amp;rsquo;s always trying to find ways to make the sushi better or to improve his skills. Even now, that&amp;rsquo;s what he thinks about every day.&amp;rdquo;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Masuhiro Yamamoto, Food Critic.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;finding-my-craft&#34;&gt;Finding my Craft&lt;/h2&gt;
&lt;p&gt;It was hard to decide on my occupation. It took me 32 years and a lot of trial and error to find the answer. I have always envied people who knew they wanted to become a nurse since childhood.&lt;/p&gt;
&lt;p&gt;What occupation should I choose? I answered this question by answering another question: what do I like to do in my free time? The answer was clear: I tinkered with computers. I had already coded several websites and loved experimenting with game automation. I ran &amp;ldquo;bot farms&amp;rdquo; on Linux servers which I configured myself from the command line.&lt;/p&gt;
&lt;p&gt;I decided to make IT and tech my occupation. Fortunately for me, the job market was in my favor, and employers were much more willing to consider candidates without a formal background in IT. If you&amp;rsquo;d like to read more, I wrote about my journey into DevOps in &lt;a href=&#34;http://mischavandenburg.com/my-journey-into-devops-so-far&#34;&gt;this article&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;the-ways-of-the-shokunin&#34;&gt;The Ways of the Shokunin&lt;/h2&gt;
&lt;p&gt;After making the career change, I adopted the shokunin mindset and dedicated my life to mastering my craft. In practical terms, I needed to commit to devoting my time to my profession and avoid straying from it. Making this commitment wasn&amp;rsquo;t very difficult because I chose my career based on my free-time activities. It&amp;rsquo;s more about adopting a mindset of striving to make everything relate to each other. For example, I try to select hobby projects that directly relate to what I&amp;rsquo;m working with during the day. This way, my leisure activities will strengthen my professional skills, and my professional expertise will improve my hobby projects, creating a feedback loop that will eventually lead to results.&lt;/p&gt;
&lt;p&gt;However, sticking to one thing does not necessarily come naturally to me. I have a tendency to pick up many different hobbies and get very excited about them. First, I will become extremely interested in a particular subject. Then, after approximately three months, I put it aside and become excited about something else. This isn&amp;rsquo;t necessarily a case of &lt;a href=&#34;https://en.wikipedia.org/wiki/Shiny_object_syndrome&#34;&gt;Shiny Object Syndrome&lt;/a&gt; because I tend to return to these hobbies in a cyclical pattern. As I apply myself to learning the skill with a feverish intensity, I&amp;rsquo;m able to make a lot of progress during these bouts of obsession. But to the outside world, it might seem like I&amp;rsquo;m constantly changing my mind about what I want.&lt;/p&gt;
&lt;p&gt;I always considered this a negative character trait, but over the past few years, I&amp;rsquo;ve learned to embrace it and guide this tendency in the right direction. Because I chose IT as my occupation and DevOps as an area of specialization, I gave myself a broad scope of interest with many sub-skills to learn. If you look at the &lt;a href=&#34;https://roadmap.sh/devops&#34;&gt;DevOps Roadmap&lt;/a&gt;, you&amp;rsquo;ll see that a good DevOps Engineer must master many different skills.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s like I&amp;rsquo;ve given myself a large playground with a fence around it, full of exciting things to learn. I can go down a Python rabbit hole for a few months and improve my coding skills. Later, I find myself sucked into &lt;a href=&#34;https://mischavandenburg.com/linux-creativity/&#34;&gt;builing my own OS&lt;/a&gt; and learning more about Linux in the process. The fence around the playground isn&amp;rsquo;t locked, but I do my best to stay inside the fence. When, for example, I start getting the urge to get back into music production again, I consider that it will take up a few hours a day to get back on track. Investing these hours into something that brings me joy, but is also related to my occupation, would be a better option. Reflecting in this way keeps me focused on my goals.&lt;/p&gt;
&lt;p&gt;My website is another example of this fusion between professional and free-time activities. I love to write. It&amp;rsquo;s a relaxing activity, even though it is very challenging sometimes. After I learn about a new subject, I try to write about it. This is the best way I know to verify whether I&amp;rsquo;ve really understood the topic. When I sit down to write about something, I force myself to think clearly about it and to make sure everything aligns properly in my mind. When I cannot explain the concepts in a few clear sentences, I know I don&amp;rsquo;t fully understand it yet.&lt;/p&gt;
&lt;blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&amp;ldquo;Clear thinking becomes clear writing; one can&amp;rsquo;t exist without the other.&amp;rdquo;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;William Zinsser, On Writing Well&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;/blockquote&gt;
&lt;p&gt;Another way my blog supports my professional development is because I prefer to write my blog posts in neovim in the markdown format. Writing and editing text often involves moving a lot of words and paragraphs around. Because I use vim to do my writing, I&amp;rsquo;m also constantly practicing the keybinds I use for writing and editing code during my day job. I often learn a new motion for my blog writing, which I use the next day at work.&lt;/p&gt;
&lt;h2 id=&#34;never-finished&#34;&gt;Never Finished&lt;/h2&gt;
&lt;blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&amp;ldquo;All I want to do is make better sushi. I do the same thing over and over, improving bit by bit. There is always a yearning to achieve more. I&amp;rsquo;ll continue to climb, trying to reach the top, but no one knows where the top is. Even at my age, after decades of work, I don&amp;rsquo;t think I have achieved perfection. But I feel ecstatic all day. I love making sushi. That&amp;rsquo;s the spirit of the shokunin.&amp;rdquo;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jiro&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;/blockquote&gt;
&lt;p&gt;Jiro taught me never to be satisfied with my skills. If I desire to become a master of my craft, there will never be a point where I can lean back and think that I&amp;rsquo;ve learned enough. There&amp;rsquo;s always something to improve, which is why I chose an IT career. My thirst for learning cannot be quenched, and there&amp;rsquo;s always something to learn in this field.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fi.ytimg.com%2Fvi%2FR2L5IrkQTV0%2Fmaxresdefault.jpg&amp;amp;f=1&amp;amp;nofb=1&amp;amp;ipt=447c7c4a93a10b64191d653525bfe6ab6ab5aba0f3e9a1c64bc3617420bbc109&amp;amp;ipo=images&#34; alt=&#34;Never Finished&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;devotion&#34;&gt;Devotion&lt;/h2&gt;
&lt;p&gt;Although it might seem like a simple food documentary, do not be deceived. Jiro Dreams of Sushi is full of valuable life lessons. It&amp;rsquo;s one of the documentaries which I revisit regularly. It&amp;rsquo;s relaxing to watch, and I get hugely inspired by Jiro&amp;rsquo;s devotion to his craft and powerful teachings every time.&lt;/p&gt;
&lt;p&gt;Jiro&amp;rsquo;s guidance has changed my life. He made me realize that if I wished to become a master of my craft, I needed to devote my life to it. I changed my lifestyle, so the things I do in my free time strengthen my professional skills. I also became more mindful of the content I consume and the things I read, trying to keep it related to my occupation. He showed me the true meaning of the phrase &amp;ldquo;my work is my hobby.&amp;rdquo;&lt;/p&gt;
&lt;blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&amp;ldquo;Always look beyond and above yourself. Always try to improve on yourself. Always strive to elevate your craft. That&amp;rsquo;s what he taught me.&amp;rdquo;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Yoshikazu, Jiro&amp;rsquo;s oldest son.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;/blockquote&gt;
</description>
	</item>
	
	<item>
		<title>How and Why I Started Using Vim</title>
		<link>http://mischavandenburg.com/articles/how-started-vim/</link>
		<pubDate>Sun, 18 Sep 2022 00:00:00 +0000</pubDate>
		
		<guid>http://mischavandenburg.com/articles/how-started-vim/</guid>
		<description>&lt;p&gt;If you are just starting your Linux journey, you might have noticed that a few camps exist in the Linux world. Just like in any other area of life, it seems that groups of human beings enjoy dividing themselves instead of living in harmony. There are camps centered around Linux distributions (I use Arch, btw) but also around text editors.&lt;/p&gt;
&lt;h2 id=&#34;the-beginning&#34;&gt;The Beginning&lt;/h2&gt;
&lt;p&gt;The reason why I started to use vim is rather practical. During the first part of my traineeship, I had access to subscriptions on AWS and Azure to experiment with virtual machines. This was a perfect place to learn to work with Ansible. Many of the labs involved setting up a few virtual machines, and I destroyed many VMs when I made some big mistakes in the configuration.&lt;/p&gt;
&lt;p&gt;I was constantly working on new environments, and quickly it became very tiring to set everything up to connect remotely with Visual Studio Code every time.&lt;/p&gt;
&lt;p&gt;So I just started to edit the text files on the virtual machines with the included editor, which happened to be vim.&lt;/p&gt;
&lt;h2 id=&#34;obsession-in-its-infancy&#34;&gt;Obsession in its Infancy&lt;/h2&gt;
&lt;p&gt;When you first use vim, it is a rather disorienting experience. But in every tutorial, I was told it would be difficult in the beginning but much faster and more effective in the end. I found this very appealing because I like to do things the hard way and challenge myself.&lt;/p&gt;
&lt;p&gt;I discovered that there were people out there who did all of their text editing and coding in vim. I met programmers who refuse to use anything else and people who write entire books in vim. So there had to be something to it.&lt;/p&gt;
&lt;p&gt;It also fitted very well with my intention of working on the command line as much as possible and moving away from GUI applications whenever possible. I like to move in this direction because I love the idea of controlling your entire workflow with your keyboard instead of using your mouse, and vim fits perfectly into this picture.&lt;/p&gt;
&lt;h2 id=&#34;what-i-like-after-nine-months&#34;&gt;What I like after Nine Months&lt;/h2&gt;
&lt;p&gt;At this point, I&amp;rsquo;ve been using vim as my primary text editor for about nine months. In my current job, I work a lot with yaml files stored in private git repositories.&lt;/p&gt;
&lt;p&gt;I only work with these files from the command line, and I don&amp;rsquo;t have any other code editor installed. I use ripgrep and fzf (fuzzy file finder) to search through the files, and I use neovim to edit them. When I need to search for files from within vim, I use the awesome Telescope plugin.&lt;/p&gt;
&lt;p&gt;In these months, I&amp;rsquo;ve picked up a few tricks, and I am starting to see the power of vim. The best thing I like about it is that I don&amp;rsquo;t have to leave my terminal window to do the tasks I need to do. Instead, I can search through the files I need to work with, open them, make adjustments, and commit them to the repository. Then I enter the command to run the ansible playbook, and it all happens in the same window, and I don&amp;rsquo;t have to lift my fingers from the keyboard.&lt;/p&gt;
&lt;h4 id=&#34;keyboard-shortcuts&#34;&gt;Keyboard Shortcuts&lt;/h4&gt;
&lt;p&gt;Now that I am gaining more experience with vim, I&amp;rsquo;m picking up more advanced usages that significantly improve my workflow. For example, &amp;ldquo;da(&amp;rdquo; meaning &amp;ldquo;delete around parentheses&amp;rdquo; to quickly delete the text between two parentheses. Or &amp;ldquo;da&amp;lt;&amp;rdquo; to very quickly delete HTML tags. Another great feature is the visual block mode, where I can add comment tags to many lines simultaneously, for example.&lt;/p&gt;
&lt;h4 id=&#34;searching-and-navigation&#34;&gt;Searching and Navigation&lt;/h4&gt;
&lt;p&gt;Navigating large text files has become incredibly quick since I started using vim. Of course, it takes some getting used to, but it is a lovely experience to open a file, press / to search and enter the keyword and immediately arrive at the point I need to be—no scrolling with the mouse and no need to lift my hands from the keyboard.&lt;/p&gt;
&lt;p&gt;I also love the ability to jump from sentence to sentence using ) or paragraphs using }.&lt;/p&gt;
&lt;h4 id=&#34;multiple-files&#34;&gt;Multiple Files&lt;/h4&gt;
&lt;p&gt;It takes a little while to get used to, but when you get into it, it is effortless to open up two files at a time if you need information from both. Often I need data from 4 or more files, and opening them quickly with keyboard commands has significantly improved my workflow speed.&lt;/p&gt;
&lt;h4 id=&#34;customization&#34;&gt;Customization&lt;/h4&gt;
&lt;p&gt;One of the things I enjoy most about vim is the ability to customize it exactly to my needs. I&amp;rsquo;m completely in charge of the plugins which are loaded into vim and which colors it uses, and this appeals a lot to me. However, it can be rather overwhelming in the beginning. To be honest, it is still overwhelming after ten months. It can be tough to get an idea of where to start, which plugins you need, and which settings you need to change.&lt;/p&gt;
&lt;p&gt;I just started with the base install of vim and started from there. Every time I required a particular functionality, I searched around to see if a plugin was available. Very often, someone out there had the same problem as you and created a plugin for it. For example, I recently installed a plugin for using emojis in vim 😄&lt;/p&gt;
&lt;h2 id=&#34;how-to-get-started&#34;&gt;How to Get Started&lt;/h2&gt;
&lt;p&gt;The short answer is to simply start using vim for all of your text editing, whether it be coding or writing for pleasure. It is a cliche to say, but it will be hard in the beginning, but I promise you it will pay off in the end.&lt;/p&gt;
&lt;p&gt;The second thing I&amp;rsquo;d recommend is to run vimtutor on a Linux machine. Do this once a day for a couple of weeks, and you&amp;rsquo;ll know how to edit text files on any Linux system for the rest of your life, which is a precious skill.&lt;/p&gt;
&lt;p&gt;Finally, don&amp;rsquo;t spend too much time reading about all the available plugins. Your needs will become apparent to you as you start to use vim for all of your tasks, and you can search for plugins to address those needs. This way, you start with a minimal editor, which you&amp;rsquo;ll build according to your needs.&lt;/p&gt;
&lt;h1 id=&#34;good-luck&#34;&gt;Good Luck!&lt;/h1&gt;
</description>
	</item>
	
	<item>
		<title>Book Notes: The Phoenix Project</title>
		<link>http://mischavandenburg.com/articles/phoenix-project/</link>
		<pubDate>Fri, 16 Sep 2022 00:00:00 +0000</pubDate>
		
		<guid>http://mischavandenburg.com/articles/phoenix-project/</guid>
		<description>&lt;p&gt;&lt;img src=&#34;https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/914-sUgELZL.jpg&#34; alt=&#34;Phoenix Project&#34;&gt;&lt;/p&gt;
&lt;p&gt;When I started my DevOps traineeship, I borrowed this book from my boss and read it from cover to cover. I loved the story and the characters; it helped me understand &amp;ldquo;the old way&amp;rdquo; of doing things and the merits of implementing DevOps principles.&lt;/p&gt;
&lt;p&gt;I reread the book ten months later. In the meantime, I&amp;rsquo;ve learned many new skills and technologies and started working full-time as a DevOps engineer.&lt;/p&gt;
&lt;p&gt;Not surprisingly, it made a lot more sense to me this time, and I&amp;rsquo;m sure it will be even better when I reread it a few years later. In this article, I&amp;rsquo;ll share my thoughts and notes on the book.&lt;/p&gt;
&lt;h2 id=&#34;the-story&#34;&gt;The Story&lt;/h2&gt;
&lt;p&gt;The main character is Bill Palmer, a mid-level IT manager in a manufacturing company called Parts Unlimited. Within a few pages, he is called into the CEO&amp;rsquo;s office, and he is promoted to the VP of Operations, putting him in charge of IT, much against his own will or desire.&lt;/p&gt;
&lt;p&gt;The situation Bill enters is a humorously chaotic one. We are thrown straight into a Sev 1 incident where managers point fingers and shout at each other. We quickly get the impression that this is a dysfunctional department that only performs tasks for the manager who shouts the loudest while fighting off crippling outages.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It’s like the Wild West out here. We’re mostly shooting from the hip.”&lt;br&gt;
&lt;em&gt;The Phoenix Project&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The bulk of the story revolves around how Bill, together with his team of managers, Wes, Patty, and John, manage to turn this chaos into a department that does work according to a streamlined plan in a much more predictable manner.&lt;/p&gt;
&lt;p&gt;To achieve this goal, Bill is introduced to Erik, a prospective board member of the company. Erik becomes Bill&amp;rsquo;s mentor and guides Bill through the process of creating order in the chaos. Their interaction reminds me of Zen masters training their disciples by asking deep questions which don&amp;rsquo;t have an immediately apparent answer.&lt;/p&gt;
&lt;h2 id=&#34;master--disciple&#34;&gt;Master &amp;amp; Disciple&lt;/h2&gt;
&lt;p&gt;Erik takes Bill to the manufacturing plant of Parts Unlimited and tries to impress upon Bill that manufacturing planning principles from Lean can be applied to IT work. Erik argues that an IT department could be structured like a factory production line, but Bill is not ready to accept this.&lt;/p&gt;
&lt;p&gt;A fundamental notion from manufacturing principles is that work should always be moving forwards along the production line, never backward. But unfortunately, this is very often the case in the &amp;ldquo;old&amp;rdquo; way of working: the development team works on an application for several months, and when they are finished with it, they throw it over the fence to the Operations people, whose job it is to deploy the application.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One of the developers had actually walked in a couple of minutes ago and said, “Look, it’s running on my laptop. How hard can it be?”&lt;br&gt;
&lt;em&gt;The Phoenix Project&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;However, as we see happening time after time in the book, usually the application is incompatible with the infrastructure it is deployed to. As a result, the application needs to go back to development. According to manufacturing theory, this is a situation where work goes backward through the production line, which we must avoid at all costs.&lt;/p&gt;
&lt;h2 id=&#34;implementation&#34;&gt;Implementation&lt;/h2&gt;
&lt;p&gt;Erik challenges Bill to start doing ten deployments a day instead of one deployment every nine months. Understandably, this is a ridiculous notion to Bill. The last few deployments were disastrous events that required his entire department to pull all-nighters through the weekend, and still, the stores were not managing to process all orders and payments.&lt;/p&gt;
&lt;p&gt;However, Bill takes his mentor&amp;rsquo;s advice and figures out a way to do it together with his team. One of the main problems they uncovered was the inconsistent deployment and production environments.&lt;/p&gt;
&lt;p&gt;The solution to this problem was to involve the operations people in the development stage right from the beginning, so the development environment matched the production environment exactly. The environments were standardized and put in code with version control, and things started progressing quickly.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As Wes talks, I think about Erik challenging me to think like a plant manager as opposed to a work center supervisor. I suddenly realize that he probably meant that I needed to span the departmental boundaries of Development and IT Operations.
&lt;em&gt;The Phoenix Project&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is just one of the problems addressed by melting away the fence between Development and Operations. By the end of the book, the two camps started to work together much better. They come closer to the target of 10 deployments a day, and the DevOps way of working was born.&lt;/p&gt;
&lt;h2 id=&#34;closing-thoughts&#34;&gt;Closing Thoughts&lt;/h2&gt;
&lt;p&gt;I think this book is a must-read for anyone considering entering the DevOps field or anyone already working with DevOps.&lt;/p&gt;
&lt;p&gt;As a nerd who loves structure and organization, the theme of the story is incredibly entertaining and satisfying to me. The authors excellently capture the transition from an utterly disorganized situation to a predictable environment with happy co-workers. Actually, I&amp;rsquo;m a little embarrassed by how much joy this transition brings me.&lt;/p&gt;
&lt;p&gt;Especially the second time around, it helped me better understand the underlying principles that enable the DevOps way of working in an organization. Moreover, it paints a great picture of how an organization can change for the better by embracing DevOps principles and how these changes express themselves in the improved quality and speed of software development and deployment. All of these advantages lead to delivering better value to the customer, which is the core focus of any productive and creative endeavor involving customers and end users.&lt;/p&gt;
&lt;h2 id=&#34;the-phoenix-project-written-by-gene-kim-kevin-behr-george-spafford&#34;&gt;The Phoenix Project, written by Gene Kim, Kevin Behr, George Spafford&lt;/h2&gt;
</description>
	</item>
	
	<item>
		<title>Certified Kubernetes Administrator (CKA) Exam Tips</title>
		<link>http://mischavandenburg.com/articles/cka-tips/</link>
		<pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate>
		
		<guid>http://mischavandenburg.com/articles/cka-tips/</guid>
		<description>&lt;p&gt;I recently obtained my CKA certification. I started this certification journey with zero knowledge of Kubernetes. However, I was already working as a DevOps Engineer, and I know a fair bit of Linux. I daily drive Arch Linux and have LPIC-1 certification. It was handy to know where files are located on Linux systems and how to interact with systemd services. I also knew yaml quite well because I work with Ansible daily. I passed on my first try, and I did one session of killer.sh.&lt;/p&gt;
&lt;h3 id=&#34;my-preparation&#34;&gt;My preparation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.udemy.com/course/certified-kubernetes-administrator-with-practice-tests/&#34;&gt;KodeKloud CKA Course&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://killer.sh/&#34;&gt;Killer.sh Mock Exam&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://killercoda.com/killer-shell-cka&#34;&gt;Killercoda&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I kept track of the time I spent on this certification. In total, I spent 80 hours on study and practice.&lt;/p&gt;
&lt;h3 id=&#34;in-hindsight&#34;&gt;In Hindsight&lt;/h3&gt;
&lt;p&gt;I spent too much time repeating things during the KodeKloud course. This is the one thing I would do differently if I could start over. I went over some modules multiple times and kept meticulous notes. However, I have hardly used any of those notes. But they will be nice to have for the future.&lt;/p&gt;
&lt;p&gt;I learned most from the killer.sh exams. So I would advise you to go through the KodeKloud course and do all the exercises, but don&amp;rsquo;t spend too much time repeating stuff. If you don&amp;rsquo;t understand the topic at all, it is, of course, necessary to repeat it. But you don&amp;rsquo;t need to know all the details.&lt;/p&gt;
&lt;h3 id=&#34;killersh&#34;&gt;Killer.sh&lt;/h3&gt;
&lt;p&gt;After I finished the KodeKloud course, I purchased the exam voucher and started the killer.sh on Saturday morning. I wanted to simulate the exam experience as much as possible, so I set the timer and did not allow myself to stand up for two hours. My first round was humiliating. I only managed to get 24 out of 125 points. A little shocked by the experience, I spent the whole Saturday going through all the solutions of the exercises that killer.sh provides. The explanations they give are extensive, and I found them helpful. Saturday evening, I went out for dinner with friends, and on Sunday morning, I passed killer.sh. I spent the whole Sunday studying the solutions more and more, and on my last try on Sunday evening, I scored 115 out of 125.&lt;/p&gt;
&lt;h2 id=&#34;tips&#34;&gt;Tips:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;I know tmux quite well and used it extensively during the killer.sh, but it was not necessary during the exam. No need to learn it if you don&amp;rsquo;t know it already.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Knowing vim well will save you a lot of time at the exam. For example, dG to delete all lines until the end of the file from your current location. Run &amp;ldquo;vimtutor&amp;rdquo; on a Linux system to learn the basics.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You cannot use bookmarks. Learn how to search the docs efficiently. One handy one I figured out was to control + F and enter &amp;ldquo;kind: Pod&amp;rdquo; or &amp;ldquo;kind: PersistentVolume&amp;rdquo; to immediately go to the example YAML.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;my exam environment did not need much extra configuration. All I added to my .bashrc was alias v=vim and export do=&amp;quot;&amp;ndash;dry-run=client -o yaml&amp;quot; so you can use &amp;ldquo;k run Nginx $do &amp;gt; Nginx.YAML&amp;rdquo;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The exam environment is not as bad as people make it out to be on the internet. There is a little delay while scrolling through the docs in the browser, but working in the terminal didn&amp;rsquo;t give me any problems. Get used to the environment on killer.sh, and there should not be any surprises in the real exam environment.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Skip questions you cannot solve immediately. But don&amp;rsquo;t spend time reviewing all the questions, sorting by the highest % and doing those first. You will lose a lot of time evaluating all of these questions. It is much better to solve the questions during your first pass through and skip the ones you cannot immediately solve.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When the 120-minute timer ran out, I was presented with a screen that said &amp;ldquo;quit&amp;rdquo; or &amp;ldquo;request more time.&amp;rdquo; I was pretty sure I could not get more time for this exam, so I just pressed &amp;ldquo;quit.&amp;rdquo; After I pressed quit, the application closed immediately, and there was no confirmation whatsoever that they received my exam results or anything. This was extremely disorienting, and I was left doubting if I had done it correctly. Eventually, I could see in the Linux Foundation portal that my exam was in Grading status.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Speed is of the essence. An hour before my exam, I used killercoda to get into the mood and get things up to speed. Learn to solve things quickly and don&amp;rsquo;t spend time having to arrange terminal windows on your screen or stumbling around in vim. You cannot afford to lose time on these things.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Finally, this video is an excellent summary of all the necessary tips and information: &lt;a href=&#34;https://www.youtube.com/watch?v=8VK9NJ3pObU&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
	</item>
	
	<item>
		<title>Building my Own OS: Linux as a Creative Activity</title>
		<link>http://mischavandenburg.com/linux-creativity/</link>
		<pubDate>Sat, 10 Sep 2022 12:22:28 +0000</pubDate>
		
		<guid>http://mischavandenburg.com/linux-creativity/</guid>
		<description>&lt;p&gt;&lt;em&gt;NOTE: In this article, I use a rather broad definition of “Operating System.” I do not intend to appear as if I wrote and compiled my own Linux kernel, nor do I understand the inner workings of the kernel written in C. Instead, with “building my OS from scratch,” I intend to convey that I used a minimal Linux distribution as a starting point and started building from there.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;introduction&lt;/h2&gt;
&lt;p&gt;I started using GNU/Linux as a daily driver about six months ago, and I have not regretted the decision ever since. There has not been a single use case where I needed to use Windows for anything at all.&lt;/p&gt;
&lt;p&gt;As I was getting more used to daily driving Linux, I noticed how much I enjoyed the ability to customize my operating system and workflow. Finally, after spending a weekend going down the customization rabbit hole, I had a good-looking terminal and customized neovim to perform as I needed it.&lt;/p&gt;
&lt;p&gt;Not much later, I came across Arch Linux and the idea of building your own operating system from the ground up. I was instantly intrigued and knew I wanted to do the same. A few months have passed since I first came across Arch Linux, and now I am writing this blog post in neovim on my custom OS that I created from scratch. The font, the spacing, the colors, everything is exactly how I like it, and I love using it.&lt;/p&gt;
&lt;p&gt;When you first install Arch Linux, all you get is a black screen with a blinking cursor. However, the experience of creating a fully functional graphical environment from “nothing” has been extremely satisfying, and I learned so much about GNU/Linux in the process. I also realized that this could be seen as a creative activity, like a painter creating his masterpiece from a blank canvas or a sculptor carefully chipping away at a block of marble.&lt;/p&gt;
&lt;h2 id=&#34;not-just-graphics&#34;&gt;not just graphics&lt;/h2&gt;
&lt;p&gt;When I say customization, I am not just referring to the visual aspects of the operating system. The things going on “under the hood” must also be carefully configured when you use a minimal distro such as Arch Linux.&lt;/p&gt;
&lt;p&gt;Arch Linux comes with very few packages preinstalled, and every time you wish to add something to your system, you need to install it and enable the service in systemd. For example, after I did the installation and created my user account, I needed to run a command with root privileges. To my great surprise, even the “sudo” command was unavailable and needed to be installed.&lt;/p&gt;
&lt;p&gt;This is the aspect I learned most from. Whenever I desired a certain functionality from my operating system, I needed to install and enable it. This has given me a much better understanding of the processes and daemons running on my system. It has also given me a greater appreciation of all the elements needed to provide a working environment.&lt;/p&gt;
&lt;h2 id=&#34;graphic-violence&#34;&gt;graphic violence&lt;/h2&gt;
&lt;p&gt;When you create an Arch Linux installation USB and boot it up, you are greeted with a command line and nothing else.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/creative1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;When you install something more beginner-friendly, such as Ubuntu or Manjaro KDE, your installation will include a graphical desktop environment. But on Arch Linux, you must install and configure this yourself. Furthermore, to be able to render a graphical environment, you will also need to install and configure a display server such as Xorg.&lt;/p&gt;
&lt;p&gt;When I started on my journey, I intended to create something that used minimal resources with a minimal look. Having used GNOME on Manjaro for a few months, I was very satisfied, but I wanted to try a tiling window manager to shave down even more resource usage. After some research, I ended up with the Awesome Window Manager. Here are some screenshots of the final result:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/creative2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;This is what my desktop looks like when I boot up.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/creative3.png&#34; alt=&#34;&#34;&gt;
Here I’m editing my window manager configuration file, while I have a browser open and keep an eye on my system resources&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/creative4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;my music listening setup, using mpd + ncmpcpp, cava and sptlrx. the lyrics are shown in real time as the music is played.&lt;/p&gt;
&lt;h2 id=&#34;creativity&#34;&gt;creativity&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://dictionary.cambridge.org/dictionary/english&#34;&gt;The Cambridge Dictionary&lt;/a&gt; defines creativity as “the ability to produce original and unusual ideas, or &lt;strong&gt;to make something new or imaginative&lt;/strong&gt;.”&lt;/p&gt;
&lt;p&gt;When you embark on a journey, such as creating your operating system, you will probably start with a particular intention or a goal that you will work towards. With this goal in mind, you can start searching for the tools and color schemes you need to create the system that you have in mind. The result is a unique combination of tools, colors, fonts, and programs specifically tailored to your needs and wants and chosen by you.&lt;/p&gt;
&lt;p&gt;Is this any different from a painter starting with a blank canvas or a musician starting with a fragment of a melody, ending up with a complete symphony? Entering commands into a computer terminal might not strike everybody as a creative activity. Still, I have found that it is a very effective and satisfying way of expressing myself and creating something I love to use daily. As an IT professional, I spend most of my time behind my computer. Doesn’t it make sense to put effort into building something customized to your needs?&lt;/p&gt;
&lt;h4 id=&#34;resources&#34;&gt;resources&lt;/h4&gt;
&lt;p&gt;If you want to start building your own OS, I recommend these resources:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://archlinux.org/&#34;&gt;Arch Linux&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wiki.archlinux.org/&#34;&gt;Arch Wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.reddit.com/r/unixporn/&#34;&gt;r/unixporn – a subreddit about customization&lt;/a&gt;&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>How to Upgrade Java and Jenkins on Ubuntu 18.04</title>
		<link>http://mischavandenburg.com/how-to-upgrade-java-and-jenkins-on-ubuntu-18-04/</link>
		<pubDate>Tue, 19 Jul 2022 18:01:26 +0000</pubDate>
		
		<guid>http://mischavandenburg.com/how-to-upgrade-java-and-jenkins-on-ubuntu-18-04/</guid>
		<description>&lt;p&gt;Last week I upgraded Jenkins to the latest version on the server infrastructure at work. Starting with the Jenkins 2.357 release, Java 11 or Java 17 &lt;a href=&#34;https://www.jenkins.io/blog/2022/06/28/require-java-11/&#34;&gt;will be required to run Jenkins&lt;/a&gt;. Also, the upcoming LTS release will require Java 11.&lt;/p&gt;
&lt;p&gt;This means that I also needed to update Java on our Jenkins servers. Here are the steps that I did to perform the Jenkins and Java upgrade.&lt;/p&gt;
&lt;p&gt;SSH into the server and stop the service. Then get the latest upgrades for your server, which is good practice:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service jenkins stop
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get upgrade
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Depending on your setup, the apt-get upgrade command might upgrade Jenkins to the latest version that does not require Java 11+. In my case, that was 3.346.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;When you get a question about updating your current config file, take the default option. This option keeps your current configuration.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;However, if your Jenkins is installed from a binary or another source, you might need to upgrade Jenkins to 3.346 using the Jenkins.war file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd /usr/share/jenkins
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mv jenkins.war jenkins.war.old
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget https://updates.jenkins-ci.org/latest/jenkins.war
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service jenkins start
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When you start Jenkins, it will be updated to the latest version that does not require Java 11 or higher. You will notice that there will be a new folder called migrate in /usr/share/jenkins , and the jenkins.war is now located in /usr/share/java&lt;/p&gt;
&lt;p&gt;This is where I got confused because it did not patch to the latest version, only up to 3.346 and the jenkins.war file was no longer being updated from the /usr/share/jenkins folder.&lt;/p&gt;
&lt;p&gt;The reason is that this update moves the .war file to the /usr/share/java directory.&lt;/p&gt;
&lt;h1 id=&#34;java&#34;&gt;java&lt;/h1&gt;
&lt;p&gt;To get Jenkins to the latest version, we need to install or update Java and check if it has worked:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get install default-jre
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;java -version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now that you have updated the java version, you are ready to update Jenkins to the latest version.&lt;/p&gt;
&lt;p&gt;Notice that we use the /usr/share/java folder now, instead of /usr/share/jenkins&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service jenkins stop
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd /usr/share/java
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mv jenkins.war jenkins.war.old
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget https://updates.jenkins-ci.org/latest/jenkins.war
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;service jenkins start
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;nodes&#34;&gt;nodes&lt;/h1&gt;
&lt;p&gt;When I accessed the Jenkins GUI, everything seemed fine, and my version was up to 3.358.&lt;/p&gt;
&lt;p&gt;However, I noticed that the build nodes were all offline. When inspecting the logs, I saw the following error:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;java.io.EOFException
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	at java.base/java.io.ObjectInputStream$PeekInputStream.readFully&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ObjectInputStream.java:2905&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	at java.base/java.io.ObjectInputStream$BlockDataInputStream.readShort&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ObjectInputStream.java:3400&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	at java.base/java.io.ObjectInputStream.readStreamHeader&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ObjectInputStream.java:936&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	at java.base/java.io.ObjectInputStream.&amp;lt;init&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ObjectInputStream.java:379&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	at hudson.remoting.ObjectInputStreamEx.&amp;lt;init&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ObjectInputStreamEx.java:49&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	at hudson.remoting.Command.readFrom&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Command.java:142&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	at hudson.remoting.Command.readFrom&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Command.java:128&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	at hudson.remoting.AbstractSynchronousByteArrayCommandTransport.read&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;AbstractSynchronousByteArrayCommandTransport.java:35&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	at hudson.remoting.SynchronousCommandTransport$ReaderThread.run&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;SynchronousCommandTransport.java:61&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Caused: java.io.IOException: Unexpected termination of the channel
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	at hudson.remoting.SynchronousCommandTransport$ReaderThread.run&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;SynchronousCommandTransport.java:75&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Observing that the error had something to do with Java, I ssh’d into the build nodes and updated Java there as well with the same command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get install default-jre
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After updating Java on the build node, head back to the GUI on the master node and restart the build node.&lt;/p&gt;
&lt;p&gt;It should now be online again.&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>5 Reasons Why I Changed my Career to IT in my Thirties</title>
		<link>http://mischavandenburg.com/5-reasons-why-i-changed-my-career-to-it-in-my-thirties/</link>
		<pubDate>Mon, 04 Jul 2022 20:04:33 +0000</pubDate>
		
		<guid>http://mischavandenburg.com/5-reasons-why-i-changed-my-career-to-it-in-my-thirties/</guid>
		<description>&lt;p&gt;In this post, I’d like to share the five main reasons why I changed my career to IT in my thirties. Making a career change can be daunting, especially when you are past your twenties, and employers can get more skeptical of hiring and training you. However, when I passed my twenties and became more serious and intentional about my life and career, I decided to take the plunge and hope for the best. These are listed in no particular order.&lt;/p&gt;
&lt;h2 id=&#34;1-job-opportunities&#34;&gt;#1 job opportunities&lt;/h2&gt;
&lt;p&gt;IT has always been a field with many job opportunities, and with the current movements of digitalization and automation, there is no sign that it will slow down.&lt;/p&gt;
&lt;p&gt;According to &lt;a href=&#34;https://www.bls.gov/ooh/computer-and-information-technology/home.htm&#34;&gt;the U.S. Bureau of Labor Statistics&lt;/a&gt;, “Employment in computer and information technology occupations is projected to grow 13 percent from 2020 to 2030, faster than the average for all occupations. These occupations are projected to add about 667,600 new jobs. Demand for these workers will stem from greater emphasis on cloud computing, the collection and storage of big data, and information security.”&lt;/p&gt;
&lt;p&gt;The situation is no different here in the Netherlands. Currently, there is a shortage of people in IT, and employers are much more willing to provide training to motivated individuals to make a change.&lt;/p&gt;
&lt;h2 id=&#34;2-remote-work&#34;&gt;#2 remote work&lt;/h2&gt;
&lt;p&gt;I think remote work is one of the best parts of living in post-pandemic 2022. I am an introvert, and having a quiet, stable space without distractions, which is the same from day to day, is a huge boost to my productivity.&lt;/p&gt;
&lt;p&gt;Secondly, I think it is crucial to be mindful of your posture and body while working at a desk. For example, I am dependent on having a standing desk which I adjust more than ten times a day. I also need a chair suitable for my body type to avoid getting stiff and getting a sore back. Although some offices take care of providing these facilities to their employees, I think it is beneficial to invest in your own setup, which you can tailor to your own needs.&lt;/p&gt;
&lt;p&gt;Thirdly, working from anywhere in the world is a massive advantage. I am not very interested in living a digital nomad lifestyle, working from a MacBook in coffee shops, but I think it’s great that you can spend some time abroad while working from that location.&lt;/p&gt;
&lt;h2 id=&#34;3-personal-interest&#34;&gt;#3 personal interest&lt;/h2&gt;
&lt;p&gt;This is a big one. You should not change your career to IT just because it earns well or because you think you can work from the beach in Thailand. I have been tinkering with computers and programming languages since I was a kid and have always enjoyed it. I always found myself “the computer guy” in groups of friends or colleagues.&lt;/p&gt;
&lt;p&gt;However, for some reason, I never managed to make my career out of it until now, and I get a lot of satisfaction from my work every day after I made the change.&lt;/p&gt;
&lt;h2 id=&#34;4-high-income&#34;&gt;#4 high income&lt;/h2&gt;
&lt;p&gt;It is no secret that tech jobs are some of the best paying jobs in the U.S., having&lt;a href=&#34;https://www.bls.gov/oes/current/oes_nat.htm#15-0000&#34;&gt; a mean wage of $99,860&lt;/a&gt;. And if you work your way up into management, there are even higher salaries. Here &lt;a href=&#34;https://www.nationaleberoepengids.nl/salaris/ict&#34;&gt;in the Netherlands&lt;/a&gt;, it is also a financially sound choice, with a mean wage of €47.200&lt;/p&gt;
&lt;h2 id=&#34;5-fast-changing-field&#34;&gt;#5 fast-changing field&lt;/h2&gt;
&lt;p&gt;IT is a broad field with many little niches you can get into, and every niche is constantly developing. Being in IT means you will need to stay on board by continuing to learn the new technologies and languages to keep on track.&lt;/p&gt;
&lt;p&gt;This is also what makes it exciting to me, being a life-long learner. There is always more to learn and some cutting-edge technology to become familiar with, which can improve your workflow and your deployments.&lt;/p&gt;
&lt;h2 id=&#34;links&#34;&gt;links:&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.bls.gov/ooh/computer-and-information-technology/home.htm&#34;&gt;Computer and Information Technology Occupations – US Bureau of Labor Statistics&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.bls.gov/oes/current/oes_nat.htm#15-0000&#34;&gt;May 2021 National Occupational Employment and Wage Estimates&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.nationaleberoepengids.nl/salaris/ict&#34;&gt;Salaries in IT - Dutch&lt;/a&gt;&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>How To Move Steam Game Files To a Separate Hard Drive on Linux</title>
		<link>http://mischavandenburg.com/how-to-move-your-steam-game-files-to-a-separate-hard-drive-on-linux/</link>
		<pubDate>Thu, 26 May 2022 09:03:44 +0000</pubDate>
		
		<guid>http://mischavandenburg.com/how-to-move-your-steam-game-files-to-a-separate-hard-drive-on-linux/</guid>
		<description>&lt;p&gt;I have installed my OS on a 240GB SSD, and I prefer to keep my data on a different disk to leave enough space to work with. I wanted to move my steam game files to a separate hard drive on Linux. I’ll show you what I did to make this happen in this article. I use Manjaro GNOME.&lt;/p&gt;
&lt;p&gt;First, you need a correctly partitioned hard drive.&lt;/p&gt;
&lt;p&gt;To wipe your drive clean and have a single partition on it, we’ll use GParted.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/gparted1.png&#34; alt=&#34;&#34;&gt;
Select your disk in the upper right corner.&lt;/p&gt;
&lt;p&gt;Then go to Device and select Create Partition Table:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/parted2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Follow the wizard and use an ext4 filesystem. NTFS can cause problems because Steam cannot read it properly.&lt;/p&gt;
&lt;h1 id=&#34;mounting&#34;&gt;mounting&lt;/h1&gt;
&lt;p&gt;To use a disk or a partition in Linux, it needs to be mounted.&lt;/p&gt;
&lt;p&gt;List your devices and identify the one you wish to mount by using the “lsblk” command.&lt;/p&gt;
&lt;p&gt;In my case, I wish to mount the drive sdc1&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/lsblk.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;On Linux, all filesystems need to be mounted before they can be used. I wanted my whole disk to be available in the directory /mnt/data&lt;/p&gt;
&lt;p&gt;Before mounting, I created the directory.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd /mnt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo mkdir data&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When you make the directory by using sudo, the directory owner will be the root user. This means that you cannot access the directory and write to it from your own user.&lt;/p&gt;
&lt;p&gt;Use this command to change the ownership of the directory. Replace “mischa” with your username.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo chmod mischa:mischa data&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Verify that the directory now has the correct ownership:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/steamgames1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now you can mount your directory, so it is available for use.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mount /dev/sdc1 /mnt/data&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;mounting-on-boot&#34;&gt;mounting on boot&lt;/h1&gt;
&lt;p&gt;For the mount to happen automatically on startup, you’ll need to add it to the /etc/fstab file. We start by finding the UUID of our disk.&lt;/p&gt;
&lt;p&gt;Use the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ls -al /dev/disk/by-uuid/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/steamgames2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;In my case the UUID will be 50d608bc-a7ad-4ff6-bf44-bb6f26efa4f6&lt;/p&gt;
&lt;h3 id=&#34;etcfstab&#34;&gt;/etc/fstab&lt;/h3&gt;
&lt;p&gt;open the file in your favorite editor. I like to use vim.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo vim /etc/fstab&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Add a new entry to your /etc/fstab file and use the following parameters:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;UUID=50d608bc-a7ad-4ff6-bf44-bb6f26efa4f6 /mnt/data ext4 defaults 0 0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/steamgames3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Before we go further, verify that we did this correctly by using the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;findmnt --&lt;/code&gt;verify&lt;/p&gt;
&lt;p&gt;This will verify the /etc/fstab file. Not meaning to scare you, but an incorrectly configured fstab may lead to an unbootable system.&lt;/p&gt;
&lt;p&gt;Now reboot your system and check if your disk is mounted automatically.&lt;/p&gt;
&lt;p&gt;It is also a good idea to cd to your mounted directory and touch a file to see if you have write permissions.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/steamgames4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;steam&#34;&gt;Steam&lt;/h1&gt;
&lt;p&gt;Now it’s time to set things up in Steam. Open Steam and open your settings.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/steamgames5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;go to Downloads –&amp;gt; Steam Library Folders&lt;/p&gt;
&lt;p&gt;Click the + button and navigate to your mounted drive.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/steamgames6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;To test, install a game and reboot your system.&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>Goodbye Windows, Hello Linux! Switching to Linux as my Daily Driver</title>
		<link>http://mischavandenburg.com/goodbye-windows-hello-linux-switching-to-linux-as-my-daily-driver/</link>
		<pubDate>Tue, 26 Apr 2022 06:38:57 +0000</pubDate>
		
		<guid>http://mischavandenburg.com/goodbye-windows-hello-linux-switching-to-linux-as-my-daily-driver/</guid>
		<description>&lt;p&gt;After getting my LPIC-1 certification, my interest in Linux continued to grow. When I started my new job, I performed more sysadmin tasks, such as increasing the size of filesystems or removing backups, and it felt good to put the theory into practice.&lt;/p&gt;
&lt;p&gt;I was still using Windows in my personal setup, and I started running into limitations. Finally, I realized how much I appreciated the freedom and control over my system that Linux gave me. So I decided I wanted to switch to Linux for my daily operating system. But a few things were holding me back. Will I be able to play my favorite games? Will I run into a lot of problems with my sound and microphone? Are all the apps I need for working from home available on Linux? Can I even edit videos on Linux?&lt;/p&gt;
&lt;h2 id=&#34;preparing-to-switch&#34;&gt;preparing to switch&lt;/h2&gt;
&lt;p&gt;I made a dual boot install of Ubuntu to try things out to answer these questions. I started things off by setting small goals for myself. For example, I need to be able to work from home. Which programs do I need? And I started from there.&lt;/p&gt;
&lt;p&gt;I had no problems installing Slack, Zoom, Teams, and all the other programs I needed for my work. I was very surprised by how well all of the external hardware worked. My Bluetooth keyboard and mouse worked immediately without needing to install any drivers. Even my USB webcam worked instantly without any problems.&lt;/p&gt;
&lt;p&gt;To put this into perspective, I spent an entire afternoon getting my keyboard to work correctly on my MacBook. It needed a lot of extra drivers. Still, there is a 4-second delay when I press my volume up/down keys when working on my MacBook. All of this works perfectly on my Linux OS without any delays and without any drivers or extra configuration.&lt;/p&gt;
&lt;p&gt;I kept my dual boot setup for a while as I was trying out different distros, and I eventually ended up with Manjaro as my distro of choice. I like it because it is based on Arch Linux, and it gives you access to the Arch User Repository (AUR). I want to use Arch eventually, and I figured this might be a good stepping stone.&lt;/p&gt;
&lt;h2 id=&#34;fate-decided-for-me&#34;&gt;fate decided for me&lt;/h2&gt;
&lt;p&gt;This dual boot setup continued for a while as I was warming up to the idea of completely abandoning Windows. I set Linux as my default boot option, and after a few weeks, I realized I hadn’t needed to boot into Windows for anything at all. However, I still didn’t feel quite ready to switch completely to Linux.&lt;/p&gt;
&lt;p&gt;One evening I wanted to make another fresh install to check out the GNOME version of Manjaro. I was doing a lot of chores at the same time, and it was getting quite late, but I wanted to have the installer running as I was doing other tasks. Probably not my most brilliant move.&lt;/p&gt;
&lt;p&gt;You probably know what is coming: in between my chores, I started the installation. In a moment of carelessness, I managed to point the installation to my Windows partition, and it was completely wiped and replaced with a sparkling fresh Linux install.&lt;/p&gt;
&lt;p&gt;“Well, I guess I am moving to Linux today!” I thought while I suppressed a hint of panic as I racked my brain to see if I had lost any important files. I knew that most of my important stuff was safely backed up in the cloud. But if I had formatted my Windows drive by choice, rather than by accident, I would have backed up a lot more files.&lt;/p&gt;
&lt;h2 id=&#34;first-week-without-windows&#34;&gt;first week without windows&lt;/h2&gt;
&lt;p&gt;A week ago, I lost my complete Windows install, but there hasn’t been a single moment where I regretted making the switch. Fortunately, it also seems that I did not lose anything important.&lt;/p&gt;
&lt;p&gt;I am learning so much by forcing myself to use Linux as a daily driver. Most things are correctly configured out of the box. But sometimes, you have to do some work to get the configuration you like.&lt;/p&gt;
&lt;p&gt;For instance, after installing Steam, I wanted to have the game files located on a different hard disk because my OS SSD is only 256GB. This required me to format my data SSD to an ext4 filesystem and mount it in a folder. I also needed to add it to my /etc/fstab file to make sure that it mounts automatically when I boot my PC.&lt;/p&gt;
&lt;p&gt;These tasks have been great practice for the things I need to do on my servers at work, and they will make me approach these tasks with a little more confidence because I have done them before on my personal setup. This is the great advantage of having Linux as a daily driver if you are becoming a DevOps Engineer or Linux System Administrator.&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>Yadm: Keep Track of Your Precious Dotfiles</title>
		<link>http://mischavandenburg.com/yadm-keep-track-of-your-precious-dotfiles/</link>
		<pubDate>Sat, 02 Apr 2022 09:55:03 +0000</pubDate>
		
		<guid>http://mischavandenburg.com/yadm-keep-track-of-your-precious-dotfiles/</guid>
		<description>&lt;p&gt;This week I learned about &lt;a href=&#34;https://yadm.io&#34;&gt;yadm: yet another dotfile manager&lt;/a&gt;. It is the perfect way to keep track of all your custom configuration files, known as dotfiles.&lt;/p&gt;
&lt;p&gt;Even if you have only a little bit of experience with Linux, you know that everything is managed in files. All configuration parameters are set or changed in text files stored on the hard disk. These files are usually located in your home directory and are hidden by default. This is indicated by prefixing the file with a period. So the configuration file for the vim editor is .vimrc, and for zshell you use the .zshrc. This is why configuration files are referred to as dotfiles.&lt;/p&gt;
&lt;h3 id=&#34;customisation&#34;&gt;customisation&lt;/h3&gt;
&lt;p&gt;The more I work with Linux, the more I appreciate the ability to customize things. When I first started, I was pretty satisfied with the vanilla experience. You punch your commands into the terminal, and you do your tasks. What more could you need?&lt;/p&gt;
&lt;p&gt;This started to change when I began working with senior engineers who built their custom setups over the years. I saw them opening 3 terminal windows in a perfect ratio with beautiful colorschemes or previewing files in a file browser directly in vim so they could split them vertically and edit them side by side.&lt;/p&gt;
&lt;p&gt;I wanted to create a similar setup by adding settings and plugins to the .vimrc and .zshrc files. However, before going down this rabbit hole, I asked myself the following question. How can I bring this configuration with me to other machines? What happens if my laptop gets stolen and I lose my precious configuration files?&lt;/p&gt;
&lt;h3 id=&#34;yet-another-dotfile-manager&#34;&gt;yet another dotfile manager&lt;/h3&gt;
&lt;p&gt;Enter yadm. I had thought of putting my dotfiles in a GitHub repo, but this brings up a whole set of new challenges where you would need to create symbolic links across your system to have the files in their correct places. Yadm solves this problem.&lt;/p&gt;
&lt;p&gt;Yadm turns your home directory ( ~/ ) into a Git repo which can be pushed to a host of your choice. You can add your files one by one, and yadm will track them. The best thing is that you can add the files from all over your system, and yadm will not bother with any of the other files in your home directory.&lt;/p&gt;
&lt;h3 id=&#34;you-want-git-for-your-dotfiles&#34;&gt;you want git for your dotfiles&lt;/h3&gt;
&lt;p&gt;Setting up your configuration files in a git repository has a lot of advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;configuration is saved in multiple places&lt;/li&gt;
&lt;li&gt;easily share your configuration across machines&lt;/li&gt;
&lt;li&gt;version control&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Version control is especially useful. You will always be able to trace back that one plugin you used a few years ago, but you cannot remember the name of. And it is fun to watch your configuration grow over time.&lt;/p&gt;
&lt;h3 id=&#34;setting-up-yadm&#34;&gt;setting up yadm&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://yadm.io/docs/install&#34;&gt;Installing yadm&lt;/a&gt; is a breeze. For my mac I just used&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install yadm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;or you can use the apt-get or dnf install equivalents if you are on Linux.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;You interact with yadm the same way you interact with git. You simply replace the word git with yadm in the commands.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Then you navigate to your home directory and set up the repository. If you don’t have a repository yet:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yadm init
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yadm add &amp;lt;important file&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yadm commit
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yadm remote add origin &amp;lt;url&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yadm push -u origin &amp;lt;local branch&amp;gt;:&amp;lt;remote branch&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Or if you already have a dotfiles repository:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yadm clone &amp;lt;url&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yadm status
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And that’s it. Now add your configuration files and push them to your hosted repo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yadm add ~/.vimrc 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yadm add ~/.zshrc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yadm commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;first commit&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yadm push
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You will notice that yadm expects you to add all the files every time you want to make a new commit. Use this command to stage all the files you added previously:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yadm add -u
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;enjoy-your-synched-customisation&#34;&gt;enjoy your synched customisation&lt;/h3&gt;
&lt;p&gt;Having your dotfiles in a GitHub repo makes it easy to set up your preferred settings on a new machine or environment. So install yadm and pull your repo, and off you go!&lt;/p&gt;
&lt;p&gt;I hope you will enjoy it as much as I do. Crafting a customized setup takes a lot of time and effort, and now that I finally have an excellent solution to keep track of my files, I am ready to dive into the customization rabbit hole.&lt;/p&gt;
&lt;p&gt;Download yadm &lt;a href=&#34;https://yadm.io&#34;&gt;here.&lt;/a&gt; Here you will also find all the necessary information to install and configure your yadm.&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>LPIC-1 Study Guide</title>
		<link>http://mischavandenburg.com/lpic-1-study-guide/</link>
		<pubDate>Wed, 16 Mar 2022 21:20:19 +0000</pubDate>
		
		<guid>http://mischavandenburg.com/lpic-1-study-guide/</guid>
		<description>&lt;p&gt;I recently obtained my LPIC-1 certification, and in this blog post, I’ll share the strategy and techniques I used to pass this exam and share my thoughts on the certification. Because I am a Linux novice, the exam was a pretty tough grind for me. This article offers a beginner’s perspective on the LPIC-1 certification. Is the LPIC-1 hard to pass? Keep reading to find out.&lt;/p&gt;
&lt;p&gt;Before this certification, I had only a little bit of experience. I deployed LAMP stacks using Ansible and configured VMs to be able to communicate with each other using only the command line. I also did a “Linux Fundamentals” video training. I could navigate the filesystem, edit text files and work in the terminal, but that was about it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/hard.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;is-it-hard&#34;&gt;Is it hard?&lt;/h3&gt;
&lt;p&gt;For a beginner: yes, it was hard! But if you are a Linux administrator with a few years of experience, these exams probably are not very difficult to pass. However, even if you are experienced, be prepared to do a lot of memorization. Even though the requirements on the website seem very basic and straightforward, when you dig into the study resources, you will soon discover that you need to learn a large host of commands and many of their accompanying parameters. For example, you will need to know what grep -H does precisely, the difference between passwd -l, chage -l, and chage -L, the location of the directory that contains all the timezones, and the directory that contains the printer configurations for CUPS.&lt;/p&gt;
&lt;h3 id=&#34;the-certification&#34;&gt;The certification&lt;/h3&gt;
&lt;p&gt;The LPIC-1 certificate requires candidates to pass the LPI 101-500 and 102-500 exams. These exams test the candidates on various subjects, such as file management, boot loaders, networking fundamentals, user and group management, file systems and partitioning, and much more.&lt;/p&gt;
&lt;p&gt;Each exam has a 600-page syllabus, so to get your LPIC-1 certification, you need to work through 1200 pages and memorize a few hundred commands and parameters. However, if you work as a Linux sysadmin, you’ll probably know many of these commands and concepts.&lt;/p&gt;
&lt;h3 id=&#34;study-materials&#34;&gt;Study Materials&lt;/h3&gt;
&lt;p&gt;I attended a 4-day course that covered both exams. However, because of the large amount of information that needs to be covered, the teacher could only address the subjects on a superficial level. Therefore, I would advise you to be suspicious of any courses that promise to prep you for the exams in 4 days if you are a beginner. I estimate that you need at least double that amount to get some proper explanation of the material.&lt;/p&gt;
&lt;h4 id=&#34;lpi-syllabus&#34;&gt;LPI Syllabus&lt;/h4&gt;
&lt;p&gt;After finishing the course, it became clear that I needed a lot of studying to pass the exams. Fortunately, LPI has created a syllabus for each exam. These are available for free on the &lt;a href=&#34;https://www.lpi.org/our-certifications/lpic-1-overview&#34;&gt;LPI.org website.&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;lpi-practice-exams&#34;&gt;LPI Practice Exams&lt;/h4&gt;
&lt;p&gt;It is crucial to test your knowledge. This is the resource I used:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://amzn.to/3KHAkCZ&#34;&gt;LPIC-1 Linux Professional Institute Certification Practice Tests: Exam 101-500 and Exam 102-500 &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you are a member of O’Reilly’s, you can read the book there. It contains around 90 practice questions for every chapter in the LPI syllabus. The questions test your knowledge in detail and are a great way to determine whether you have fully grasped the material.&lt;/p&gt;
&lt;p&gt;However, the book was written in 2019 and contains questions about certain subjects that have since been removed from the exams. So if you suddenly encounter questions that do not seem familiar at all, make sure to double-check that it is actually an exam objective.&lt;/p&gt;
&lt;p&gt;Lastly, I used &lt;a href=&#34;https://www.udemy.com/share/1029gO3@XonS1Jh2QkFmIV_mN-r8Rbx04vCYiyykPhTpewu5iLZQVNIYMVe4z53YFSxp2tly/&#34;&gt;these practice exams on Udemy&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;memorization&#34;&gt;Memorization&lt;/h3&gt;
&lt;p&gt;As I have stated before, the exams require you to do a lot of memorization. Fortunately, we have some tools and techniques available to help us with this task.&lt;/p&gt;
&lt;p&gt;The primary tool is Anki. If you are not familiar with it, Anki is a very simple and free program that allows you to create flashcards that you can use to study and test your knowledge. The best thing about Anki is that it implements spaced repetition. You can download and learn more about Anki here: &lt;a href=&#34;https://apps.ankiweb.net/&#34;&gt;https://apps.ankiweb.net&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Secondly, I am fond of memory techniques. You can remember things much more quickly by visualizing them in your mind or utilizing techniques such as Memory Palaces or the Method of Loci. If you are interested in learning more about memory techniques, I highly recommend Dr. Anthony Metivier’s &lt;a href=&#34;https://www.youtube.com/c/AnthonyMetivierMMM/featured&#34;&gt;YouTube channel.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/palace.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;strategy&#34;&gt;Strategy&lt;/h3&gt;
&lt;p&gt;Here is the strategy that I used to pass the exams:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read through a chapter and take notes.&lt;/li&gt;
&lt;li&gt;Make Anki flashcards for all the commands and flags that you do not know yet&lt;/li&gt;
&lt;li&gt;Do the exercises at the end of the chapter&lt;/li&gt;
&lt;li&gt;Do the practice exam for your chapter from the exam book, which should give you a good indication of how well you have grasped the material.&lt;/li&gt;
&lt;li&gt;Make flashcards of all the questions that you answered wrong (trust me, there will be quite a few)&lt;/li&gt;
&lt;li&gt;Use Anki to test yourself and memorize all of the commands and exam questions&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tips&#34;&gt;Tips:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Do your Anki reviews every day. On some days I was adding more than 100 new cards, which will lead to a lot of reviews in the coming days&lt;/li&gt;
&lt;li&gt;Although the syllabus for exam 101 explained things very well, the 102 syllabus sometimes is very meager in its explanations and you might need to supplement with reading man pages, YouTube videos, and other tutorials. For example, I needed to find quite a bit of supplementary material for chapter 109 Networking Fundamentals.&lt;/li&gt;
&lt;li&gt;Ask for help if you don’t understand a certain topic&lt;/li&gt;
&lt;li&gt;Don’t think you can get away with skipping a topic. You will be tested on absolutely everything that’s in the syllabus, trust me.&lt;/li&gt;
&lt;li&gt;Try doing it together with someone else. I was doing it together with my friend and colleague, and it was extremely useful to be able to share things I struggled with and to discuss things with him to understand them better. Thank you for the good times, Gino!&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;my-thoughts-on-the-certification&#34;&gt;My thoughts on the certification&lt;/h3&gt;
&lt;p&gt;The subject matter is extensive, and I know my way around Linux much better now. Therefore, if I encounter a problem, I am better positioned to assess where the cause might be and then solve the problem from there. I also feel I have a much better grasp of basic networking concepts, which will prove to be very useful in many situations in my work as a DevOps Engineer.&lt;/p&gt;
&lt;p&gt;However, there are also a few drawbacks to this certification. I think there is too much emphasis on memorizing commands and their flags. I think it is not necessary to memorize all of the possible parameters of the chage command because, in the real world, I would take a quick look at the man page to find the parameter that I need. The exams force you to memorize many parameters in a short time, and to be honest, you will probably forget about them very quickly anyway.&lt;/p&gt;
&lt;p&gt;But overall, I am pleased and grateful to my employer that I was able to obtain this certification, and it has made me hungry for more, and I am very eager to continue my learning in this domain.&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>My First Contribution to Open Source</title>
		<link>http://mischavandenburg.com/my-first-contribution-to-open-source/</link>
		<pubDate>Fri, 18 Feb 2022 16:21:12 +0000</pubDate>
		
		<guid>http://mischavandenburg.com/my-first-contribution-to-open-source/</guid>
		<description>&lt;p&gt;Two months ago I knew nothing about GitHub. This week my first pull request got merged into master!&lt;/p&gt;
&lt;p&gt;Programming tutorials and books very often suggest that you should try to contribute to open source in order to practice your skills. Even though I am still on the beginner level in Python, I managed to find something I could contribute with. But there were a few things I needed to learn in order to be able to do so.&lt;/p&gt;
&lt;p&gt;GitHub is a place where many open source projects are hosted. Projects are hosted in “repositories” available to the public. Everyone can go in and take a look at the code. And the great thing about it is that everyone can contribute to the code as well.&lt;/p&gt;
&lt;p&gt;Two months ago I knew almost nothing about GitHub. Surely, I had often downloaded software from GitHub, and I knew it had to do with version control. But I had no idea that it was such a powerful system of enabling collaboration for software projects.&lt;/p&gt;
&lt;p&gt;During an assignment in my DevOps Traineeship I spent some time learning about Github and the Git language. I learned about repositories, branches, commits and pull requests. Now I wanted to take it to the next level and make a contribution of my own somewhere.&lt;/p&gt;
&lt;h3 id=&#34;the-project&#34;&gt;the project&lt;/h3&gt;
&lt;p&gt;As I have mentioned in other posts, I love game automation, and recently I discovered the Botty project, which is a bot written for the game Diablo 2: Resurrected. The bot is written in Python, which means that it is a great way of applying my Python learning to something I am passionate about.&lt;/p&gt;
&lt;p&gt;The bot uses computer vision in order to recognise what is on the screen and run scripts accordingly. The monsters in the game drop items, and if you want the bot to pick up items, it will need to be taught which items it needs to pick up.&lt;/p&gt;
&lt;p&gt;This is done by adding some images to its image database and adding the filenames to a list of items. When the bot scans the screen for items, it will look for a match in its image database, and when it matches, it will click the corresponding pixels on the screen to pick up the item.&lt;/p&gt;
&lt;p&gt;Here’s what an image in the database looks like:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/axe.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;I am doing a Holy Grail project in this game, which means that I am collecting every item in the game. It is quite an undertaking as there are 506 items in the game, and some items have a drop chance of 1 : 1.000.000. Luckily I have a bot to help me with this project.&lt;/p&gt;
&lt;p&gt;Not surprisingly, many items were still missing from the bot because it is a fairly new project that is still in development. And as I needed my bot to pick up the items I needed, I decided to add these 46 missing items to the database.&lt;/p&gt;
&lt;h3 id=&#34;forks-commits-and-pull-requests&#34;&gt;forks, commits and pull requests&lt;/h3&gt;
&lt;p&gt;After doing the work I still needed to figure out how I should offer these items to the project. Luckily someone shared a few very helpful tutorials in the project’s discord. This is the tutorial I used for my first contribution:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.dataschool.io/how-to-contribute-on-github/&#34;&gt;Step-by-step Guide to Contributing on Github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You begin with “forking” the project repository, which basically means making your own copy of all the code in the project. Then you add your contribution to the fork by cloning it to your local machine and making your changes to a new branch.&lt;/p&gt;
&lt;p&gt;When you have committed your changes and pushed your new branch to your fork, you are ready to make your first pull request. A pull request is a way of telling the project that you have something to contribute. You are sharing your version of the project repository including your proposed changes, and someone from the project will take a look at your suggestions and see if they are useful and compatible.&lt;/p&gt;
&lt;h3 id=&#34;merged-into-master&#34;&gt;merged into master&lt;/h3&gt;
&lt;p&gt;After a few days someone had a look at my contribution and requested me to make a few small adjustments. When I managed to incorporate those my contribution was accepted, and my changes were “merged into master”, which means that my contribution was brought into the main version of the project’s code.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/merged.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;i-learned-a-lot&#34;&gt;I learned a lot!&lt;/h3&gt;
&lt;p&gt;As I am typing out this article, I am very satisfied with how much I have learned in the past few months already. I remember being very confused about all the GitHub terminology when I attended my first meetings during my DevOps traineeship.&lt;/p&gt;
&lt;p&gt;Going through the process of making a contribution to open source on GitHub has been an enriching experience. It seemed quite intimidating at the start, but by following a good tutorial I managed to successfully submit my first pull request. I feel I have a much better understanding of Git, GitHub and the workflow.&lt;/p&gt;
&lt;p&gt;Another valuable lesson I learned is that you don’t need to be a Senior Engineer in order to be able to contribute to open source. Although this project is written in Python, my contribution had very little to do with code, but I provided assets which were required by the code. So if you are a beginner at programming, you can look for other ways to contribute, such as fixing spelling mistakes in the documentation, providing images or writing wiki pages.&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>My Mirst Useful Python Script</title>
		<link>http://mischavandenburg.com/my-first-useful-python-script/</link>
		<pubDate>Sat, 05 Feb 2022 05:49:06 +0000</pubDate>
		
		<guid>http://mischavandenburg.com/my-first-useful-python-script/</guid>
		<description>&lt;p&gt;The best part of learning Python is trying to identify things in my life which I can automate by writing a script. Learning a programming language involves doing a lot of exercises that sometimes lack a connection with the real world. But after I decided to go for it, I am always on the lookout for projects. Not only for my job as a DevOps Engineer, but also for my private life. In this case, I needed to write a program that parses log files from a bot so I could get a total number of runs. You can have a look at the final result in my Diablo 2 &lt;a href=&#34;https://github.com/mischavandenburg/diablo2&#34;&gt;GitHub repo. &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Like I wrote in my &lt;a href=&#34;https://mischavandenburg.com/my-journey-into-devops-so-far/&#34;&gt;journey into DevOps article&lt;/a&gt;, I love automating games. Diablo 2 is a game that was originally released in 2002 and which recently was remastered. Diablo 2 always had a very strong presence of bots in the online game, and it didn’t take long before I also joined the ride.&lt;/p&gt;
&lt;p&gt;A few months after the remaster the first bots have started emerging as well. There is a a particularly good one written in Python which is an &lt;a href=&#34;https://github.com/aeon0/botty&#34;&gt;open source project&lt;/a&gt;, which is a perfect opportunity for me to learn more about Python by trying to understand its code and solving problems. I was very excited to discover it because I was playing quite a few hours a week. Diablo 2 is a very grindy game and it takes a lot of time to find the needed gear. Now I could finally outsource my grinding to the computer again.&lt;/p&gt;
&lt;h2 id=&#34;the-problem&#34;&gt;the problem&lt;/h2&gt;
&lt;p&gt;Although the bot is very functional and does several tasks very well, there are still features missing because it is relatively early in its development. One of these features is keeping track of the total amount of runs that the bot has done. In Diablo, every time you play you start a “game” or an instance. In that game there are certain bosses you can kill, and when you are finished you exit your game. This is called a run. Then you create a new game and everything is reset, and you get another shot at killing the bosses to get the precious gear.&lt;/p&gt;
&lt;p&gt;Being the nerd that I am, I like to keep track of the total amount of runs that the bot has done. On these numbers I like to apply some calculations to see how many items I get per xxxx runs and suchlike. The bot keeps track of the amount of runs it does per session and stores them in a log file. But there is no functionality of seeing the total amount of runs you have done, and when I discovered this, I realised I had my first little Python project.&lt;/p&gt;
&lt;h2 id=&#34;log-files&#34;&gt;log files&lt;/h2&gt;
&lt;p&gt;Every time you close the bot after a session, a log file is created that looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/logfile.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;It is formatted as a .txt file and shows information about the bosses that were run and the items that were found. Most importantly, it contains the amount of games that were done in the session. Even after only using the bot for a short time I had over 100 log files to go through, and that’s where I needed a script that would go through these files for me and add the numbers in order to get the total amount of runs.&lt;/p&gt;
&lt;h2 id=&#34;the-script&#34;&gt;the script&lt;/h2&gt;
&lt;p&gt;After completing chapter 9 and 10 in the Automate the Boring Stuff book, I learned about file paths and opening files and reading from them. Now it was time to apply that knowledge. The process went pretty well and soon I had a script that would open the files for me.&lt;/p&gt;
&lt;p&gt;Things got a little bit more complicated when I needed to read information from the files. And of course, this operation would almost certainly involve the dreaded topic of regex. In the end it was not as bad, and I ended up with the following regex:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;regex_games &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; re&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;compile(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Games:&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;regex_dict &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nihla&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Nihl|Nihlatak&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pindle&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Pin|Pindle&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;eldritch&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Eld&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As you will see afterwards, I needed a way to check every line for a certain statement. However, rather than hardcoding every operation, I wanted it to loop over a list of terms. This meant that I could easily go back to the code and add a few more search statements if I needed them. I ended up storing them in a dictionary as you can see above. I really like the way you can make dictionaries in Python and have every entry on a new line. It makes the code very readable and structured.&lt;/p&gt;
&lt;p&gt;And this is the actual looping sequence that I ended up with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; folder_name, sub_folder, file_names &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;walk(source):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; filename &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; file_names:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; PurePath(folder_name, filename)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; open(p, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rt&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; my_file:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# search for games number line&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; line &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; my_file:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#75715e&#34;&gt;# find number of games and add to total games&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; regex_games&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;search(line):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    g &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; line&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    total_games &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; int(g[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; my_file&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#75715e&#34;&gt;# check which runs were done by using the regex dict&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; key &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; regex_dict:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        location &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; regex_dict[key]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        reg &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; re&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;compile(location)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#75715e&#34;&gt;# if there is a match, add the numbers to the total variable&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; reg&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;search(f):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            var_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; key &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_total&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            globals()[var_name] &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; int(g[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This sequence loops through the folder, the subfolder, and opens each file one by one. When the file is opened it looks for the “Games: 25” line and adds the number to a variable. However, I was not only interested in the total number of games. I also wanted to get more insight in how many Pindle runs or Nihla runs I had done. So I set up another regex search and made sure that the number of games are added to a “pindle_total” or “nihla_total” variable.&lt;/p&gt;
&lt;h2 id=&#34;result&#34;&gt;result&lt;/h2&gt;
&lt;p&gt;When running the script in the shell, the result looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mischa@MischaMacBook stats_parser % python3 total_runs.py 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Total runs: &lt;span style=&#34;color:#ae81ff&#34;&gt;7159&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pindle runs: &lt;span style=&#34;color:#ae81ff&#34;&gt;6926&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Eldritch + Shenk runs: &lt;span style=&#34;color:#ae81ff&#34;&gt;367&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Nihla runs: &lt;span style=&#34;color:#ae81ff&#34;&gt;232&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mischa@MischaMacBook stats_parser % 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Exactly what I wanted. Now I can just paste my stats files into a folder and see how many runs I’ve done. Maybe I’ll improve it by building a GUI. Another fun idea I have is to create a little pipeline where this script would be run once an hour and the stats would be uploaded to a webpage somewhere, so others could see the amount of runs of my bot. Not that anyone is interested in that, but it is a fun project for me to do. Let’s see what happens!&lt;/p&gt;
&lt;p&gt;For now I am very happy with the result. It was a very satisfying experience to identify a problem that I had and to be able to come up with an automated solution. Of course it is still very rudimentary programming, and there is a long long way ahead of me, but it was fun to finally do something practical that solved a particular problem in my life.&lt;/p&gt;
&lt;p&gt;The final result is in my &lt;a href=&#34;https://github.com/mischavandenburg/diablo2&#34;&gt;Diablo 2 GitHub repo.&lt;/a&gt;&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>Python Project: Mad Libs</title>
		<link>http://mischavandenburg.com/python-project-mad-libs/</link>
		<pubDate>Tue, 01 Feb 2022 21:41:28 +0000</pubDate>
		
		<guid>http://mischavandenburg.com/python-project-mad-libs/</guid>
		<description>&lt;p&gt;I am currently working through the book &lt;a href=&#34;https://automatetheboringstuff.com&#34;&gt;Automate the Boring Stuff&lt;/a&gt; by Al Sweigart . I can already highly recommend it to anybody who is learning Python.&lt;/p&gt;
&lt;p&gt;Chapter 9 is about reading and writing files, and there are two assignments at the end of the chapter. Here I’ll discuss my solution of the Mad Libs assignment.&lt;/p&gt;
&lt;h3 id=&#34;here-is-the-full-assignment-text&#34;&gt;here is the full assignment text:&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Mad Libs
Create a Mad Libs program that reads in text files and lets the user add their own text anywhere the word ADJECTIVE, NOUN, ADVERB, or VERB appears in the text file. For example, a text file may look like this:
The ADJECTIVE panda walked to the NOUN and then VERB. A nearby NOUN was
unaffected by these events.

The program would find these occurrences and prompt the user to replace them.
Enter an adjective:
silly
Enter a noun:
chandelier
Enter a verb:
screamed
Enter a noun:
pickup truck

The following text file would then be created:
The silly panda walked to the chandelier and then screamed. A nearby pickup
truck was unaffected by these events.

The results should be printed to the screen and saved to a new text file.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Looks pretty simple, right? I went into it with a lot of zeal and started writing a long list of if statements. My first attempts at the solution involved matching the words NOUN and ADJECTIVE directly, like so:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; word &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ADJECTIVE&amp;#39;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        inv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Enter an adjective: &amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;However, this is problematic because as you can see, the sentence can contain words with a period attached, such as “VERB.” in the above example.&lt;/p&gt;
&lt;h2 id=&#34;no-please-no-regex&#34;&gt;no, please no regex!&lt;/h2&gt;
&lt;p&gt;I’ve understood that here is a general anxiety around regex. I have certainly noticed it in myself and some of my junior engineer friends. As soon as I read the word regex, or realise that an assignment is going to involve regex, I get a constricting feeling in my throat and a rise in my heart rate.&lt;/p&gt;
&lt;p&gt;I’ve had to struggle with it quite a bit during my freeCodeCamp Front End Development Certificate, and the memories are still fresh in my mind.&lt;/p&gt;
&lt;p&gt;So, like any other ‘rational’ human being, I tried to approach this relatively simple assignment with all sorts of ways trying to account for a period ending the word:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;period_check&lt;/span&gt;(x):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; letter &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; x:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; letter &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# loop over the array and prompt user&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; word &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; source_text:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    period &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; period_check(word):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        word &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; word&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        period &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; word &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ADJECTIVE&amp;#39;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        invoer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Enter an adjective: &amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; period:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            result_text&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(invoer &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            period &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            result_text&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(invoer)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; word &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NOUN&amp;#39;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It’s quite funny to see the lengths we go through to avoid regular expressions. However, as you maybe deduce from the code above, it didn’t work, and after a couple of hours of fiddling I gave up, and like any other frustrated programmer, I started to google.&lt;/p&gt;
&lt;p&gt;I quickly found solutions to this assignment and they all involved regex, and I realised I could not walk away from my fears anymore.&lt;/p&gt;
&lt;h2 id=&#34;an-elegant-solution&#34;&gt;an elegant solution&lt;/h2&gt;
&lt;p&gt;Eventually I ended up with the following result for the part of my assignment that needed to recognise and replace the words with the user input. Of course I heavily borrowed from my Google search results.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# set up and match the regex&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grammar_regex &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; re&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;compile(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ADJECTIVE|NOUN|VERB|ADVERB&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;match_regex &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; grammar_regex&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;findall(source_text)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# replace the matches with user input &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; match_regex:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ask_user &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Please enter &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;: &amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    source_text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; source_text&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(i, ask_user, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When I say elegant, I mean elegant in total Python beginner terms. I’m sure there are enough Seniors out there who will burst out laughing when they see this. But to me, it was quite an eye-opening experience to see this little piece of code do exactly what I had intended to achieve with 3 different functions and long blocks of if statements.&lt;/p&gt;
&lt;p&gt;Also, I was pleasantly surprised with how simple regex can be in Python. In this case there were no scary [Az ^**/!!${}aa{}aA{nF}] statements. We simply defined which words we wanted and called the findall() module to generate a list with all the matches.&lt;/p&gt;
&lt;p&gt;Then we iterate over the list of matches and for each match we ask the user for the desired word, and replace it in the source_text.&lt;/p&gt;
&lt;h2 id=&#34;final-result&#34;&gt;final result&lt;/h2&gt;
&lt;p&gt;Having sorted out the pattern matching and replacing part, it was only a matter of implementing reading from files and writing to a new file.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Automate the Boring Stuff chapter 9&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Mad Libs assignment&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Mischa van den Burg&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pathlib &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Path
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; re
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ask the user which file to open&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;file_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Enter the filename. For example, grammar.txt: &amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# my script and .txt file are located in ~/python/automatetheboringstuff/ &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;text_file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(Path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;home() &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;python&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;automatetheboringstuff&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; file_name )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# read the file and store in variable &amp;amp; close&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;source_text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; text_file&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;text_file&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# set up and match the regex&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grammar_regex &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; re&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;compile(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ADJECTIVE|NOUN|VERB|ADVERB&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;match_regex &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; grammar_regex&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;findall(source_text)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# replace the matches with user input &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; match_regex:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ask_user &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Enter &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;: &amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    source_text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; source_text&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(i, ask_user, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# write to the new file and print the result&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;new_file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;new_&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; file_name, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;new_file&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(source_text)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;new_file&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(source_text)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I was getting into some better functionality, such as accounting for existing filenames, and making the pathing relative so it could be run from anywhere. But I decided to save that for a later assignment.&lt;/p&gt;
&lt;p&gt;The assignment was clear and did not require such functionality. I need to learn to keep things simple, and I decided to do just what I was asked and not go into any other rabbit holes.&lt;/p&gt;
&lt;h1 id=&#34;lessons-learned&#34;&gt;Lessons Learned&lt;/h1&gt;
&lt;p&gt;All in all the assignment is pretty simple, but I learned surprisingly much from it. I decided I’ll need to change and learn to love regex rather than fear it, because it showed me how powerful it can be.&lt;/p&gt;
&lt;p&gt;Also, I got some insight into my own mind and how I tend to work. I realised I have a tendency to make things much more complicated than they need to be. I need to learn to keep things simple.&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>Docker LEMP Stack deployed with Ansible</title>
		<link>http://mischavandenburg.com/docker-lemp-stack-deployed-with-ansible/</link>
		<pubDate>Sun, 30 Jan 2022 16:20:24 +0000</pubDate>
		
		<guid>http://mischavandenburg.com/docker-lemp-stack-deployed-with-ansible/</guid>
		<description>&lt;p&gt;In order to learn more about Docker and Ansible I am working on an assignment to take an existing application and to break it down into containers. However, in order to be able to understand this process properly, I first needed to understand more about Docker and containerisation.&lt;/p&gt;
&lt;p&gt;I wrote a playbook that installs Docker and deploys a fully containerised LEMP stack on a virtual machine.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/mischavandenburg/lemp_docker_ansible&#34;&gt;You can have a look at the Github repo with the result here. &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The repo is using the “ansible-galaxy init” role structure. You will find the playbooks as follows: roles/your_choice/tasks/main.yml&lt;/p&gt;
&lt;h2 id=&#34;docker&#34;&gt;Docker&lt;/h2&gt;
&lt;p&gt;I was very excited to learn more about Docker and containerisation. I was familiar with the concept of virtualisation, which is creating virtual versions of fully functional machines on a host operating system. But the concept of containerisation was new to me.&lt;/p&gt;
&lt;p&gt;As I understand it, containerisation differs drastically from virtualisation because containers are able to use resources from host directly. They do not need an entire operating system to run, and therefore they are a much more lightweight.&lt;/p&gt;
&lt;p&gt;This means that resources can be used much more efficiently which eventually can mean cost reduction in your cloud infrastructure.&lt;/p&gt;
&lt;p&gt;Docker is a very popular platform for building and running containers. It seemed like the best option to get started with deploying my own containers.&lt;/p&gt;
&lt;h2 id=&#34;lemp-stack&#34;&gt;LEMP Stack&lt;/h2&gt;
&lt;p&gt;My colleague recommended me &lt;a href=&#34;https://tech.osteel.me/posts/docker-for-local-web-development-part-1-a-basic-lemp-stack&#34;&gt;this tutorial&lt;/a&gt; to become more familiar with Docker. It uses a LEMP stack as an example application. When I told friends about the fact that I was building a LEMP stack, they corrected me and said it was a LAMP stack.&lt;/p&gt;
&lt;p&gt;The LAMP stack is a collection of software built out of these elements:&lt;/p&gt;
&lt;p&gt;L – Linux: the operating system&lt;/p&gt;
&lt;p&gt;A – Apace: webserver&lt;/p&gt;
&lt;p&gt;M – MySQL: database&lt;/p&gt;
&lt;p&gt;P – PHP: server scripting language&lt;/p&gt;
&lt;p&gt;However, in a LEMP stack, we use NGINX as a webserver, which is pronounced “Engine X”, hence the E in LEMP stack. Therefore, LEMP is the correct way to spell it, and it is used in all the tutorials that I have been using.&lt;/p&gt;
&lt;p&gt;I highly recommend &lt;a href=&#34;https://tech.osteel.me/posts/docker-for-local-web-development-part-1-a-basic-lemp-stack&#34;&gt;the tutorial&lt;/a&gt; in order to learn how to deploy your first collection of containers. Deploying one container is relatively easy with Docker, but it gets a little more complicated when deploying several containers and making them communicate with each other in order to combine them into one application. But this tutorial does a great job at showing you how it’s done and it is especially good at explaining the steps along the way.&lt;/p&gt;
&lt;h2 id=&#34;docker-compose-vs-ansible&#34;&gt;Docker Compose vs. Ansible&lt;/h2&gt;
&lt;p&gt;Docker Compose is a tool you can use to run multi-container applications. With the help of the tutorial, it was fairly easy to understand and hit the ground running by deploying multiple containers into one network.&lt;/p&gt;
&lt;p&gt;Now let’s have a look at how we actually set up the containers. In the Docker Compose file, the NGINX container was defined like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;3.8&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#Services&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;services&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;#Nginx Service&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;nginx&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;nginx:1.19&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;ports&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;./src:/var/www/php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;./.docker/nginx/conf.d:/etc/nginx/conf.d&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;depends_on&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It looks pretty straightforward, right? Almost like pseudocode. We tell Docker which image to pull from the Docker Hub, and we tell it to route container’s port 80 to our host’s port 80. This ensures that the web server can be accessed from the outside, provided you have opened this port in the firewall.&lt;/p&gt;
&lt;p&gt;Next there is the volumes section: this mounts certain directories on the host into the container so it is accessible. In this case this was necessary to transfer the web server configuration and the index.php which we wanted to serve to the outside.&lt;/p&gt;
&lt;p&gt;Having successfully deployed my LEMP using Docker Compose, the next step was to automate this process by using Ansible. Ansible is a very powerful tool which enables you to automate configuration management and application deployment by writing scripts called playbooks.&lt;/p&gt;
&lt;h5 id=&#34;why-was-it-necessary-to-introduce-ansible&#34;&gt;Why was it necessary to introduce Ansible?&lt;/h5&gt;
&lt;p&gt;By using Docker Compose, you would need to have Docker and Docker Compose installed on the virtual machine before you could start running the containers.&lt;/p&gt;
&lt;p&gt;However, Ansible gives you the power to take a completely fresh virtual machine, configure it from scratch, and install Docker and its necessary dependencies, followed by deploying the containers.&lt;/p&gt;
&lt;h4 id=&#34;now-lets-take-a-look-at-the-same-container-defined-in-ansible&#34;&gt;Now let’s take a look at the same container defined in Ansible:&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;start nginx &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;docker_container&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;nginx&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;nginx:1.19&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;detach&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;ports&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;networks&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;network_one&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;/src:/var/www/php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;/.docker/nginx/conf.d:/etc/nginx/conf.d&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Although there are some differences, they look very similar. Converting my Docker Compose file to an Ansible playbook was quite a natural and easy experience. It also helps that both are written in YAML and therefore use the same indentation conventions.&lt;/p&gt;
&lt;p&gt;A few differences we can observe:&lt;/p&gt;
&lt;p&gt;In the Ansible playbook we invoke the docker_container module, whereas they are defined as services in the Docker Compose file. Another difference is that we need to set up the network ourselves. In the Docker Compose file, we just specified the containers and Docker Compose created a network automatically and made sure that all containers were connected to it.&lt;/p&gt;
&lt;p&gt;However, it isn’t very complicated in Ansible either:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;setup network&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;docker_network&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;network_one&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We simply call the docker_network module and tell it to make a network called network_one. All we need to do then is make sure to set the networks: parameter to network_one in the docker_container module as we saw above.&lt;/p&gt;
&lt;p&gt;The last point to note is the detach parameter. This means that the container will keep running in the background after it is started.&lt;/p&gt;
&lt;h3 id=&#34;result&#34;&gt;Result&lt;/h3&gt;
&lt;p&gt;After some debugging here and there and making sure all of the elements were in place, eventually we get the satisfying message that everything went according to plan:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/success.png&#34; alt=&#34;Successful play from Ansible&#34;&gt;&lt;/p&gt;
&lt;p&gt;The result is a webpage being served on the server ip:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/webpage.png&#34; alt=&#34;The final web page served by Nginx &#34;&gt;&lt;/p&gt;
&lt;p&gt;I know, it is not the prettiest or most intricate design. But remember that I am working towards becoming a DevOps Engineer, not a Front End Developer 😉&lt;/p&gt;
&lt;p&gt;We can also enter the phpMyAdmin dashboard by adding port 8080 to our ip in the browser:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://mischavandenburg.com/php.png&#34; alt=&#34;The PHP page.&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;The assignment of deploying a LEMP stack in separate containers has been very useful and I learned a lot from the process. There were a few more modules that needed to be configured in Ansible as opposed to the Docker Compose method, but the tradeoff is that Ansible is much more powerful and enables you to configure the server from scratch. You can have a look at the code in the GitHub repo to see all of the changes I needed to do.&lt;/p&gt;
&lt;p&gt;The only part that I needed to do by hand is to create the VM in the Microsoft Azure portal, open the ports and configure the SSH keys. The next step in my learning process will be to learn how I can automate this step as well. This means that I will need to learn Terraform.&lt;/p&gt;
&lt;p&gt;By using Terraform I will be truly deploying this stack as Infrastructure as Code, but doing all of these steps with Ansible has given me a much better understanding of Infrastructure as Code already.&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>Why I Chose a Bear as a Logo</title>
		<link>http://mischavandenburg.com/why-i-chose-a-bear-for-my-logo/</link>
		<pubDate>Sun, 30 Jan 2022 11:53:21 +0000</pubDate>
		
		<guid>http://mischavandenburg.com/why-i-chose-a-bear-for-my-logo/</guid>
		<description>&lt;p&gt;I always struggled with finding an online nickname for myself. I was never given one, and over the years I used a few here and there, ranging from Nordic gods to my favourite fantasy character: Gandalf the Grey.&lt;/p&gt;
&lt;p&gt;I intended to create a tech blog to document my journey ever since I started my career change. But for months I was stopped by trying to decide on a name. (That’s me in a nutshell), because it needed to be perfect. Eventually I decided to just use my full name.&lt;/p&gt;
&lt;p&gt;Although I have zero connections with Russia, neither genetically nor culturally, my parents decided to give me a name of Russian origin: Mischa.&lt;/p&gt;
&lt;p&gt;According to &lt;a href=&#34;https://babynames.com/name/mischa&#34;&gt;this website&lt;/a&gt;, Mischa has the following meaning:&lt;/p&gt;
&lt;p&gt;“The name Mischa is primarily a gender-neutral name of Russian origin that means &lt;em&gt;Who Is Like God&lt;/em&gt;“&lt;/p&gt;
&lt;p&gt;Although I admire my parents for giving me such an ambitious name, I must confess that I turned out to be of a much more earthy and less godly nature.&lt;/p&gt;
&lt;p&gt;When I was younger, an old gymnastics teacher once told me that Mischa meant “bear” in Russian, and I always liked that connotation much more. I also turned out to be more bear-like than god-like, being 190cm tall and having thick and bristly curly hair.&lt;/p&gt;
&lt;p&gt;Indeed, &lt;a href=&#34;https://www.quora.com/What-does-Misha-mean-Its-Russian-by-the-way&#34;&gt;this post on Quora&lt;/a&gt; confirms that my name indeed has the meaning of bear:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;ldquo;In Russia Mishka sometimes also used to denote a bear, particularly a bear cub.&amp;rdquo;&lt;/em&gt;
&lt;a href=&#34;https://www.quora.com/profile/Misha-Sivan&#34;&gt;Misha Sivan&lt;/a&gt;, Born in USSR.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/a/a9/GrizzlyBearJeanBeaufort.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Although I am conveniently ignoring the “cub” part of his explanation, I thought it was pretty cool that my actual name had connotations with our ursine friends.&lt;/p&gt;
&lt;p&gt;Moreover, I lived 9 years in Norway where I roamed the mountains for weeks at a time, just me and my tent and a fishing rod. I developed a very close connection with nature during those years. Not only its beauty, but also its merciless forces and awe-inspiring ingenuity.&lt;/p&gt;
&lt;p&gt;Although I never encountered a bear myself, they are most definitely present in the Norwegian nature. One time the newspapers told me that there was a bear sighted 4 kilometers from where I was camping one weekend.&lt;/p&gt;
&lt;p&gt;But this is what the bear represents to me: the time I was allowed to spend in the North and the resulting connection with nature. The solitary character of the male, calmly roaming for many miles in search of sustenance. A force to be reckoned with when aggravated, but in general preferring to stay at a distance.&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>My Journey Into DevOps So Far</title>
		<link>http://mischavandenburg.com/my-journey-into-devops-so-far/</link>
		<pubDate>Fri, 28 Jan 2022 08:56:38 +0000</pubDate>
		
		<guid>http://mischavandenburg.com/my-journey-into-devops-so-far/</guid>
		<description>&lt;p&gt;In 2021 I had reached a certain stage in my life where I had the liberty to make a choice. I was 31 years old and had just finished an important chapter of my life, and was ready to begin a new one. After thinking about where I wanted to steer my professional career, I decided to follow my passion for programming and automation and attempt to make a career out of my interests in tech and IT.&lt;/p&gt;
&lt;p&gt;I was in a fortunate situation, because there were large shortages of people on the IT job market in The Netherlands. Consequently, employers were much more willing to train their employees to perform the roles that they required to fulfill.&lt;/p&gt;
&lt;h2 id=&#34;bots-and-scripts&#34;&gt;Bots and Scripts&lt;/h2&gt;
&lt;p&gt;I have always loved messing around with computers, and I learned to write small and simple programs at a very young age. At the same time I was an avid gamer, and spent many hours slaying monsters in online RPG’s. One day I came across the concept of a bot: a program that plays the computer game for you, and I was hooked. This is where I developed my ‘fetish’ for automation.&lt;/p&gt;
&lt;p&gt;I was very lucky that I had a friend who shared my interests, and together we built our own automation projects (called ‘botfarms’) in which we ran large amounts of bots that played a certain game for us. This army of bots generated in-game currency which we could sell for actual money. They weren’t huge profits, but it was an amazingly satisfying feeling to be the overlords of an army of automations that actually generated some income for us.&lt;/p&gt;
&lt;h2 id=&#34;from-bots-to-devops&#34;&gt;From Bots to DevOps&lt;/h2&gt;
&lt;p&gt;These botfarms were hosted on servers which set up ourselves. In order to save costs we rented Linux servers, and I spent many evenings figuring out how configure them via the command line. Often I would suddenly snap out of my flow at 3am and realise I had to go to work at 7 in the morning again.&lt;/p&gt;
&lt;p&gt;Although I did not manage to make these personal interests into a personal career, my friend eventually became a Data Engineer. After making the decision to make a career switch to IT I needed to figure out which direction I wanted to go in, because IT covers a very broad range of topics and skills. Based on on our shared interests and previous projects, he recommended me to become a DevOps Engineer.&lt;/p&gt;
&lt;p&gt;I very quickly realised that he was right on the money with his suggestion and I started to become very enthusiastic to learn how to make a living by working with computers and automation.&lt;/p&gt;
&lt;h2 id=&#34;traineeship&#34;&gt;Traineeship&lt;/h2&gt;
&lt;p&gt;As I mentioned before, employers in The Netherlands are now willing to train potential candidates, and I used my hobby projects as a way to demonstrate my genuine interest and affinity with IT and automation. I was offered a traineeship to become a DevOps Engineer in 2021. After a period of training I started working for the City of Amsterdam and I&amp;rsquo;ve been part of an IT4IT operations team since.&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>About Me</title>
		<link>http://mischavandenburg.com/aboutme/</link>
		<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
		
		<guid>http://mischavandenburg.com/aboutme/</guid>
		<description>&lt;h2 id=&#34;living-on-the-command-line&#34;&gt;Living on the command line&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m a nerd. I use neovim for most of my text editing. I have a fully customized setup with dozens of custom keybindings so I can work a little more effectively. This blog is entirely written in neovim.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve built my custom setup in Arch Linux. I wrote &lt;a href=&#34;http://mischavandenburg.com/content/articles/linux-creativity&#34;&gt;an article&lt;/a&gt; about how customizing and maintaining my tailored operating system is a creative activity to me.&lt;/p&gt;
&lt;p&gt;In the words of Rob Muhlenstein, &lt;em&gt;&amp;ldquo;Using the Linux Bash terminal command-line is coding. Every command you type on every line is part of an interactive, ongoing program interpreted by Bash and processed by Linux.&amp;rdquo;&lt;/em&gt; Having this dialogue with the computer through commands and effects is one of the most fascinating things on this earth to me, and I feel fortunate that I can work with this every day as a DevOps engineer.&lt;/p&gt;
&lt;h2 id=&#34;about-this-blog&#34;&gt;About this blog&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m &lt;a href=&#34;http://mischavandenburg.com/content/articles/jiro-sushi&#34;&gt;in love with my work.&lt;/a&gt; After I finish my day&amp;rsquo;s work, I usually sit down to study more about my field. There is always something new to learn, and I always have a project and a course going.&lt;/p&gt;
&lt;p&gt;I love to learn, and I love to write. I keep notes of the things I&amp;rsquo;m learning and I decided to make a practice of publishing them on this blog.&lt;/p&gt;
&lt;p&gt;Explaining things in my own words by writing articles about them is a great way to test my knowledge of a subject. Sometimes I even try to explain it as simple as possible, known as the Feynman technique.&lt;/p&gt;
&lt;p&gt;Sometimes I write full articles on topics, sometimes they are smaller atomic notes.&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>All Content</title>
		<link>http://mischavandenburg.com/all/</link>
		<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
		
		<guid>http://mischavandenburg.com/all/</guid>
		<description>&lt;h1 id=&#34;all-articles-and-zettelkasten-notes&#34;&gt;All articles and zettelkasten notes&lt;/h1&gt;
&lt;ul&gt;
	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/zet/application-insights-sampling/&#34;&gt;2023 - Application Insights: Telemetry Sampling&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/zet/pipelines-continuous-monitoring/&#34;&gt;2023 - Pipelines: Continuous Monitoring&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/zet/distributed-tracing/&#34;&gt;2023 - Distributed Tracing&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/zet/sdk/&#34;&gt;2023 - What is a SDK?&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/zet/call-stacks/&#34;&gt;2023 - Call Stacks&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/zet/starting-a-project/&#34;&gt;2023 - Starting a Project&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/zet/move-to-zet/&#34;&gt;2023 - Going to Publish Smaller, and More Often&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/articles/obsidian-introduction/&#34;&gt;2023 - Obsidian: A Note Taking App For DevOps Engineers&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/articles/what-are-containers/&#34;&gt;2023 - What Are Containers?&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/articles/kickstart-nvim/&#34;&gt;2023 - Getting Started with Neovim: kickstart.nvim&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/articles/az-104-study-guide/&#34;&gt;2022 - Study Guide: AZ-104 Azure Administrator Associate&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/articles/lab-argocd-azure-pipelines/&#34;&gt;2022 - Lab Project: GitOps with ArgoCD, Azure Pipelines and Minikube&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/articles/identity/&#34;&gt;2022 - Tokens and Identity on the Internet&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/articles/nav-podcast/&#34;&gt;2022 - Podcast Tip: The system that runs Norway&amp;#39;s welfare payments&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/articles/ikigai-book/&#34;&gt;2022 - Book Notes: Ikigai: The Japanese Secret to a Long and Happy Life&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/articles/unicorn-project/&#34;&gt;2022 - Book Notes: The Unicorn Project&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/articles/jiro-sushi/&#34;&gt;2022 - I&amp;#39;m In Love with my Work: Lessons from a Japanese Sushi Master&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/articles/how-started-vim/&#34;&gt;2022 - How and Why I Started Using Vim&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/articles/phoenix-project/&#34;&gt;2022 - Book Notes: The Phoenix Project&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/articles/cka-tips/&#34;&gt;2022 - Certified Kubernetes Administrator (CKA) Exam Tips&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/linux-creativity/&#34;&gt;2022 - Building my Own OS: Linux as a Creative Activity&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/how-to-upgrade-java-and-jenkins-on-ubuntu-18-04/&#34;&gt;2022 - How to Upgrade Java and Jenkins on Ubuntu 18.04&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/5-reasons-why-i-changed-my-career-to-it-in-my-thirties/&#34;&gt;2022 - 5 Reasons Why I Changed my Career to IT in my Thirties&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/how-to-move-your-steam-game-files-to-a-separate-hard-drive-on-linux/&#34;&gt;2022 - How To Move Steam Game Files To a Separate Hard Drive on Linux&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/goodbye-windows-hello-linux-switching-to-linux-as-my-daily-driver/&#34;&gt;2022 - Goodbye Windows, Hello Linux! Switching to Linux as my Daily Driver&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/yadm-keep-track-of-your-precious-dotfiles/&#34;&gt;2022 - Yadm: Keep Track of Your Precious Dotfiles&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/lpic-1-study-guide/&#34;&gt;2022 - LPIC-1 Study Guide&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/my-first-contribution-to-open-source/&#34;&gt;2022 - My First Contribution to Open Source&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/my-first-useful-python-script/&#34;&gt;2022 - My Mirst Useful Python Script&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/python-project-mad-libs/&#34;&gt;2022 - Python Project: Mad Libs&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/docker-lemp-stack-deployed-with-ansible/&#34;&gt;2022 - Docker LEMP Stack deployed with Ansible&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/why-i-chose-a-bear-for-my-logo/&#34;&gt;2022 - Why I Chose a Bear as a Logo&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/my-journey-into-devops-so-far/&#34;&gt;2022 - My Journey Into DevOps So Far&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/aboutme/&#34;&gt;0001 - About Me&lt;/a&gt;
	&lt;/li&gt;

	&lt;li&gt;
        &lt;a href=&#34;http://mischavandenburg.com/all/&#34;&gt;0001 - All Content&lt;/a&gt;
	&lt;/li&gt;
&lt;/ul&gt;

</description>
	</item>
	
	</channel>
</rss>
