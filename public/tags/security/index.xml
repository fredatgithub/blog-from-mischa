<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Security on Mischa van den Burg</title>
    <link>https://mischavandenburg.com/tags/security/</link>
    <description>Recent content in Security on Mischa van den Burg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 24 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://mischavandenburg.com/tags/security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Starting my CKS studies</title>
      <link>https://mischavandenburg.com/zet/starting-cks-studies/</link>
      <pubDate>Sun, 24 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/starting-cks-studies/</guid>
      <description>It seems like I will have a couple of hours a day which I can allot to study in the coming month. This will be the perfect moment to start working on a goal I&amp;rsquo;ve had for a long time: getting my Certified Kubernetes Security Specialist certification.
t&amp;rsquo;s not going to be easy. I&amp;rsquo;m quite intimidated by all of the new things I&amp;rsquo;ll have to learn. But that&amp;rsquo;s a good sign.</description>
      <content:encoded><![CDATA[<p>It seems like I will have a couple of hours a day which I can allot to study in the coming month. This will be the perfect moment to start working on a goal I&rsquo;ve had for a long time: getting my Certified Kubernetes Security Specialist certification.</p>
<p>t&rsquo;s not going to be easy. I&rsquo;m quite intimidated by all of the new things I&rsquo;ll have to learn. But that&rsquo;s a good sign. It&rsquo;s the way it works. Everybody would be doing this if it was easy, and I can only grow by doing hard things that seem intimidating at first.</p>
<h2 id="game-plan">Game Plan</h2>
<ol>
<li>Work through this 11 hour course:</li>
</ol>
<p><a href="https://www.youtube.com/watch?v=d9xfB5qaOfg&amp;t=3921s&amp;pp=ygUKY2tzIGNvdXJzZQ%3D%3D">https://www.youtube.com/watch?v=d9xfB5qaOfg&amp;t=3921s&amp;pp=ygUKY2tzIGNvdXJzZQ%3D%3D</a></p>
<p>Now that I have a good homelab setup, I can also put things into practice much more conveniently. So, I&rsquo;ll make a rule for myself not to move to new chapters of the course until I have done extensive practice for the module and I feel I have it &ldquo;in the fingers&rdquo;.</p>
<ol start="2">
<li>Do practical exercises on RBAC and Network Policies every single day on Killercoda. These are my weakest points currently, and they will improve my security awareness on my own clusters but they will also be good ways to score points on the exam</li>
</ol>
<p>I&rsquo;m also planning to do live streams of my studies. One thing that kept me from streaming is that I cannot stream when I am watching courses. But as this course is published on YouTube, I won&rsquo;t get into copyright trouble. Secondly, I always thought that the chat would be distracting. But apparently non-interactive streaming is also a thing, and some people are content with just watching someone do their thing.</p>
<p>We&rsquo;ll see, if anything it will be an interesting way to document my own learning on my YouTube channel. And it may also lead to surprises. Sometimes people in the chat are very helpful and they might even help me understand things better.</p>
<p>Let&rsquo;s go!</p>
<h2 id="links">Links:</h2>
<p>202403241903</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Comparing akv2k8s with Azure Key Vault Provider for Secret Store CSI Driver</title>
      <link>https://mischavandenburg.com/zet/articles/akv2k8s-azure-key-vault-csi-analysis/</link>
      <pubDate>Mon, 11 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/articles/akv2k8s-azure-key-vault-csi-analysis/</guid>
      <description>In a recent analysis, I explored two notable solutions for synchronizing secrets from Azure Key Vaults to AKS (Azure Kubernetes Service) clusters: akv2k8s and the Azure Key Vault Provider for the Secret Store CSI Driver. Here, I present my findings and recommendations based on the functionality, maintenance requirements, and integration capabilities of these tools.
Akv2k8s, maintained by Sparebanken, is an open-source tool designed for the synchronization of secrets. Being dependent on an external tool for Kubernetes secrets synchronization is an undesirable situation and poses several challenges.</description>
      <content:encoded><![CDATA[<p>In a recent analysis, I explored two notable solutions for synchronizing secrets from Azure Key Vaults to AKS (Azure Kubernetes Service) clusters: akv2k8s and the Azure Key Vault Provider for the Secret Store CSI Driver. Here, I present my findings and recommendations based on the functionality, maintenance requirements, and integration capabilities of these tools.</p>
<p>Akv2k8s, maintained by Sparebanken, is an open-source tool designed for the synchronization of secrets. Being dependent on an external tool for Kubernetes secrets synchronization is an undesirable situation and poses several challenges. Notably, the latest version of akv2k8s has been problematic, especially concerning the deployment of Postgres databases on our AKS clusters using the EDB operator. Akv2k8s alters the SecurityContext of pods in a way that causes them to fail.</p>
<p>Furthermore, upgrading akv2k8s to the latest version necessitates a transition to Workload Identity due to the deprecation of aad-pod-identity, a move that promises to be complex. Conversely, the Azure Key Vault Provider, directly offered by Microsoft, allows continued use of Managed Identities for authentication to Key Vaults, simplifying the integration process.</p>
<p><a href="https://azure.github.io/secrets-store-csi-driver-provider-azure/docs/configurations/identity-access-modes/">https://azure.github.io/secrets-store-csi-driver-provider-azure/docs/configurations/identity-access-modes/</a></p>
<h1 id="azure-key-vault-provider-for-secret-store-csi-driver">Azure Key Vault Provider for Secret Store CSI Driver</h1>
<p>The Azure Key Vault Provider for Secret Store CSI Driver is the solution for syncing secrets offered by Microsoft Azure. It is based on the <a href="https://github.com/kubernetes-sigs/secrets-store-csi-driver">kubernetes-sigs/secrets-store-csi-driver</a>.</p>
<h1 id="installation--maintenance">Installation &amp; Maintenance</h1>
<p>The addon is installed with an Azure CLI command or from the portal for existing clusters. The addon can also be enabled from code when deploying a new cluster.</p>
<p>The addon is automatically updated when an AKS upgrade to a new minor version is performed. <strong>Maintenance of the secret synching solution will not be required anymore and is handled by Azure Kubernetes Service.</strong></p>
<p>If an emergency update is necessary, outside of the normal upgrade schedule, it can be updated with the Azure CLI as follows:</p>
<p><code>az aks addon update --addon virtual-node --name MyManagedCluster --resource-group MyResourceGroup --subnet-name VirtualNodeSubnet</code></p>
<p>Addons can also be patched by upgrading to the latest AKS node image.</p>
<p><a href="https://learn.microsoft.com/en-us/azure/aks/integrations">https://learn.microsoft.com/en-us/azure/aks/integrations</a>
<a href="https://learn.microsoft.com/en-gb/azure/aks/node-image-upgrade">https://learn.microsoft.com/en-gb/azure/aks/node-image-upgrade</a></p>
<h1 id="comparison">Comparison</h1>
<h2 id="benefits-of-using-the-official-solution">Benefits Of Using The Official Solution</h2>
<ul>
<li>The tool is built and maintained by Microsoft and an integral part of the AKS offering</li>
<li>Authentication using a managed identity is supported out of the box</li>
<li>Supports RBAC based authentication on Key Vaults</li>
<li>Automatically updated when performing AKS upgrades</li>
<li>One less component for us to maintain</li>
<li>Can run alongside akv2k8s</li>
<li>We can implement automatic secret rotation</li>
<li>We are not dependent on an external project for our secrets management</li>
<li>Does not require an initcontainer to inject secrets</li>
</ul>
<h2 id="cons">Cons</h2>
<ul>
<li>Will take work to migrate all applications</li>
</ul>
<h1 id="migration-guide">Migration Guide</h1>
<p>Steps that describe how to migrate from the use of akv2k8s to the CSI drivers.</p>
<ul>
<li>enable the addon using the Azure CLI</li>
</ul>
<p><code>az aks enable-addons --addons azure-keyvault-secrets-provider --name aks-vo-dcp-dev --resource-group rg-vo-dcp-aks-dev-weu-001</code></p>
<p>This does not restart any existing pods or nodes, thus it does not impact the running setup. akv2k8s and the AKV Provider can run simultaneously on the cluster and the workloads can be migrated one by one.</p>
<p>Enabling the addon creates a Managed Identity. This Managed Identity needs to get the Key Vault Administrator role on the desired Key Vault to be able to retrieve Secrets.</p>
<p>To import the secrets, a SecretProviderClass resource is created:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">apiVersion</span><span class="p">:</span><span class="w"> </span><span class="l">secrets-store.csi.x-k8s.io/v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">kind</span><span class="p">:</span><span class="w"> </span><span class="l">SecretProviderClass</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">metadata</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">azure-sync</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">spec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">provider</span><span class="p">:</span><span class="w"> </span><span class="l">azure</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">parameters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">usePodIdentity</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;false&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">useVMManagedIdentity</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;true&#34;</span><span class="w"> </span><span class="c"># Set to true for using managed identity</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">userAssignedIdentityID</span><span class="p">:</span><span class="w"> </span><span class="l">ceb19a0a-941a-4f33-839d-aeace8ffe205</span><span class="w"> </span><span class="c"># Set the clientID of the user-assigned managed identity to use</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">KeyvaultName</span><span class="p">:</span><span class="w"> </span><span class="l">mischakv01</span><span class="w"> </span><span class="c"># Set to the name of your Key Vault</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">cloudName</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;&#34;</span><span class="w"> </span><span class="c"># [OPTIONAL for Azure] if not provided, the Azure environment defaults to AzurePublicCloud</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">objects</span><span class="p">:</span><span class="w"> </span><span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">      array:
</span></span></span><span class="line"><span class="cl"><span class="sd">        - |
</span></span></span><span class="line"><span class="cl"><span class="sd">          objectName: ExampleSecret
</span></span></span><span class="line"><span class="cl"><span class="sd">          objectType: secret              # object types: secret, key, or cert
</span></span></span><span class="line"><span class="cl"><span class="sd">          objectVersion: &#34;&#34;               # [OPTIONAL] object versions, default to latest if empty
</span></span></span><span class="line"><span class="cl"><span class="sd">        - |
</span></span></span><span class="line"><span class="cl"><span class="sd">          objectName: env-secret
</span></span></span><span class="line"><span class="cl"><span class="sd">          objectType: secret              # object types: secret, key, or cert</span><span class="w">      
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">tenantId</span><span class="p">:</span><span class="w"> </span><span class="l">d62ada1b-ca42-4fe2-b9e7-ceb843af0ad</span><span class="w"> </span><span class="c"># The tenant ID of the key vault</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">secretObjects</span><span class="p">:</span><span class="w"> </span><span class="c"># [OPTIONAL] SecretObjects defines the desired state of synced Kubernetes secret objects</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">data</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">key</span><span class="p">:</span><span class="w"> </span><span class="l">username</span><span class="w"> </span><span class="c"># data field to populate</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">objectName</span><span class="p">:</span><span class="w"> </span><span class="l">env-secret</span><span class="w"> </span><span class="c"># name of the mounted content to sync; this could be the object name or the object alias</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">secretName</span><span class="p">:</span><span class="w"> </span><span class="l">foosecret</span><span class="w"> </span><span class="c"># name of the Kubernetes secret object</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Opaque</span><span class="w"> </span><span class="c"># type of Kubernetes secret object (for example, Opaque, kubernetes.io/tls)</span><span class="w">
</span></span></span></code></pre></div><p>The secret is then mounted in to the container during deployment.</p>
<p>See this pod example:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">kind</span><span class="p">:</span><span class="w"> </span><span class="l">Pod</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">apiVersion</span><span class="p">:</span><span class="w"> </span><span class="l">v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">metadata</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">busybox-secrets-store-inline</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">spec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">containers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">busybox</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">registry.k8s.io/e2e-test-images/busybox:1.29-1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">command</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="s2">&#34;/bin/sleep&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="s2">&#34;10000&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">volumeMounts</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">secrets-store01-inline</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">mountPath</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/mnt/secrets-store&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">readOnly</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">env</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">SECRET_USERNAME</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">valueFrom</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">secretKeyRef</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">foosecret</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">key</span><span class="p">:</span><span class="w"> </span><span class="l">username</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">secrets-store01-inline</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">csi</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">driver</span><span class="p">:</span><span class="w"> </span><span class="l">secrets-store.csi.k8s.io</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">readOnly</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">volumeAttributes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">secretProviderClass</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;azure-sync&#34;</span><span class="w">
</span></span></span></code></pre></div><p>In this example the secret is accessible as a text file at /mnt/secrets-store inside the container. It is also made available as an environment variable SECRET_USERNAME.</p>
<p>The applications on our platform are already using environment variables when using akv2k8s.</p>
<p>The application helm charts will need to be updated with the new SecredProviderClass, but the applications themselves don&rsquo;t need any changes. They will need to be redeployed with the updated configuration though.</p>
<p>Another note is that the secret must always be mounted even it is only used as an environment variable.</p>
<h1 id="conclusions">Conclusions</h1>
<p>Migrating to the Azure Key Vault Provider for Secret Store CSI Driver presents no disadvantages. There will be one less component to maintain, and it will always be compatible with the AKS offering.</p>
<p>It will require some work to convert the current workloads to use the CSI driver, but this is a one-time action which will not affect the applications while they are running. On the long term, this will pay itself back, because there is one less component to maintain.</p>
<h2 id="links">Links:</h2>
<p>202403111503</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Homelab Secret Management With GitOps and Azure Key Vault</title>
      <link>https://mischavandenburg.com/zet/handling-secrets-kubernetes/</link>
      <pubDate>Fri, 29 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/handling-secrets-kubernetes/</guid>
      <description>In this blog post, I want to share with you how I set up secrets management for my home lab. I use my home lab to explore new technologies, but I also try to keep it in line with the practices I would use when setting up environments for clients. I focus on Microsoft Azure and the ecosystem they provide for cloud native applications. Secrets management is an important aspect of any cloud-native application, as it allows you to securely store and access sensitive information such as passwords, tokens and certificates.</description>
      <content:encoded><![CDATA[<p>In this blog post, I want to share with you how I set up secrets management for my <a href="https://github.com/mischavandenburg/homelab/">home lab</a>. I use my home lab to explore new technologies, but I also try to keep it in line with the practices I would use when setting up environments for clients. I focus on Microsoft Azure and the ecosystem they provide for cloud native applications. Secrets management is an important aspect of any cloud-native application, as it allows you to securely store and access sensitive information such as passwords, tokens and certificates.</p>
<p>Since Flux is the integrated solution for GitOps in Azure Kubernetes Service I also adopted it for my home lab. Flux supports and recommends encrypting secrets in git using SOPS, which is a tool that uses asymmetric encryption to protect secrets. This means that you can store encrypted secrets in your git repository and only decrypt them when they are applied to the cluster. This sounds like a convenient and secure way to manage secrets, right?</p>
<p>Well, not quite. After doing some research, I decided to use a different approach: storing my secrets in Azure Key Vault and syncing them to my cluster with the Azure Key Vault Provider. This is the recommended best practice by Microsoft, as explained in this article:</p>
<blockquote>
<p>TLDR: Referencing secrets in an external key vault is the recommended approach. It is easier to orchestrate secret rotation and more scalable with multiple clusters and/or teams.</p>
</blockquote>
<p><a href="https://microsoft.github.io/code-with-engineering-playbook/continuous-delivery/gitops/secret-management/secret-management-gitops/">https://microsoft.github.io/code-with-engineering-playbook/continuous-delivery/gitops/secret-management/secret-management-gitops/</a></p>
<p>SOPS has some drawbacks that made me choose the Azure Key Vault route for my home lab. First of all, SOPS requires you to encrypt each secret value manually in the command line, which can be tedious and error-prone. Secondly, SOPS relies on a single encryption key that is stored in your local machine or in a cloud KMS. If you lose this key, you will lose access to all your encrypted secrets in your Git repo. Thirdly, SOPS does not provide a backup or recovery mechanism for your secrets, nor does it offer fine-grained access control or auditing capabilities.</p>
<p>Here are some of the reasons why I chose this approach over SOPS:</p>
<ul>
<li>Secrets are stored in an external source, which means that they are not exposed in git, even if encrypted.</li>
<li>Azure Key Vault provides backup and recovery features, such as soft delete and restore, which can help in case of accidental deletion or corruption of secrets.</li>
<li>Azure Key Vault allows fine-grained authentication and authorization to the vaults, using Entra ID identities and policies. This means that I can control who can access or modify my secrets, and audit their actions.</li>
<li>I don&rsquo;t need to encrypt or decrypt values in the command line, which can be error-prone or leak information. I can use the Azure CLI or the Azure Portal to manage my secrets in the vault.</li>
<li>If I lose my encryption key, all my encrypted secrets in git are useless with SOPS. With Azure Key Vault, I can still access my secrets using my Entra ID or recover them from backup.</li>
<li>This approach mimics a solution that I would use for an enterprise production environment</li>
</ul>
<p>However, this does not mean that I will not use SOPS at all. Sometimes Helm charts or other configurations need values to be hardcoded due to incorrect implementation. This is where SOPS truly shines. You can safely check in your secret values to source code. Additionally, the SOPS keys can also be stored in Azure Key Vault. Tools should be used where they are most useful, so I&rsquo;m not saying I won&rsquo;t use SOPS at all, but I&rsquo;m choosing Azure Key Vaults and the accompanying CSI Store provider for my main solution.</p>
<h1 id="azure-key-vault-provider">Azure Key Vault Provider</h1>
<p>To sync my secrets from Azure Key Vault to my AKS cluster, I used the Azure Key Vault Provider for Secrets Store CSI Driver. This is an open source project that enables you to mount secrets from external sources (such as Azure Key Vault) as volumes in your pods using the Container Storage Interface (CSI) specification.</p>
<p>I followed <a href="https://azure.github.io/secrets-store-csi-driver-provider-azure/docs/">the provider documentation</a> to install the provider in my local cluster using a Flux HelmRelease.</p>
<p>With the provider installed I can use the following configuration to sync a secret named grafana-admin-password from my Key Vault and make it available as a volume and environment variable in an example busybox pod:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">apiVersion</span><span class="p">:</span><span class="w"> </span><span class="l">secrets-store.csi.x-k8s.io/v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">kind</span><span class="p">:</span><span class="w"> </span><span class="l">SecretProviderClass</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">metadata</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">azure-kv-secrets</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">namespace</span><span class="p">:</span><span class="w"> </span><span class="l">monitoring</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">spec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">provider</span><span class="p">:</span><span class="w"> </span><span class="l">azure</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">parameters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">keyvaultName</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;mischa-homelab-k8s&#34;</span><span class="w"> </span><span class="c"># the name of the KeyVault</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">objects</span><span class="p">:</span><span class="w"> </span><span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">      array:
</span></span></span><span class="line"><span class="cl"><span class="sd">        - |
</span></span></span><span class="line"><span class="cl"><span class="sd">          objectName: grafana-admin-password
</span></span></span><span class="line"><span class="cl"><span class="sd">          objectType: secret              # object types: secret, key, or cert</span><span class="w">      
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">tenantId</span><span class="p">:</span><span class="w"> </span><span class="l">6ddecc48-41b1-48de-bfde-2efd29fae9c7</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">secretObjects</span><span class="p">:</span><span class="w"> </span><span class="c"># [OPTIONAL] SecretObjects defines the desired state of synced Kubernetes secret objects</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">data</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">key</span><span class="p">:</span><span class="w"> </span><span class="l">password</span><span class="w"> </span><span class="c"># data field to populate</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">objectName</span><span class="p">:</span><span class="w"> </span><span class="l">grafana-admin-password</span><span class="w"> </span><span class="c"># name of the mounted content to sync; this could be the object name or the object alias</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">secretName</span><span class="p">:</span><span class="w"> </span><span class="l">grafana-custom-secret</span><span class="w"> </span><span class="c"># name of the Kubernetes secret object</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Opaque</span><span class="w"> </span><span class="c"># type of Kubernetes secret object (for example, Opaque, kubernetes.io/tls)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">kind</span><span class="p">:</span><span class="w"> </span><span class="l">Pod</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">apiVersion</span><span class="p">:</span><span class="w"> </span><span class="l">v1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">metadata</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">busybox-secrets-store-inline</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">namespace</span><span class="p">:</span><span class="w"> </span><span class="l">monitoring</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">spec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">containers</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">busybox</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">registry.k8s.io/e2e-test-images/busybox:1.29-1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">command</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="s2">&#34;/bin/sleep&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="s2">&#34;10000&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">volumeMounts</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">secrets-store01-inline</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">mountPath</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;/mnt/secrets-store&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">readOnly</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">env</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">SECRET_USERNAME</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">valueFrom</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">secretKeyRef</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">grafana-custom-secret</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">key</span><span class="p">:</span><span class="w"> </span><span class="l">password</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">secrets-store01-inline</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">csi</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">driver</span><span class="p">:</span><span class="w"> </span><span class="l">secrets-store.csi.k8s.io</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">readOnly</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">volumeAttributes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">secretProviderClass</span><span class="p">:</span><span class="w"> </span><span class="l">azure-kv-secrets</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">nodePublishSecretRef</span><span class="p">:</span><span class="w"> </span><span class="c"># Only required when using service principal mode</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">secrets-store-creds</span><span class="w"> </span><span class="c"># Only required when using service principal mode. The name of the Kubernetes secret that contains the service principal credentials to access keyvault.</span><span class="w">
</span></span></span></code></pre></div><p>I hope you found this blog post useful and informative. If you have any questions or feedback, please feel free to leave a comment below or contact me on Twitter @mischa_vdburg</p>
<h2 id="links">Links:</h2>
<p>202312290912</p>
<p><a href="https://microsoft.github.io/code-with-engineering-playbook/continuous-delivery/gitops/secret-management/secret-management-gitops/">https://microsoft.github.io/code-with-engineering-playbook/continuous-delivery/gitops/secret-management/secret-management-gitops/</a></p>
<p><a href="https://github.com/mischavandenburg/homelab/">https://github.com/mischavandenburg/homelab/</a></p>
<ul>
<li><a href="https://docs.microsoft.com/en-us/azure/key-vault/">Azure Key Vault documentation</a></li>
<li><a href="https://fluxcd.io/docs/">Flux documentation</a></li>
<li><a href="https://learn.microsoft.com/en-us/azure/aks/csi-secrets-store-driver">Azure Key Vault Provider for Secrets Store CSI Driver documentation</a></li>
</ul>
<p><a href="https://azure.github.io/secrets-store-csi-driver-provider-azure/docs/">https://azure.github.io/secrets-store-csi-driver-provider-azure/docs/</a></p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
