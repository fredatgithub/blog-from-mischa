<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Azure on Mischa van den Burg</title>
    <link>https://mischavandenburg.com/tags/azure/</link>
    <description>Recent content in Azure on Mischa van den Burg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 31 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://mischavandenburg.com/tags/azure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting A Secret from an Azure Key Vault From The Command Line</title>
      <link>https://mischavandenburg.com/zet/list-azure-key-vault-secret/</link>
      <pubDate>Tue, 31 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/list-azure-key-vault-secret/</guid>
      <description>I use this bash code to get secrets from Azure key vaults using the Azure CLI.
Make sure to set your subscription with az account set -s 12321424
kvname=kv-vo-rea-prd-weu-001 secretname=worker-ad-client-secret az keyvault secret show --vault-name $kvname --name $secretname --query value -o tsv Links: 202310312010
[[azure]]</description>
      <content:encoded><![CDATA[<p>I use this bash code to get secrets from Azure key vaults using the Azure CLI.</p>
<p>Make sure to set your subscription with <code>az account set -s 12321424</code></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nv">kvname</span><span class="o">=</span>kv-vo-rea-prd-weu-001
</span></span><span class="line"><span class="cl"><span class="nv">secretname</span><span class="o">=</span>worker-ad-client-secret
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">az keyvault secret show --vault-name <span class="nv">$kvname</span> --name <span class="nv">$secretname</span>  --query value -o tsv
</span></span></code></pre></div><h2 id="links">Links:</h2>
<p>202310312010</p>
<p>[[azure]]</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>AZ-700 Notes - Virtual WAN</title>
      <link>https://mischavandenburg.com/zet/az-700-virtual-wan/</link>
      <pubDate>Sun, 29 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/az-700-virtual-wan/</guid>
      <description>Chapter 11 Virtual WAN Easy Mode Hub-Spoke
incorporates multiple hybrid connections (vpn/expressroute) incorporates multiple VNets Dynamically handles routing easily deploys NVA/Firewall Use case You technically don&amp;rsquo;t need to use it for anything, you can do the same with a normal hub-spoke built using VNets.
However, when you do, you&amp;rsquo;re in charge of:
add/update routes network gateway connections integration with virtual appliances / firewalls Virtual WAN makes these tasks easier.
Components Virtual Wan</description>
      <content:encoded><![CDATA[<h1 id="chapter-11-virtual-wan">Chapter 11 Virtual WAN</h1>
<p><strong>Easy Mode Hub-Spoke</strong></p>
<ul>
<li>incorporates multiple hybrid connections (vpn/expressroute)</li>
<li>incorporates multiple VNets</li>
<li>Dynamically handles routing</li>
<li>easily deploys NVA/Firewall</li>
</ul>
<h2 id="use-case">Use case</h2>
<p>You technically don&rsquo;t need to use it for anything, you can do the same with a normal hub-spoke built using VNets.</p>
<p>However, when you do, you&rsquo;re in charge of:</p>
<ul>
<li>add/update routes</li>
<li>network gateway connections</li>
<li>integration with virtual appliances / firewalls</li>
</ul>
<p>Virtual WAN makes these tasks easier.</p>
<h2 id="components">Components</h2>
<p>Virtual Wan</p>
<ul>
<li>overlay of entire WAN infrastructure</li>
<li>includes 1 or more hubs</li>
</ul>
<p>Hub</p>
<ul>
<li>managed VNet</li>
<li>core of v wan</li>
<li>main connection point of vnets, vpn, er circuits</li>
</ul>
<p>Hybrid connections: s2s vpn, p2s vpn, er circuits</p>
<p>Other connections</p>
<ul>
<li>VNet connections</li>
<li>hub-to-hub</li>
</ul>
<h2 id="transitive-networking">Transitive networking</h2>
<p>In VWAN transitive is possible.</p>
<p>VNets can communicate with other VNEts through hubs with standard WAN SKU. Not the basic sku.</p>
<p>Has managed router that forwards traffic between spokes.</p>
<p>Transitive across hubs in the same WAN.</p>
<p>Normally you have to explicitly create all the peerings, but in the WAN all VNets can communicate with eachother by default.</p>
<h2 id="skus">SKUS</h2>
<p>Basic: only s2s vpn. Not transitive.</p>
<p>Standard: all the rest
Transitive natworking, NVA in WAN</p>
<h2 id="virtual-hub-routing">Virtual Hub Routing</h2>
<p>Virtual hubs contain their own route tables.</p>
<p>Hub connections (all types) associate and propagate routes to the hub&rsquo;s Default route table.</p>
<p>Static (custom) routes can be added.</p>
<p>Each network connected to a hub can either associate or propagate its routes.</p>
<h3 id="association">Association</h3>
<p>The connection and its network can learn the routes and adopt those routes for its own connection.</p>
<p>An association is learning the virtual hub&rsquo;s routes and then taking on those routes for its own network routing table.</p>
<p>All connections associate to the Default route table. Propagation to the Default route table is optional to enable further isolation.</p>
<p>All connections will learn the hub&rsquo;s default routes, but not all connections will contribute to the Default route table.</p>
<h3 id="propagation">Propagation</h3>
<p>A connection, or more specifically, the network behind its connection, adds its own network routing table to the hub&rsquo;s route table.</p>
<p>It is providing or propagating routes to the hub.</p>
<p>There is a Default and None route table. Propagating to the None route table does not add VNet routes.</p>
<p>This isolates the the network because its routes are not published to the hub.</p>
<h3 id="custom-route-tables">Custom Route Tables</h3>
<p>Additional route tables alongside the hub&rsquo;s Default table.</p>
<p>Choose which connections associate (learn) and propagate (add to) custom route tables.</p>
<p>Useful for:</p>
<ul>
<li>isolating groups of networks from other networks</li>
<li>routing traffic through several NVA&rsquo;s attached to the hub</li>
</ul>
<p><strong>Custom route tables will take priority over custom route tables</strong></p>
<h2 id="virtual-wan-hybrid-connections">Virtual WAN Hybrid Connections</h2>
<p>Merging the WAN with on-site networks through S2S/P2S/VPN and ExpressRoute.</p>
<h3 id="scale-units">Scale Units</h3>
<p>Important for exam.</p>
<p>Think of these as a &ldquo;bandwith SKU&rdquo;.</p>
<p>Assigns the aggregate througput (bandwith) to the connection unit. Expressed in Mbps or Gbps.</p>
<p>VPN and ExpressRoute connections use different scale units.</p>
<h2 id="links">Links:</h2>
<p>202310290910</p>
<p>[[az-700]]</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Backing up AKS Clusters with Azure Backup is now in preview</title>
      <link>https://mischavandenburg.com/zet/aks-azure-backup-preview/</link>
      <pubDate>Fri, 13 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/aks-azure-backup-preview/</guid>
      <description>You can back up your AKS clusters using Azure Backup in preview! Preferably you have your clusters stateless and you can redeploy everything from code when sh*t hits the fan. However, I can think of a few enterprise use cases that will be relevant for this new feature.
https://learn.microsoft.com/en-us/azure/backup/azure-kubernetes-service-cluster-backup
Links: 202310130610
[[aks]]
[[kubernetes]]
[[azure]]</description>
      <content:encoded><![CDATA[<p>You can back up your AKS clusters using Azure Backup in preview! Preferably you have your clusters stateless and you can redeploy everything from code when sh*t hits the fan. However, I can think of a few enterprise use cases that will be relevant for this new feature.</p>
<p><a href="https://learn.microsoft.com/en-us/azure/backup/azure-kubernetes-service-cluster-backup">https://learn.microsoft.com/en-us/azure/backup/azure-kubernetes-service-cluster-backup</a></p>
<h2 id="links">Links:</h2>
<p>202310130610</p>
<p>[[aks]]</p>
<p>[[kubernetes]]</p>
<p>[[azure]]</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Video notes - Application Gateway for Containers</title>
      <link>https://mischavandenburg.com/zet/application-gateway-for-containers/</link>
      <pubDate>Sat, 30 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/application-gateway-for-containers/</guid>
      <description>Frontend Azure You can have multiple frontends in one gateway to save money. Teams could share the app gateway but use different frontend IP addresses or FQDNs.
Control plane: Azure App Gateway for Containers
Data plane: association with kubernetes pods.
The association is made to the subnet in the Azure VNet.
Each association is in one subnet, and the subnet should at least have /24 or 256 addresses.
Kubernetes ALB controller consists of two pods.</description>
      <content:encoded><![CDATA[
<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/slCjHV8z9Wk" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<h1 id="frontend">Frontend</h1>
<h2 id="azure">Azure</h2>
<p>You can have multiple frontends in one gateway to save money. Teams could share the app gateway but use different frontend IP addresses or FQDNs.</p>
<p>Control plane: Azure App Gateway for Containers</p>
<p>Data plane: association with kubernetes pods.</p>
<p>The association is made to the subnet in the Azure VNet.</p>
<p>Each association is in one subnet, and the subnet should at least have /24 or 256 addresses.</p>
<h1 id="kubernetes">Kubernetes</h1>
<p>ALB controller consists of two pods. Controller pod and a bootstrap pod.</p>
<p>Controller communicates to the Azure gateway resource. It talks directly to the App Gateway, not to the Azure Resource Manager, which is why you&rsquo;re able to have sub-second updates.</p>
<p>The bootstrap contains the CRDs etc, it does not do very much.</p>
<h2 id="creating-resources">Creating resources</h2>
<p>There is a managed option that will talk to ARM and create the resources for you. Or you can choose to deploy them yourself. It depends whether you want to control everything from Kubernetes. If you have all your Azure resources in Infrastructure as Code it probably makes more sense to create the App Gateway resources from there instead of from Kubernetes.</p>
<h1 id="association">Association</h1>
<p>This is an Azure resource. It lives in the VNet and handles TLS and makes the connections to and from the pods and frontend IP. This is the data path.</p>
<h1 id="support">Support</h1>
<p>Azure CNI. Does not support kubenet or Azure CNI overlay yet, but it will support in the future.</p>
<h1 id="backend">Backend</h1>
<h2 id="links">Links:</h2>
<p>202309301009</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Began studying for AZ-700 Designing and Implementing Microsoft Azure Networking Solutions</title>
      <link>https://mischavandenburg.com/zet/starting-az-700/</link>
      <pubDate>Thu, 28 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/starting-az-700/</guid>
      <description>Before I went on holiday I formed the intention to begin studying again after I came back.
During my current gig I&amp;rsquo;m configuring a fair bit of networking, VNets, peerings, firewall rules and set up a full hub-spoke network from scratch, so I&amp;rsquo;ve had a fair bit of practical experience. Now that the experience is still fresh in the mind I figured I&amp;rsquo;d go for this certification.
Usually I only use Microsoft Learn and practice exams, but this time around I want to try out a video course.</description>
      <content:encoded><![CDATA[<p>Before I went on holiday I formed the intention to begin studying again after I came back.</p>
<p>During my current gig I&rsquo;m configuring a fair bit of networking, VNets, peerings, firewall rules and set up a full hub-spoke network from scratch, so I&rsquo;ve had a fair bit of practical experience. Now that the experience is still fresh in the mind I figured I&rsquo;d go for this certification.</p>
<p>Usually I only use Microsoft Learn and practice exams, but this time around I want to try out a video course. I purchased a year of A Cloud Guru access and so far it has been a good experience.</p>
<p>I&rsquo;ll publish my notes as I go along.</p>
<h2 id="links">Links:</h2>
<p>202309280909</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Some Interesting Features went GA on Azure</title>
      <link>https://mischavandenburg.com/zet/azure-updates-sept-23/</link>
      <pubDate>Thu, 28 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/azure-updates-sept-23/</guid>
      <description>Yesterday a few interesting AKS related features became Generally Available on Azure.
KEDA add-on makes it easier to scale your applications on AKS cluster.
https://azure.microsoft.com/en-us/updates/generally-available-keda-addon-for-aks/
You can have a flexible and customized strategy for node-level OS security updates.
https://azure.microsoft.com/en-us/updates/ga-node-os-patching-nodeimage-feature-in-aks/
Use Vertical Pod Autoscaling add-on for AKS to improve cost-efficiency, and cluster utilization for your workloads
https://azure.microsoft.com/en-us/updates/ga-vertical-pod-autoscaling-addon-for-aks/
Preview Public preview: AKS support for Kubernetes version 1.28
https://azure.microsoft.com/en-us/updates/public-preview-aks-support-for-kubernetes-version-128/
Links: 202309281009
[[azure]]
[[kubernetes]]</description>
      <content:encoded><![CDATA[<p>Yesterday a few interesting AKS related features became Generally Available on Azure.</p>
<p>KEDA add-on makes it easier to scale your applications on AKS cluster.</p>
<p><a href="https://azure.microsoft.com/en-us/updates/generally-available-keda-addon-for-aks/">https://azure.microsoft.com/en-us/updates/generally-available-keda-addon-for-aks/</a></p>
<p>You can have a flexible and customized strategy for node-level OS security updates.</p>
<p><a href="https://azure.microsoft.com/en-us/updates/ga-node-os-patching-nodeimage-feature-in-aks/">https://azure.microsoft.com/en-us/updates/ga-node-os-patching-nodeimage-feature-in-aks/</a></p>
<p>Use Vertical Pod Autoscaling add-on for AKS to improve cost-efficiency, and cluster utilization for your workloads</p>
<p><a href="https://azure.microsoft.com/en-us/updates/ga-vertical-pod-autoscaling-addon-for-aks/">https://azure.microsoft.com/en-us/updates/ga-vertical-pod-autoscaling-addon-for-aks/</a></p>
<h1 id="preview">Preview</h1>
<p>Public preview: AKS support for Kubernetes version 1.28</p>
<p><a href="https://azure.microsoft.com/en-us/updates/public-preview-aks-support-for-kubernetes-version-128/">https://azure.microsoft.com/en-us/updates/public-preview-aks-support-for-kubernetes-version-128/</a></p>
<h2 id="links">Links:</h2>
<p>202309281009</p>
<p>[[azure]]</p>
<p>[[kubernetes]]</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Pod Disruption Budgets Can Mess With Your AKS Updates</title>
      <link>https://mischavandenburg.com/zet/pod-disruption-budget-aks/</link>
      <pubDate>Wed, 27 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/pod-disruption-budget-aks/</guid>
      <description>Past week we&amp;rsquo;ve been struggling a bit with poorly configured pod disruption budgets. When you do an AKS upgrade, a new node is created and one of the old nodes is drained.
If a deployment has a pod disruption budget which is incorrectly configured, it might show up as ALLOWED DISRUPTIONS: 0. When this happens, the node cannot be drained and you will get an error message in your events.</description>
      <content:encoded><![CDATA[<p>Past week we&rsquo;ve been struggling a bit with poorly configured pod disruption budgets. When you do an AKS upgrade, a new node is created and one of the old nodes is drained.</p>
<p>If a deployment has a pod disruption budget which is incorrectly configured, it might show up as <code>ALLOWED DISRUPTIONS: 0</code>. When this happens, the node cannot be drained and you will get an error message in your events.</p>
<p><code>k get poddisruptionbudgets.policy</code></p>
<p><code>k get events</code></p>
<p>The error message will say something like &ldquo;Too man eviction attempts, usually a pdb&rdquo; (I lost the shell output so can&rsquo;t copy atm).</p>
<p>Kubernetes is in a situation where it needs to schedule the pod on another node, but it is unable to do do so because we are telling Kubernetes that it is not allowed to have any disruptions on the deployment.</p>
<p>Kubernetes is logical, it&rsquo;s doing like it&rsquo;s told. But it&rsquo;s frustrating because you can be sitting there waiting for 20 minutes wondering why your node isn&rsquo;t draining.</p>
<p>At my current gig we are not responsible for the content on the clusters and we should not meddle with the application teams&rsquo; namespaces.</p>
<p>However, one solution is to either kill the pod manually or scale up the deployment to more replicas so there will be a higher amount of allowed disruptions.</p>
<h2 id="links">Links:</h2>
<p>202309271809</p>
<p>[[kubernetes]]</p>
<p>[[azure]]</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Azure Exams Are Open Book Exams From Now On</title>
      <link>https://mischavandenburg.com/zet/azure-exams-open-book/</link>
      <pubDate>Wed, 23 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/azure-exams-open-book/</guid>
      <description>From here on out you can access Microsoft Learn during the exams. This is great news! This is much more like the actual experience of an engineer&amp;rsquo;s daily activities. It is arguably more important to look up things efficiently rather than memorizing everything for a test and forgetting it a few weeks later.
Links: 202308231608
https://youtu.be/iPiq3YuhnHc</description>
      <content:encoded><![CDATA[<p>From here on out you can access Microsoft Learn during the exams. This is great news! This is much more like the actual experience of an engineer&rsquo;s daily activities. It is arguably more important to look up things efficiently rather than memorizing everything for a test and forgetting it a few weeks later.</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/iPiq3YuhnHc" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<h2 id="links">Links:</h2>
<p>202308231608</p>
<p><a href="https://youtu.be/iPiq3YuhnHc">https://youtu.be/iPiq3YuhnHc</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Video: Deploying MkDocs To Azure Using With Azure DevOps</title>
      <link>https://mischavandenburg.com/zet/video-mkdocs-azure-webapp/</link>
      <pubDate>Fri, 28 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/video-mkdocs-azure-webapp/</guid>
      <description>In this video, I will walk you through the following steps:
Set up a repo in Azure DevOps with MkDocs files Set up a Static Web App in Azure portal and link it to the repo Configure the Azure DevOps pipeline for MkDocs deployment Configure a custom theme for the website Demonstrate the pull request workflow for updating the docs By the end of this video, you will have a fully functional MkDocs site hosted on Azure Static Web Apps.</description>
      <content:encoded><![CDATA[
<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/_-D1Qz6jtEU" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<p>In this video, I will walk you through the following steps:</p>
<ul>
<li>Set up a repo in Azure DevOps with MkDocs files</li>
<li>Set up a Static Web App in Azure portal and link it to the repo</li>
<li>Configure the Azure DevOps pipeline for MkDocs deployment</li>
<li>Configure a custom theme for the website</li>
<li>Demonstrate the pull request workflow for updating the docs</li>
</ul>
<p>By the end of this video, you will have a fully functional MkDocs site hosted on Azure Static Web Apps. You will also learn how to use Azure DevOps and Static Web Apps to collaborate on your documentation projects.</p>
<p>MkDocs is a tool that lets you create beautiful documentation websites from plain text files. You can write your docs in Markdown, a simple and easy-to-use markup language, and MkDocs will convert them into a static HTML site. You can also customize the look and feel of your site with themes and plugins.</p>
<p>Azure Static Web Apps is a service that hosts static web content and serverless APIs. It automatically builds and deploys your web app from a GitHub or Azure DevOps repository. It also provides features such as authentication, authorization, custom domains, and SSL certificates.</p>
<p>Timestamps:</p>
<p>0:00 Intro
0:40 What is MkDocs?
2:00 Set up the repo
5:00 Create web app
9:25 Configure the pipeline
11:30 Adding a few documents
15:25 Adding a custom theme
18:00 Adding docs with a pull request
21:30 Outro</p>
<h2 id="links">Links:</h2>
<p>202307281307</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>I used Azure OpenAI to create an AI model of my late meditation teacher</title>
      <link>https://mischavandenburg.com/zet/video-azure-openai-chah-first-demo/</link>
      <pubDate>Sun, 16 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/video-azure-openai-chah-first-demo/</guid>
      <description>With the new Azure OpenAI service it is possible to host your own instance of ChatGPT, which allows you to bring your own data.
I decided to use this service to create an AI model of my late meditation teacher, Ajahn Chah. He was one of the most influential and respected Buddhist monks of the 20th century, and his teachings have helped millions of people around the world to find peace, wisdom, and happiness.</description>
      <content:encoded><![CDATA[
<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/jZTJaUncbWc" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<p>With the new Azure OpenAI service it is possible to host your own instance of ChatGPT, which allows you to bring your own data.</p>
<p>I decided to use this service to create an AI model of my late meditation teacher, Ajahn Chah. He was one of the most influential and respected Buddhist monks of the 20th century, and his teachings have helped millions of people around the world to find peace, wisdom, and happiness. He passed away in 1992, but his legacy lives on through his books, recordings, and disciples.</p>
<p>Many of his teachings were recorded and transcribed, and they are publically available. I prepared the data and fed it to my own ChatGPT instance, and I was not disappointed!</p>
<p>The AI actually answers questions based on the given data and I look forward to fine tuning it and having more conversations.</p>
<p>I would love to hear your feedback and thoughts on this project. What do you think of the AI model? How did it make you feel? What other questions would you like to ask him? Or maybe you have another person or topic that you would like to see modeled by AI. Let me know in the comments below.</p>
<p>Thank you for reading and watching. May you be well and happy. 🙏</p>
<h2 id="links">Links:</h2>
<p>202307160807</p>
<p><a href="https://youtu.be/jZTJaUncbWc">https://youtu.be/jZTJaUncbWc</a></p>
<p><a href="https://azure.microsoft.com/en-us/products/cognitive-services/openai-service/">https://azure.microsoft.com/en-us/products/cognitive-services/openai-service/</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Podcast Notes - Azure OpenAI with Dr. Linda Sharer</title>
      <link>https://mischavandenburg.com/zet/podcast-azure-openai/</link>
      <pubDate>Fri, 14 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/podcast-azure-openai/</guid>
      <description>Key points I&amp;rsquo;ve learned LLM models are not malleable. A generative AI model is a static thing which took an enormous amount of compute to get it to the state that it is For example ChatGPT 3.5, 4. They are as they are, they don&amp;rsquo;t change. The models won&amp;rsquo;t remember your previous data. The only way to have a continuous interaction with the model is to feed all of the data into it every time.</description>
      <content:encoded><![CDATA[<h1 id="key-points-ive-learned">Key points I&rsquo;ve learned</h1>
<ul>
<li>LLM models are not malleable. A generative AI model is a static thing which took an enormous amount of compute to get it to the state that it is</li>
<li>For example ChatGPT 3.5, 4. They are as they are, they don&rsquo;t change.</li>
<li>The models won&rsquo;t remember your previous data. The only way to have a continuous interaction with the model is to feed all of the data into it every time.</li>
</ul>
<h1 id="summary">Summary</h1>
<p>This podcast is about OpenAI with Dr. Linda Sharer, a senior cloud solution architect for data and AI at Microsoft. The main topic of the episode is Azure Open AI, a service that allows users to interact with powerful generative AI models using natural language. The guest explains the concepts and capabilities of Open AI, such as prompt engineering, one-shot and few-shot learning, fine-tuning, vectorization, and retrieval-augmented generation. She also discusses the design choices and challenges of building applications with Open AI, as well as the integration with other Azure services such as Cognitive Search and ML. The host and the co-host ask questions and share their experiences with using Open AI for various use cases, such as transcribing podcasts, generating code, and searching documents. The web page also provides links to the podcast website, Twitter account, and relevant resources on Open AI.</p>
<h1 id="some-more-bullet-points">Some more bullet points</h1>
<ul>
<li>Open AI models are static and do not change as users interact with them, but they can be influenced by providing examples, instructions, or additional context</li>
<li>One-shot and few-shot learning are techniques to provide examples in the prompt to guide the model&rsquo;s output</li>
<li>Fine-tuning is a technique to train additional layers on top of the model using a file of prompt-completion pairs for a specific use case</li>
<li>Vectorization is a technique to convert language into a numeric representation that captures meaning and allows for semantic search</li>
<li>Retrieval-augmented generation is a technique to combine Open AI with a knowledge store that can provide relevant search results as context for the model&rsquo;s output</li>
</ul>
<ul>
<li>Open AI can be integrated with other Azure services such as Cognitive Search and ML to build applications that leverage different types of data and media</li>
</ul>
<p>If you are interested in learning more about Open AI, you can check out the following resources:</p>
<p>The Azure Podcast episode #466: <a href="https://azpodcast.azurewebsites.net/post/Episode-466-Open-AI">https://azpodcast.azurewebsites.net/post/Episode-466-Open-AI</a></p>
<p>The Azure Open AI service: <a href="https://azure.microsoft.com/en-us/services/openai/">https://azure.microsoft.com/en-us/services/openai/</a></p>
<p>The Open AI Playground: <a href="https://playground.openai.com/">https://playground.openai.com/</a></p>
<p>The Open AI documentation: <a href="https://docs.openai.com/">https://docs.openai.com/</a></p>
<h2 id="links">Links:</h2>
<p>202307140707</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Video: Deploying AKS Cluster With Azure CNI Using Bicep</title>
      <link>https://mischavandenburg.com/zet/video-deploy-aks-with-azure-cni/</link>
      <pubDate>Sun, 09 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/video-deploy-aks-with-azure-cni/</guid>
      <description>In this video, I will show you how to use Bicep to deploy a Kubernetes cluster with custom network settings using the Azure CNI.
Azure CNI allows pods to be assigned IP addresses from Azure VNets which allows them to communicate with Azure resources directly through peered networks.
I use Neovim and the Azure CLI for my coding and deployment.
You will learn how to:
Implement dev/test prefix to create multiple clusters with the same template Plan a VNet range for an Azure CNI cluster and be mindful of overlaps Deploy a VNet and subnet for the cluster using Bicep Deploy a cluster with Azure CNI enabled and configure the maximum number of pods per node Validate your Bicep template and troubleshoot errors Explore the results of your deployment in the Azure portal Understand the limitations of Azure CNI and why VNet peering is not supported in my configuration due to overlaps This video is suitable for anyone who wants to learn more about Azure CNI and how to use it in their Kubernetes deployments.</description>
      <content:encoded><![CDATA[
<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/_U3HichIJ0Q" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<p>In this video, I will show you how to use Bicep to deploy a Kubernetes cluster with custom network settings using the Azure CNI.</p>
<p>Azure CNI allows pods to be assigned IP addresses from Azure VNets which allows them to communicate with Azure resources directly through peered networks.</p>
<p>I use Neovim and the Azure CLI for my coding and deployment.</p>
<p>You will learn how to:</p>
<ul>
<li>Implement dev/test prefix to create multiple clusters with the same template</li>
<li>Plan a VNet range for an Azure CNI cluster and be mindful of overlaps</li>
<li>Deploy a VNet and subnet for the cluster using Bicep</li>
<li>Deploy a cluster with Azure CNI enabled and configure the maximum number of pods per node</li>
<li>Validate your Bicep template and troubleshoot errors</li>
<li>Explore the results of your deployment in the Azure portal</li>
<li>Understand the limitations of Azure CNI and why VNet peering is not supported in my configuration due to overlaps</li>
</ul>
<p>This video is suitable for anyone who wants to learn more about Azure CNI and how to use it in their Kubernetes deployments.</p>
<h1 id="excalidraw">Excalidraw</h1>
<p><img loading="lazy" src="/excni.png" type="" alt=""  /></p>
<h1 id="bullet-points">Bullet Points</h1>
<ul>
<li>Introduction to Azure CNI</li>
<li>Implement dev/test prefix</li>
<li>Deploy VNET and one subnet for the cluster</li>
<li>Deploy cluster with Azure CNI enabled</li>
</ul>
<h1 id="vnet-planning">VNet planning</h1>
<p>VNet cidr: 10.108.0.0/16</p>
<p>Subnet cidr:</p>
<p>10.108.0.0/16 - 65,536 addresses</p>
<p>Service cidr 10.0.0.0/16
DNS service ip addres 10.0.0.10</p>
<h2 id="links">Links:</h2>
<p>202307071807</p>
<p><a href="https://youtu.be/_U3HichIJ0Q">https://youtu.be/_U3HichIJ0Q</a></p>
<p><a href="https://learn.microsoft.com/en-us/azure/aks/configure-azure-cni">https://learn.microsoft.com/en-us/azure/aks/configure-azure-cni</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Wrote A Script To Delete All Resource Groups In An Azure Subscription</title>
      <link>https://mischavandenburg.com/zet/script-delete-all-resource-groups/</link>
      <pubDate>Sat, 08 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/script-delete-all-resource-groups/</guid>
      <description>In the Azure portal you can&amp;rsquo;t select multiple resource groups for deletion.
I have a sponsored subscription to play around in which I sometimes wish to clean completely.
I wrote this script to delete all resource groups using bash.
#!/bin/bash # script to delete all resource groups in a subscription using Azure CLI # get the current subscription name to confirm subscription=$(az account show --query name -o tsv) echo &amp;#34;Use this script with caution!</description>
      <content:encoded><![CDATA[<p>In the Azure portal you can&rsquo;t select multiple resource groups for deletion.</p>
<p>I have a sponsored subscription to play around in which I sometimes wish to clean completely.</p>
<p>I wrote this script to delete all resource groups using bash.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1"># script to delete all resource groups in a subscription using Azure CLI</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># get the current subscription name to confirm</span>
</span></span><span class="line"><span class="cl"><span class="nv">subscription</span><span class="o">=</span><span class="k">$(</span>az account show --query name -o tsv<span class="k">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;Use this script with caution!&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;You are about to delete all resource groups in the subscription: </span><span class="nv">$subscription</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># prompt for confirmation</span>
</span></span><span class="line"><span class="cl"><span class="nb">read</span> -p <span class="s2">&#34;Are you sure? (y/n) &#34;</span> will_delete
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">[[</span> <span class="nv">$will_delete</span> <span class="o">==</span> <span class="o">[</span>Yy<span class="o">]</span>* <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
</span></span><span class="line"><span class="cl">	<span class="nb">echo</span> <span class="s2">&#34;Deleting resource groups...&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nv">groups</span><span class="o">=</span><span class="k">$(</span>az group list --query <span class="s2">&#34;[].name&#34;</span> -o tsv<span class="k">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1"># Loop through each group name and delete it</span>
</span></span><span class="line"><span class="cl">	<span class="k">for</span> group in <span class="nv">$groups</span><span class="p">;</span> <span class="k">do</span>
</span></span><span class="line"><span class="cl">		az group delete --name <span class="s2">&#34;</span><span class="nv">$group</span><span class="s2">&#34;</span> --yes --no-wait
</span></span><span class="line"><span class="cl">	<span class="k">done</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nb">echo</span> <span class="s2">&#34;All resource groups have been deleted.&#34;</span>
</span></span><span class="line"><span class="cl">	<span class="nb">exit</span> <span class="m">0</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;Exiting without deleting any resource groups.&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> <span class="s2">&#34;Probably wise.&#34;</span>
</span></span></code></pre></div><h2 id="links">Links:</h2>
<p>202307081507</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Choosing A Cloud And The Importance Of Specialization</title>
      <link>https://mischavandenburg.com/zet/choosing-a-cloud-provider-and-specialization/</link>
      <pubDate>Mon, 03 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/choosing-a-cloud-provider-and-specialization/</guid>
      <description>As a DevOps Engineer or Cloud Native Engineer, I think it’s important to specialize in one cloud provider in the beginning of your career. Specializing allows you to gain deep knowledge and expertise in the specific tools and services related to that cloud provider, making you a valuable asset to any company using that provider. Although cloud computing is similar in essence no matter which provider you choose, each cloud provider has its own vocabulary and way of structuring things.</description>
      <content:encoded><![CDATA[<p>As a DevOps Engineer or Cloud Native Engineer, I think it’s important to specialize in one cloud provider in the beginning of your career. Specializing allows you to gain deep knowledge and expertise in the specific tools and services related to that cloud provider, making you a valuable asset to any company using that provider. Although cloud computing is similar in essence no matter which provider you choose, each cloud provider has its own vocabulary and way of structuring things.</p>
<p>After my first year as a DevOps Engineer I was still trying to figure out which one to choose and which one would suit me best. With the rapid pace of innovation in the cloud computing industry, it can be challenging to stay up-to-date with the latest developments and features for multiple providers. I tried to keep up with the developments for each provider and tried to be a broad professional who could work with all of them. However, I think it is best to specialize early in your career, and then you can learn a different one after you have gained some significant experience with your first one.</p>
<p>After several insightful conversations with my colleagues, and after working with Azure for a year as a consultant, I decided to go all-in on Azure, and it has been a liberating experience so far. By focusing solely on Azure, I am able to fully immerse myself in their ecosystem and gain a deep understanding of their tools and services. I feel I have a sense of direction now, and I can limit the content I consume and the news I read to this one particular ecosystem only. And that feels like a relief to me.</p>
<p>This is of course very personal for everybody, but I’m someone who loves to learn and who tends to be a bit of a “jack of all trades” who knows a little bit of everything but who doesn’t have very deep knowledge of a particular subject in particular. By choosing a cloud and going all-in on it, I can become a specialist and go deep in Azure.</p>
<h1 id="why-i-chose-azure">Why I chose Azure</h1>
<p>I chose Azure because Microsoft is already very established in the Dutch market. Governments and large corporations typically have their entire user base stored in Active Directory and they use Microsoft Office licenses already. When they decide to move to the cloud, Microsoft offers them very good terms if they choose Microsoft instead of AWS, for example.</p>
<p>Azure’s strong presence in the Dutch market and their ability to offer attractive terms to existing Microsoft customers make them a popular choice for companies looking to move to the cloud. With 73 percent, Microsoft Azure took most of the market share for cloud computing in the Netherlands in 2020. Azure had within the healthcare sector the highest share with 90 percent. Microsoft has some very substantial clients within government, health care, and the corporate world.</p>
<p>These previous reasons are all related with job security and the assurance that there will be a long career in Azure ahead of me. But it&rsquo;s not only because of these reasons why I chose Azure. After gaining experience with Azure as a consultant, I&rsquo;ve discovered that the cloud ecosystem Microsoft has created suits me very well. I&rsquo;m very impressed with the different solutions that Azure is able to provide to solve business needs. Not every business is interested or capable of running everything on virtual machines, and Azure&rsquo;s PAAS and SAAS offerings provide level of of abstraction which can be tailored to any business out there.</p>
<p>Moreover, I really like the tooling. Although I really wanted to gain more experience with Terraform when I started my current contract, I&rsquo;ve fallen a little bit in love with Bicep after I started to work with it every day. I love the fact that Bicep uses Azure itself as a state file, rather than having to manage a state file which can be a pain when using it from pipelines or with multiple people. The Bicep language server (which can be used in Neovim as well) is a very pleasant editing experience. Azure DevOps really nailed it with being a &ldquo;one stop shop&rdquo; for everything from project management and tickets to CI/CD with Azure Pipelines. Although it has its quirks, Azure DevOps is a real pleasure to work with. And I also think that the Azure CLI is a very well-designed interface to the cloud platform.</p>
<h1 id="beyond-blue">Beyond Blue</h1>
<p>After I made my choice, I decided to join Beyond Blue. I was already working for Fullstaq, and Beyond Blue is a sister company of Fullstaq. Beyond Blue is a team of Azure Experts who love to go deep and who have a huge amount of experience and knowledge on Microsoft Azure. We help start-ups, scale-ups, and enterprises in both the public and private sector create scalable, flexible, and secure cloud-native solutions build on Microsoft Azure.</p>
<p>We have Microsoft Valued Professionals (MVP), Microsoft Certified Trainers (MCT), Azure Kubernetes Service and containerization experts on board who are ready to tackle each and every challenge for our clients.</p>
<h1 id="summing-up">Summing up</h1>
<p>To sum up, I think specializing early has the following benefits:</p>
<ul>
<li>Limits the amount of news and new developments you have to follow</li>
<li>Allows learning terminology quicker becuase you stay within one ecosystem</li>
<li>Certifications tend to build upon each other within a single provider</li>
<li>Gives a sense of direction in learning and development</li>
<li>Improves familiarity with the documentation and tooling</li>
</ul>
<p>You can always broaden your horizon after you have gained a few years with the first provider you chose, if you&rsquo;d like to.</p>
<h2 id="links">Links:</h2>
<p>202306241706</p>
<p><a href="https://www.statista.com/statistics/1056500/distribution-of-popular-cloud-services-in-the-netherlands-by-sector/">https://www.statista.com/statistics/1056500/distribution-of-popular-cloud-services-in-the-netherlands-by-sector/</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>How To Generate Random Strings In Bicep</title>
      <link>https://mischavandenburg.com/zet/bicep-random-strings/</link>
      <pubDate>Sun, 02 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/bicep-random-strings/</guid>
      <description>In this video I explain how to generate random strings in Bicep and demonstrate a couple of deployments.
I use the uniqueString function combined with the utcNow function. But the caveat is that you can only use it as a default value for a parameter, as follows:
param keyVaultName string = &#39;key-vault-${uniqueString(resourceGroup().id, utcNow())}&#39;
uniqueString() doesn&amp;rsquo;t really generate a unique string. It is a hash function which generates a 13 character string based on the input you give it.</description>
      <content:encoded><![CDATA[
<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/n9MRNnAJjZY" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<p>In this video I explain how to generate random strings in Bicep and demonstrate a couple of deployments.</p>
<p>I use the uniqueString function combined with the utcNow function. But the caveat is that you can only use it as a default value for a parameter, as follows:</p>
<p><code>param keyVaultName string = 'key-vault-${uniqueString(resourceGroup().id, utcNow())}'</code></p>
<p><code>uniqueString()</code> doesn&rsquo;t really generate a unique string. It is a hash function which generates a 13 character string based on the input you give it. so <code>uniqueString('coffee')</code> will always have the same output.</p>
<p>To generate a truly unique string, you pass in the <code>utcNow()</code> function which generates a UNIX timestamp. However, Bicep does not allow you to use this function everywhere. It may only be used as a default value for a parameter.</p>
<h2 id="links">Links:</h2>
<p>202307022107</p>
<p><a href="https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/bicep-functions-string#uniquestring">https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/bicep-functions-string#uniquestring</a></p>
<p>[[bicep]]
[[coding]]</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Azure Lowlands: Impressions from my first IT event</title>
      <link>https://mischavandenburg.com/zet/azure-lowlands/</link>
      <pubDate>Sat, 01 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/azure-lowlands/</guid>
      <description>Have you ever attended an IT event that felt like a festival from the sixties? That was my experience at Azure Lowlands! I couldn&amp;rsquo;t have wished for a better first IT event. It was like going back in time, but with a modern twist.
The name Lowlands immediately appealed to me. I had no idea what to expect. And the name lived up to it! I&amp;rsquo;m a big fan of Jimi Hendrix and the Woodstock vibe, and that&amp;rsquo;s exactly what I felt at Azure Lowlands.</description>
      <content:encoded><![CDATA[<p>Have you ever attended an IT event that felt like a festival from the sixties? That was my experience at Azure Lowlands! I couldn&rsquo;t have wished for a better first IT event. It was like going back in time, but with a modern twist.</p>
<p>The name Lowlands immediately appealed to me. I had no idea what to expect. And the name lived up to it! I&rsquo;m a big fan of Jimi Hendrix and the Woodstock vibe, and that&rsquo;s exactly what I felt at Azure Lowlands. When I walked into the first talk, I was surprised by a hall full of colorful beach chairs, and people who were listening to the speaker while taking it easy and lounging in the chairs. I felt right at home!</p>
<p>It was like a festival, but one where you could also learn a lot. I attended fascinating presentations, on topics such as Azure Networking, Identity Management, data management on AKS, Managed Prometheus &amp; Grafana and Azure Infrastructure as Code with Bicep. My notebook was full of notes and new insights at the end of the day that I want to delve deeper into in my evening studies. I got a lot of new ideas.</p>
<p>In addition, it was also cool to see my colleagues shine. There was a lot of interest in our booth and everyone was helped friendly and professionally. Hats off to the booth crew, you did a great job.</p>
<p>For an introvert like me, these kinds of events are quite exhausting, and I also need a few days to recover. But although it took a lot of energy, I also got a lot of energy, and that balanced each other out nicely at this event. It was also a good experience to be in a venue full of nerds for the first time: I really feel like I found my &ldquo;tribe&rdquo;. I&rsquo;ll definitely be back next year!</p>
<h2 id="links">Links:</h2>
<p>202307011407</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Some Interesting Facts About Azure</title>
      <link>https://mischavandenburg.com/zet/interesting-facts-azure/</link>
      <pubDate>Fri, 30 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/interesting-facts-azure/</guid>
      <description>Some interesting facts about Azure from this Reddit post by Denis Kazakov, Microsoft MVP
Things that stand out to me:
85% of Fortune 500 companies use Microsoft Azure Cloud Azure generated a revenue of 75,3 billion in 2022 which is 38% of whole Microsoft&amp;rsquo;s revenue. It is x3 in compare to 2017. The project name was Red Dog internally, which you can sometimes see as DNS or as cloud service VM hostnames like RDxxxxx https://www.</description>
      <content:encoded><![CDATA[<p>Some interesting facts about Azure from this Reddit post by Denis Kazakov, Microsoft MVP</p>
<p>Things that stand out to me:</p>
<ul>
<li>85% of Fortune 500 companies use Microsoft Azure Cloud</li>
<li>Azure generated a revenue of 75,3 billion in 2022 which is 38% of whole Microsoft&rsquo;s revenue. It is x3 in compare to 2017.</li>
<li>The project name was Red Dog internally, which you can sometimes see as DNS or as cloud service VM hostnames like RDxxxxx</li>
</ul>
<p><a href="https://www.reddit.com/r/AZURE/comments/14mcuoy/some_interesting_facts_about_azure/?utm_source=share&amp;utm_medium=web2x&amp;context=3">https://www.reddit.com/r/AZURE/comments/14mcuoy/some_interesting_facts_about_azure/?utm_source=share&amp;utm_medium=web2x&amp;context=3</a></p>
<h2 id="links">Links:</h2>
<p>202306300706</p>
<p><a href="https://www.reddit.com/r/AZURE/comments/14mcuoy/some_interesting_facts_about_azure/?utm_source=share&amp;utm_medium=web2x&amp;context=3">https://www.reddit.com/r/AZURE/comments/14mcuoy/some_interesting_facts_about_azure/?utm_source=share&amp;utm_medium=web2x&amp;context=3</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Video: Finishing Pipeline Setup  &amp; Working on KeyVault Template - Azure Kubernetes Lab Series</title>
      <link>https://mischavandenburg.com/zet/video-finish-pipeline-setup-aks-series/</link>
      <pubDate>Fri, 30 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/video-finish-pipeline-setup-aks-series/</guid>
      <description>Finish deploying keyvault using pipeline Get the random name generation to work Lessons Learned Subscriptions need to be registered with resource providers, apparently https://learn.microsoft.com/en-us/azure/azure-resource-manager/troubleshooting/error-register-resource-provider?tabs=azure-cli
acccesPolicies are mandatory on KeyVaults, but not when RBAC is enabled Assign contributor role to Azure DevOps service connection to be able to create resource groups from pipeline Achieved Setting up connection between pipeline and Azure subscription Assign correct rights to the service connection so it is allowed to deploy new resource groups (and other resources) Learned about provider registrations Made progress on creating unique names for resources Successfully deployed new resource group and key vault from the pipeline Next time: Look into random string creation with utcNow</description>
      <content:encoded><![CDATA[
<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/eooZ3OHl5Mc" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<ul>
<li>Finish deploying keyvault using pipeline</li>
<li>Get the random name generation to work</li>
</ul>
<h1 id="lessons-learned">Lessons Learned</h1>
<ul>
<li>Subscriptions need to be registered with resource providers, apparently</li>
</ul>
<p><a href="https://learn.microsoft.com/en-us/azure/azure-resource-manager/troubleshooting/error-register-resource-provider?tabs=azure-cli">https://learn.microsoft.com/en-us/azure/azure-resource-manager/troubleshooting/error-register-resource-provider?tabs=azure-cli</a></p>
<ul>
<li>acccesPolicies are mandatory on KeyVaults, but not when RBAC is enabled</li>
<li>Assign contributor role to Azure DevOps service connection to be able to create resource groups from pipeline</li>
</ul>
<h1 id="achieved">Achieved</h1>
<ul>
<li>Setting up connection between pipeline and Azure subscription</li>
<li>Assign correct rights to the service connection so it is allowed to deploy new resource groups (and other resources)</li>
<li>Learned about provider registrations</li>
<li>Made progress on creating unique names for resources</li>
<li>Successfully deployed new resource group and key vault from the pipeline</li>
</ul>
<h1 id="next-time">Next time:</h1>
<p>Look into random string creation with utcNow</p>
<p><a href="https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/bicep-functions-date#utcnow">https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/bicep-functions-date#utcnow</a></p>
<p>or newGuid</p>
<p><a href="https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/bicep-functions-string#newguid">https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/bicep-functions-string#newguid</a></p>
<p>Links:</p>
<p>202306281806</p>
<h2 id="links">Links:</h2>
<p>202306302206</p>
<p><a href="https://youtu.be/eooZ3OHl5Mc">https://youtu.be/eooZ3OHl5Mc</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Video: Setting Up A Simple Azure Pipeline To Deploy A Keyvault</title>
      <link>https://mischavandenburg.com/zet/video-aks-lab-pipeline-first-setup/</link>
      <pubDate>Fri, 30 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/video-aks-lab-pipeline-first-setup/</guid>
      <description>Write KeyVault template Write pipeline code set up Azure DevOps pipeline Lessons Learned Always make sure to use az deployment group instead of az group deployment Because it has older Bicep version and will be deprecated Make sure to be in correct Directory to be able to sync subscriptions for service connection Links: 202306302206
https://youtu.be/WnA8V3uq7P8</description>
      <content:encoded><![CDATA[
<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/WnA8V3uq7P8" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<ul>
<li>Write KeyVault template</li>
<li>Write pipeline code</li>
<li>set up Azure DevOps pipeline</li>
</ul>
<h1 id="lessons-learned">Lessons Learned</h1>
<ul>
<li>Always make sure to use <code>az deployment group</code> instead of <code>az group deployment</code></li>
<li>Because it has older Bicep version and will be deprecated</li>
<li>Make sure to be in correct Directory to be able to sync subscriptions for service connection</li>
</ul>
<h2 id="links">Links:</h2>
<p>202306302206</p>
<p><a href="https://youtu.be/WnA8V3uq7P8">https://youtu.be/WnA8V3uq7P8</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Video: Deploying an AKS Cluster with Bicep, GitHub Copilot and Neovim</title>
      <link>https://mischavandenburg.com/zet/video-deploying-aks-cluster-bicep-github-copilot/</link>
      <pubDate>Tue, 27 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/video-deploying-aks-cluster-bicep-github-copilot/</guid>
      <description>Inspired by a GitHub Copilot demonstration I witnessed at Microsoft, I wanted to see how quickly I could deploy an AKS cluster from Neovim with Bicep using Copilot. I wasn&amp;rsquo;t disappointed!
Links: 202306271706
https://www.youtube.com/watch?v=l0B65FUfNBU
[[aks]] [[kubernetes]] [[neovim]] [[bicep]] [[coding]]</description>
      <content:encoded><![CDATA[<p>Inspired by a GitHub Copilot demonstration I witnessed at Microsoft, I wanted to see how quickly I could deploy an AKS cluster from Neovim with Bicep using Copilot. I wasn&rsquo;t disappointed!</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/l0B65FUfNBU" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<h2 id="links">Links:</h2>
<p>202306271706</p>
<p><a href="https://www.youtube.com/watch?v=l0B65FUfNBU">https://www.youtube.com/watch?v=l0B65FUfNBU</a></p>
<p>[[aks]]
[[kubernetes]]
[[neovim]]
[[bicep]]
[[coding]]</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Video: Introducing New Bicep Parameter Files - .bicepparam - No more JSON!</title>
      <link>https://mischavandenburg.com/zet/video-bicep-bicepparam/</link>
      <pubDate>Tue, 27 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/video-bicep-bicepparam/</guid>
      <description>The new parameter files use bicep style formatting instead of JSON, and they will make the lives of Cloud Engineers a lot easier. They have the following advantages:
More readable and editor friendly Cleaner and less lines of code VSCode integration Quickly convert from JSON or template file using VSCode In this video I introduce these new files. I go over the new formatting, and I also introduce the new features in VSCode for the .</description>
      <content:encoded><![CDATA[<p>The new parameter files use bicep style formatting instead of JSON, and they will make the lives of Cloud Engineers a lot easier. They have the following advantages:</p>
<ul>
<li>More readable and editor friendly</li>
<li>Cleaner and less lines of code</li>
<li>VSCode integration</li>
<li>Quickly convert from JSON or template file using VSCode</li>
</ul>
<p>In this video I introduce these new files. I go over the new formatting, and I also introduce the new features in VSCode for the .bicepparam files.</p>
<p>Yes, you read that right, you&rsquo;ll be seeing a hardcore vim user switch to VSCode for this particular task!</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/6Gav1JpGAzo" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<h2 id="links">Links:</h2>
<p>202306271706</p>
<p><a href="https://youtu.be/6Gav1JpGAzo">https://youtu.be/6Gav1JpGAzo</a></p>
<p><a href="https://github.com/Azure/bicep/releases/tag/v0.18.4">https://github.com/Azure/bicep/releases/tag/v0.18.4</a></p>
<p><a href="https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/parameter-files?tabs=Bicep">https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/parameter-files?tabs=Bicep</a></p>
<p><a href="https://github.com/mischavandenburg/lab/tree/main/bicep/keyvault-parameters">https://github.com/mischavandenburg/lab/tree/main/bicep/keyvault-parameters</a></p>
<p>[[AKS]]
[[bicep]]
[[coding]]
[[kubernetes]]
[[azure]]
[[neovim]]</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Microsoft Achieves First Milestone Towards A Quantum Supercomputer</title>
      <link>https://mischavandenburg.com/zet/microsoft-first-milestone-quantum-supercomputer/</link>
      <pubDate>Mon, 26 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/microsoft-first-milestone-quantum-supercomputer/</guid>
      <description>Links: 202306261006
https://www.youtube.com/watch?v=7VQ7BZwuZkU
https://cloudblogs.microsoft.com/quantum/2023/06/21/microsoft-achieves-first-milestone-towards-a-quantum-supercomputer/</description>
      <content:encoded><![CDATA[
<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/7VQ7BZwuZkU" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<h2 id="links">Links:</h2>
<p>202306261006</p>
<p><a href="https://www.youtube.com/watch?v=7VQ7BZwuZkU">https://www.youtube.com/watch?v=7VQ7BZwuZkU</a></p>
<p><a href="https://cloudblogs.microsoft.com/quantum/2023/06/21/microsoft-achieves-first-milestone-towards-a-quantum-supercomputer/">https://cloudblogs.microsoft.com/quantum/2023/06/21/microsoft-achieves-first-milestone-towards-a-quantum-supercomputer/</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>How To Get The Id Of An Existing Subnet In Bicep</title>
      <link>https://mischavandenburg.com/zet/bicep-getting-subnet-id/</link>
      <pubDate>Fri, 23 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/bicep-getting-subnet-id/</guid>
      <description>Did a refactor of some of our Bicep template code for our AKS clusters today.
Before, we were using a rather complicated line of code using string interpolation.
var vnetSubnetId = &amp;#39;${resourceId(vnetResourceGroupName, &amp;#39;Microsoft.Network/virtualNetworks&amp;#39;, vnetName)}/subnets/${vnetSubnetName}&amp;#39; This was hard to read and the Bicep linter gave the following warning in my editor and during deployment:
WARNING: D:\a\1\a\drop\Generic-templates\containers\azure-kubernetes-service\v4.0\templates\aks.bicep(117,7) : Warning use-resource-id-functions: If property &amp;ldquo;vnetSubnetID&amp;rdquo; represents a resource ID, it must use a symbolic resource reference, be a parameter or start with one of these functions: extensionResourceId, guid, if, reference, resourceId, subscription, subscriptionResourceId, tenantResourceId.</description>
      <content:encoded><![CDATA[<p>Did a refactor of some of our Bicep template code for our AKS clusters today.</p>
<p>Before, we were using a rather complicated line of code using string interpolation.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">var</span><span class="w"> </span>vnetSubnetId<span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="s">&#39;${resourceId(vnetResourceGroupName, &#39;</span>Microsoft<span class="p">.</span>Network<span class="o">/</span>virtualNetworks<span class="s">&#39;, vnetName)}/subnets/${vnetSubnetName}&#39;</span><span class="w">
</span></span></span></code></pre></div><p>This was hard to read and the Bicep linter gave the following warning in my editor and during deployment:</p>
<p>WARNING: D:\a\1\a\drop\Generic-templates\containers\azure-kubernetes-service\v4.0\templates\aks.bicep(117,7) : Warning use-resource-id-functions: If property &ldquo;vnetSubnetID&rdquo; represents a resource ID, it must use a symbolic resource reference, be a parameter or start with one of these functions: extensionResourceId, guid, if, reference, resourceId, subscription, subscriptionResourceId, tenantResourceId. Found nonconforming expression at vnetSubnetID -&gt; vnetSubnetId [https://aka.ms/bicep/linter/use-resource-id-functions]</p>
<h2 id="using-existing-resources">Using Existing Resources</h2>
<p>After some experimentation I managed to fix it as follows:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="p">@</span><span class="nd">description</span><span class="p">(</span><span class="s">&#39;Virtual Network name&#39;</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">param</span><span class="w"> </span>vnetName<span class="w"> </span><span class="nf">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">@</span><span class="nd">description</span><span class="p">(</span><span class="s">&#39;Virtual Network resource group name&#39;</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">param</span><span class="w"> </span>vnetResourceGroupName<span class="w"> </span><span class="nf">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">@</span><span class="nd">description</span><span class="p">(</span><span class="s">&#39;Virtual Network subnet name&#39;</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">param</span><span class="w"> </span>vnetSubnetName<span class="w"> </span><span class="nf">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c1">// Import the existing vnet and subnet to get the subnet id for deployment</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">resource</span><span class="w"> </span>vnet<span class="w"> </span><span class="s">&#39;Microsoft.Network/virtualNetworks@2022-11-01&#39;</span><span class="w"> </span>existing<span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span>vnetName<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">scope</span><span class="p">:</span><span class="w"> </span><span class="nf">resourceGroup</span><span class="p">(</span>vnetResourceGroupName<span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">resource</span><span class="w"> </span>subnet<span class="w"> </span><span class="s">&#39;Microsoft.Network/virtualNetworks/subnets@2022-11-01&#39;</span><span class="w"> </span>existing<span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span>vnetSubnetName<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">parent</span><span class="p">:</span><span class="w"> </span>vnet<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><p>Interestingly, subnets are not actually a resource in Azure. When you open a Resource Group, it will not be listed under resources. However, they do get a resource id. This posed a challenge, but I solved it by importing the existing VNet as well and setting it as the parent of the subnet.</p>
<p>Now I can access the subnet id by using <code>subnet.id</code>. I need this later when deploying the AKS cluster itself.</p>
<h2 id="links">Links:</h2>
<p>202306231206</p>
<p><a href="https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/existing-resource">https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/existing-resource</a></p>
<p><a href="https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/linter-rule-use-resource-id-functions">https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/linter-rule-use-resource-id-functions</a></p>
<p>[[bicep]]
[[coding]]
[[azure]]</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>What is Azure CNI Overlay for AKS?</title>
      <link>https://mischavandenburg.com/zet/azure-aks-cni-overlay/</link>
      <pubDate>Wed, 14 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/azure-aks-cni-overlay/</guid>
      <description>CNI? CNI stands for Container Network Interface. It allows communication between pods and services.
Current Azure CNI limitations Let&amp;rsquo;s take a practical example. We have an enterprise environment where a large network is utilized, spanning multiple clouds and on-prem infrastructure hubs. To enable seamless communication across these sections, they must belong to the same network. As a result, specific IP address ranges are assigned to each section, with AWS, On-Prem A, and Azure each having their respective ranges.</description>
      <content:encoded><![CDATA[<h1 id="cni">CNI?</h1>
<p>CNI stands for Container Network Interface. It allows communication between pods and services.</p>
<h2 id="current-azure-cni-limitations">Current Azure CNI limitations</h2>
<p>Let&rsquo;s take a practical example. We have an enterprise environment where a large network is utilized, spanning multiple clouds and on-prem infrastructure hubs. To enable seamless communication across these sections, they must belong to the same network. As a result, specific IP address ranges are assigned to each section, with AWS, On-Prem A, and Azure each having their respective ranges.</p>
<p>Let&rsquo;s say Azure is assigned the following ranges:</p>
<p>10.60.0.0/16</p>
<p>10.61.0.0/16</p>
<p>10.62.0.0/16</p>
<p>This means that the networks in each of these ranges would have a maximum possible amount of 65534 addresses per range.</p>
<p>With the current Azure CNI (i.e. the non-overlay version), all pods are assigned an IP address from one of these ranges. It also uses direct VNet routing.  Since the pods use VNet IP&rsquo;s, there is a maximum of 65.000 pods per cluster. In other words, there is a risk for IP exhaustion, which limits the scalability of your workloads. Moreover, pod subnets cannot be shared across clusters.</p>
<p>It is crucial to carefully plan the number of pods you expect to deploy. If the required number of IP addresses exceeds the available addresses in the subnet, you will not be able to run your pods.</p>
<p>Now, these ranges are large and you can anticipate the growth of your resources. For now we are fine. But to design an infrastructure which is truly scalable and extendable, you will need to look into different options. This is where the Azure CNI Overlay comes in.</p>
<h2 id="benefits-of-azure-cni-overlay">Benefits of Azure CNI Overlay</h2>
<p>An Overlay network is an abstracted, virtual network which is put on top of your current network infrastructure. Nodes are assigned IP addresses from the VNets that they are deployed in, but pods get assigned IP addresses from the Overlay network.</p>
<p>Pods are assigned addresses from a private CIDR which is logically separate from the VNet hosting the nodes. They do not use up the IP addressess of the VNets, which means that your workloads become nearly infinitely scalable within your assigned IP address ranges when you are operating in this type of corporate networking infrastructure with IP range limitations. You can scale up to literally thousands of nodes without worrying about IP exhaustion.</p>
<p><img loading="lazy" src="/cnioverlay.png" type="" alt=""  /></p>
<p>Additionally, the Overlay network can also span across multiple AKS clusters. This opens up a whole world of possibilities where pods from separate workloads on separate clusters could communicate with each other directly using the high speed native direct routing of the Azure network.</p>
<h2 id="limitations">Limitations</h2>
<p>Azure CNI Overlay also comes with some limitations. A big one is that you cannot use Application Gateway as an Ingress Controller (AGIC) for an Overlay cluster.</p>
<p>Other notable limitations:</p>
<ul>
<li>Windows support is still in Preview</li>
<li>Virtual Machine Availability Sets (VMAS) are not supported for Overlay</li>
<li>Dualstack networking is not supported in Overlay</li>
</ul>
<h2 id="conclusion">Conclusion</h2>
<p>In conclusion, the Azure CNI Overlay provides a powerful solution to address the challenges of IP exhaustion and scalability in Azure AKS. By implementing the overlay network, organizations can overcome the limitations of the non-overlay version of Azure CNI and achieve a truly scalable and manageable infrastructure.</p>
<p>Azure CNI Overlay is currently in preview for Windows and GA for Linux nodes, but I&rsquo;m very excited about the developments. I&rsquo;ll be following them closely and I hope to be a part of its implementation at my current contract.</p>
<h1 id="links">Links:</h1>
<p><a href="https://learn.microsoft.com/en-us/azure/aks/azure-cni-overlay">https://learn.microsoft.com/en-us/azure/aks/azure-cni-overlay</a></p>
<p><a href="https://www.youtube.com/watch?v=kLBLaCC_dNs">https://www.youtube.com/watch?v=kLBLaCC_dNs</a></p>
<p><a href="https://azure.microsoft.com/en-us/updates/generally-available-azure-cni-overlay-for-linux/">https://azure.microsoft.com/en-us/updates/generally-available-azure-cni-overlay-for-linux/</a></p>
<p>202306131506</p>
<p>[[aks-networking-essentials]]</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Deploying Simple Applications to AKS with Draft</title>
      <link>https://mischavandenburg.com/zet/deploy-draft-azure/</link>
      <pubDate>Fri, 09 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/deploy-draft-azure/</guid>
      <description>Not sure how this will play out with more complex applications, but I can definitely see how this would accellerate the process for developers to get their first versions deployed without the toil of setting up manifests and pipelines. Will definitely play around with this soon and I&amp;rsquo;m curious to see how far Microsoft will take this!
Links: 202306092006</description>
      <content:encoded><![CDATA[<p>Not sure how this will play out with more complex applications, but I can definitely see how this would accellerate the process for developers to get their first versions deployed without the toil of setting up manifests and pipelines. Will definitely play around with this soon and I&rsquo;m curious to see how far Microsoft will take this!</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/PqhdX8-SZYw" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<h2 id="links">Links:</h2>
<p>202306092006</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>You Can Abort Operations on AKS Clusters Now</title>
      <link>https://mischavandenburg.com/zet/aks-abort-operation/</link>
      <pubDate>Thu, 27 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/aks-abort-operation/</guid>
      <description>It&amp;rsquo;s now possible to abort long running operations on AKS clusters. It was released as Generally Available.
For example:
az aks operation-abort --name myAKSCluster --resource-group myResourceGroup
Links: 202304270704
https://azure.microsoft.com/en-us/updates/generally-available-operation-abort-in-aks/
https://learn.microsoft.com/en-us/azure/aks/manage-abort-operations?tabs=azure-cli</description>
      <content:encoded><![CDATA[<p>It&rsquo;s now possible to abort long running operations on AKS clusters. It was released as Generally Available.</p>
<p>For example:</p>
<p><code>az aks operation-abort --name myAKSCluster --resource-group myResourceGroup</code></p>
<h2 id="links">Links:</h2>
<p>202304270704</p>
<p><a href="https://azure.microsoft.com/en-us/updates/generally-available-operation-abort-in-aks/">https://azure.microsoft.com/en-us/updates/generally-available-operation-abort-in-aks/</a></p>
<p><a href="https://learn.microsoft.com/en-us/azure/aks/manage-abort-operations?tabs=azure-cli">https://learn.microsoft.com/en-us/azure/aks/manage-abort-operations?tabs=azure-cli</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Notes: Advanced Bicep</title>
      <link>https://mischavandenburg.com/zet/advanced-bicep/</link>
      <pubDate>Sat, 18 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/advanced-bicep/</guid>
      <description>Deploying to subscriptions and management groups To tell Bicep which scope to deploy to, use the targetScope keyword, for example, managementGroup.
You&amp;rsquo;re not specifying which management group exactly, this is done during deployment of the template file.
targetScope can be set to resourceGroup, subscription, managementGroup or tenant.
If it is not set, Bicep assumes resourceGroup.
create a resource group targetScope = &amp;#39;subscription&amp;#39; resource resourceGroup &amp;#39;Microsoft.Resources/resourceGroups@2021-01-01&amp;#39; = { name: &amp;#39;example-resource-group&amp;#39; location: &amp;#39;westus&amp;#39; } To deploy you use az deployment group create for resource groups, but you use az deployment sub create for subscriptions, mg for management group and tenant for tenant.</description>
      <content:encoded><![CDATA[<h1 id="deploying-to-subscriptions-and-management-groups">Deploying to subscriptions and management groups</h1>
<p>To tell Bicep which scope to deploy to, use the <code>targetScope</code> keyword, for example, managementGroup.</p>
<p>You&rsquo;re not specifying which management group exactly, this is done during deployment of the template file.</p>
<p>targetScope can be set to resourceGroup, subscription, managementGroup or tenant.</p>
<p>If it is not set, Bicep assumes resourceGroup.</p>
<h2 id="create-a-resource-group">create a resource group</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl">targetScope<span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="si">&#39;subscription&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">resource</span><span class="w"> </span><span class="nf">resourceGroup</span><span class="w"> </span><span class="s">&#39;Microsoft.Resources/resourceGroups@2021-01-01&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="s">&#39;example-resource-group&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">location</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;westus&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><p>To deploy you use <code>az deployment group create</code> for resource groups, but you use <code>az deployment sub create</code> for subscriptions, <code>mg</code> for management group and <code>tenant</code> for tenant.</p>
<h2 id="deployment-scripts">deployment scripts</h2>
<blockquote>
<p>deploymentScripts resources are either PowerShell or Bash scripts that run in a Docker container as part of your template deployment. The default container images have either the Azure CLI or Azure PowerShell available. These scripts run during the processing of the ARM template, so you can add custom behavior to the deployment process.</p>
</blockquote>
<p>Here is an example of a deployment script with some comments:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">resource</span><span class="w"> </span>myFirstDeploymentScript<span class="w"> </span><span class="s">&#39;Microsoft.Resources/deploymentScripts@2020-10-01&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;myFirstDeploymentScript&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">location</span><span class="p">:</span><span class="w"> </span><span class="nf">resourceGroup</span><span class="p">().</span>location<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c1">// can be AzurePowershell or Azure CLI</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">kind</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;AzurePowerShell&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c1">// the script will be run in a container. We need to provide a Managed Identity to give the script the required permissions</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">identity</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">type</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;UserAssigned&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">userAssignedIdentities</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="s">&#39;/subscriptions/01234567-89AB-CDEF-0123-456789ABCDEF/resourcegroups/deploymenttest/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myscriptingid&#39;</span><span class="p">:</span><span class="w"> </span><span class="p">{}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">properties</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">azPowerShellVersion</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;3.0&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// in Bicep we use &#39;&#39;&#39; to indicate a multi line string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">scriptContent</span><span class="p">:</span><span class="w"> </span><span class="s">&#39;&#39;</span><span class="err">&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">$</span><span class="kd">output</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="s">&#39;Hello Learner!&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>Write-Output<span class="w"> </span><span class="err">$</span><span class="kd">output</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">     </span><span class="c1">// the $DeploymentScriptOutputs variable is created to return output back to the Bicep template</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">     </span><span class="c1">// It needs to be a hash table</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">$</span>DeploymentScriptOutputs<span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">@{}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="err">$</span>DeploymentScriptOutputs<span class="p">[</span><span class="si">&#39;text&#39;</span><span class="p">]</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="err">$</span><span class="kd">output</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="s">&#39;&#39;</span><span class="err">&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">retentionInterval</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;P1D&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">output</span><span class="w"> </span>scriptResult<span class="w"> </span><span class="nf">string</span><span class="w"> </span><span class="p">=</span><span class="w"> </span>myFirstDeploymentScript<span class="p">.</span>properties<span class="p">.</span>outputs<span class="p">.</span>text<span class="w">
</span></span></span></code></pre></div><blockquote>
<p>You can also write deployment scripts in Bash. To create outputs from a Bash script, you need to create a JSON file in a location specified by the AZ_SCRIPTS_OUTPUT_PATH environment variable.</p>
</blockquote>
<p>To include a script file, use the following:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="py">properties</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">azPowerShellVersion</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;3.0&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">scriptContent</span><span class="p">:</span><span class="w"> </span><span class="nf">loadTextContent</span><span class="p">(</span><span class="si">&#39;myscript.ps1&#39;</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">retentionInterval</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;P1D&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="deploying-a-managed-identity-and-assigning-a-role">deploying a managed identity and assigning a role</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">var</span><span class="w"> </span>userAssignedIdentityName<span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="si">&#39;configDeployer&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">var</span><span class="w"> </span>roleAssignmentName<span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="nf">guid</span><span class="p">(</span><span class="nf">resourceGroup</span><span class="p">().</span>id<span class="err">,</span><span class="w"> </span><span class="si">&#39;contributor&#39;</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">var</span><span class="w"> </span>contributorRoleDefinitionId<span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="nf">resourceId</span><span class="p">(</span><span class="s">&#39;Microsoft.Authorization/roleDefinitions&#39;</span><span class="err">,</span><span class="w"> </span><span class="s">&#39;b24988ac-6180-42a0-ab88-20f7382dd24c&#39;</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">resource</span><span class="w"> </span>userAssignedIdentity<span class="w"> </span><span class="s">&#39;Microsoft.ManagedIdentity/userAssignedIdentities@2018-11-30&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span>userAssignedIdentityName<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">location</span><span class="p">:</span><span class="w"> </span><span class="nf">resourceGroup</span><span class="p">().</span>location<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">resource</span><span class="w"> </span>roleAssignment<span class="w"> </span><span class="s">&#39;Microsoft.Authorization/roleAssignments@2020-04-01-preview&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span>roleAssignmentName<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">properties</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">roleDefinitionId</span><span class="p">:</span><span class="w"> </span>contributorRoleDefinitionId<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">principalId</span><span class="p">:</span><span class="w"> </span>userAssignedIdentity<span class="p">.</span>properties<span class="p">.</span>principalId<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">principalType</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;ServicePrincipal&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="template-specs">template specs</h2>
<p>When you have a lot of reusable templates, you can use Template Specs to enable your entire organization to deploy them.</p>
<p>You can convert a Bicep file to a template spec. The template spec is then deployed to Azure as a resource, and anybody with the right access and do deployments with the template spec from the portal or Azure CLI. Azure will handle the version control.</p>
<p>You will lose any comments and whitespace.</p>
<p>Bicep modules are intended to be combined into larger deployments. Template specs are for sets of resources with a certain configuration.</p>
<p>Template specs can be used as a Bicep module. You use the following code to import it:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">module</span><span class="w"> </span>storageAccountTemplateSpec<span class="w"> </span><span class="py">&#39;ts</span><span class="p">:</span>f0750bbe-ea75-4ae5-b24d-a92ca601da2c<span class="o">/</span>sharedTemplates<span class="o">/</span><span class="py">StorageWithoutSAS</span><span class="p">:</span>1<span class="p">.</span>0<span class="err">&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;storageAccountTemplateSpec&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Notes: Intermediate Bicep</title>
      <link>https://mischavandenburg.com/zet/intermediate-bicep/</link>
      <pubDate>Tue, 14 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/intermediate-bicep/</guid>
      <description>Today I finished the Intermediate Bicep module. Here are my notes.
Child and Extension You can also use Bicep to refer to resources that were created outside the Bicep file itself. For example, you can refer to resources that your colleagues have created manually by using the Azure portal, or from within another Bicep template or module, even if they&amp;rsquo;re in a different resource group or subscription. By using these features of Bicep, you can unlock the ability to create powerful templates that deploy all aspects of your Azure infrastructure.</description>
      <content:encoded><![CDATA[<p>Today I finished the Intermediate Bicep module. Here are my notes.</p>
<h1 id="child-and-extension">Child and Extension</h1>
<blockquote>
<p>You can also use Bicep to refer to resources that were created outside the Bicep file itself. For example, you can refer to resources that your colleagues have created manually by using the Azure portal, or from within another Bicep template or module, even if they&rsquo;re in a different resource group or subscription. By using these features of Bicep, you can unlock the ability to create powerful templates that deploy all aspects of your Azure infrastructure.</p>
</blockquote>
<p>Some resources are only deployed in context of their parent. For example:</p>
<p>Virtual network subnets 	Microsoft.Network/virtualNetworks/subnets
App Service configuration 	Microsoft.Web/sites/config
SQL databases 	Microsoft.Sql/servers/databases
Virtual machine extensions 	Microsoft.Compute/virtualMachines/extensions
Storage blob containers 	Microsoft.Storage/storageAccounts/blobServices/containers
Azure Cosmos DB containers</p>
<p>It does not make sense for a container to exist without a storage account.</p>
<h2 id="difference-between-child-and-extension">Difference between child and extension</h2>
<p>In summary, you define extensions with the <code>scope</code> keyword, and child resources are defined by nesting them or by using the <code>parent</code> keyword.</p>
<p>An extension resource is a resource that modifies another resource. For example, assigning a role to a resource.</p>
<p>A child resource is a resource that exists only within the context of another resource, such as a subnet existing only within a vnet.</p>
<h2 id="nested-resource">Nested resource</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">resource</span><span class="w"> </span>vm<span class="w"> </span><span class="s">&#39;Microsoft.Compute/virtualMachines@2020-06-01&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span>vmName<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">location</span><span class="p">:</span><span class="w"> </span>location<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">properties</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="kd">resource</span><span class="w"> </span>installCustomScriptExtension<span class="w"> </span><span class="si">&#39;extensions&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;InstallCustomScript&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">location</span><span class="p">:</span><span class="w"> </span>location<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">properties</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c1">// ...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><p>Here the extension resource is within the vm resource. The fully qualified domain name is <code>Microsoft.Compute/virtualMachines/extensions</code>, but it is not necessary because it inherits it from the parent. Therefore we only need to specify &rsquo;extensions&rsquo; here.</p>
<p>No API version is specified either, this is also inherited.</p>
<blockquote>
<p>You can refer to a nested resource by using the :: operator. For example, you could create an output that will return the full resource ID of the extension:</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">output</span><span class="w"> </span>childResourceId<span class="w"> </span><span class="nf">string</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="py">vm</span><span class="p">::</span>installCustomScriptExtension<span class="p">.</span>id<span class="w">
</span></span></span></code></pre></div><h2 id="parent-property">Parent property</h2>
<p>This is the second way to declare a child resource.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">resource</span><span class="w"> </span>vm<span class="w"> </span><span class="s">&#39;Microsoft.Compute/virtualMachines@2020-06-01&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span>vmName<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">location</span><span class="p">:</span><span class="w"> </span>location<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">properties</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">resource</span><span class="w"> </span>installCustomScriptExtension<span class="w"> </span><span class="s">&#39;Microsoft.Compute/virtualMachines/extensions@2020-06-01&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">parent</span><span class="p">:</span><span class="w"> </span>vm<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;InstallCustomScript&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">location</span><span class="p">:</span><span class="w"> </span>location<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">properties</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="dependson">dependsOn</h2>
<p>use dependsOn to indicate a dependency.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="py">dependsOn</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>vm<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">]</span><span class="w">
</span></span></span></code></pre></div><h2 id="extension-resources">Extension resources</h2>
<p>Extension resources are always attached to other Azure resources. They extend them with extra functionality. Some examples are role assignments, locks, and policy assignments.</p>
<p>It doesn&rsquo;t make sense to deploy a lock by itself. It always has to be deployed to another resource, because it prevents deletion or modification of a resource.</p>
<p>Resources are defined almost the same way as normal resources, but you add the <code>scope</code> property to tell Bicep that it is attached to another resource in the template.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">resource</span><span class="w"> </span>cosmosDBAccount<span class="w"> </span><span class="s">&#39;Microsoft.DocumentDB/databaseAccounts@2020-04-01&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span>cosmosDBAccountName<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">location</span><span class="p">:</span><span class="w"> </span>location<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">properties</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c1">// ...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">resource</span><span class="w"> </span>lockResource<span class="w"> </span><span class="s">&#39;Microsoft.Authorization/locks@2016-09-01&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">scope</span><span class="p">:</span><span class="w"> </span>cosmosDBAccount<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;DontDelete&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">properties</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">level</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;CanNotDelete&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">notes</span><span class="p">:</span><span class="w"> </span><span class="s">&#39;Prevents deletion of the toy data Cosmos DB account.&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><p>Extensions have slightly different resource ID&rsquo;s. They consist of the parent resource ID, the separator <code>/providers/</code>, and the extension resource ID.</p>
<blockquote>
<p>If you see a resource ID that starts with a normal resource ID and then adds /providers/ and another resource type and name, it means that you&rsquo;re looking at an extension resource ID.</p>
</blockquote>
<h3 id="existing-resources">Existing resources</h3>
<p>Bicep files often need to refer to resources that have been already created elswewhere. They might have been created in the portal or by another Bicep file.</p>
<p>Here you use the <code>existing</code> keyword in Bicep. You are defining a resource that already exists, and therefore you are telling Bicep that it shouldn&rsquo;t try to deploy it. Think of it as a placeholder resource.</p>
<p>You can do the same for nested or child resources.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">resource</span><span class="w"> </span>storageAccount<span class="w"> </span><span class="s">&#39;Microsoft.Storage/storageAccounts@2019-06-01&#39;</span><span class="w"> </span>existing<span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;toydesigndocs&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h3 id="existing-resources-outside-of-the-resource-group-and-subscription">Existing resources outside of the resource group and subscription</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">resource</span><span class="w"> </span>vnet<span class="w"> </span><span class="s">&#39;Microsoft.Network/virtualNetworks@2020-11-01&#39;</span><span class="w"> </span>existing<span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">scope</span><span class="p">:</span><span class="w"> </span><span class="nf">resourceGroup</span><span class="p">(</span><span class="s">&#39;f0750bbe-ea75-4ae5-b24d-a92ca601da2c&#39;</span><span class="err">,</span><span class="w"> </span><span class="s">&#39;networking-rg&#39;</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="s">&#39;toy-design-vnet&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><p>You can refer to these as long as they are within your Azure AD tenant.</p>
<h2 id="add-child-and-extension-resources-to-an-existing-resource">Add child and extension resources to an existing resource</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">resource</span><span class="w"> </span>server<span class="w"> </span><span class="s">&#39;Microsoft.Sql/servers@2020-11-01-preview&#39;</span><span class="w"> </span>existing<span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span>serverName<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">resource</span><span class="w"> </span>database<span class="w"> </span><span class="s">&#39;Microsoft.Sql/servers/databases@2020-11-01-preview&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">parent</span><span class="p">:</span><span class="w"> </span>server<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span>databaseName<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">location</span><span class="p">:</span><span class="w"> </span>location<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">sku</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;Standard&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">tier</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;Standard&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><p>Use the <code>existing</code> keyword to refer to the resource, and then you add the child by specifying the <code>parent</code> property.</p>
<p>Finally, to deploy an extension resource to an existing resource, use the <code>scope</code> keyword:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">resource</span><span class="w"> </span>storageAccount<span class="w"> </span><span class="s">&#39;Microsoft.Storage/storageAccounts@2019-06-01&#39;</span><span class="w"> </span>existing<span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;toydesigndocs&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">resource</span><span class="w"> </span>lockResource<span class="w"> </span><span class="s">&#39;Microsoft.Authorization/locks@2016-09-01&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">scope</span><span class="p">:</span><span class="w"> </span>storageAccount<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;DontDelete&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">properties</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">level</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;CanNotDelete&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">notes</span><span class="p">:</span><span class="w"> </span><span class="s">&#39;Prevents deletion of the toy design documents storage account.&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="referring-to-an-existing-resources-properties">Referring to an existing resource&rsquo;s properties</h2>
<p>Define the resource and you can refer to its properties if the prperty isn&rsquo;t secure.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">resource</span><span class="w"> </span>applicationInsights<span class="w"> </span><span class="s">&#39;Microsoft.Insights/components@2018-05-01-preview&#39;</span><span class="w"> </span>existing<span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span>applicationInsightsName<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">resource</span><span class="w"> </span>functionApp<span class="w"> </span><span class="s">&#39;Microsoft.Web/sites@2020-06-01&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span>functionAppName<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">location</span><span class="p">:</span><span class="w"> </span>location<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">kind</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;functionapp&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">properties</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">siteConfig</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="py">appSettings</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;APPINSIGHTS_INSTRUMENTATIONKEY&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="py">value</span><span class="p">:</span><span class="w"> </span>applicationInsights<span class="p">.</span>properties<span class="p">.</span>InstrumentationKey<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><p>When you need to access secure data, use the listKeys() function.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">resource</span><span class="w"> </span>storageAccount<span class="w"> </span><span class="s">&#39;Microsoft.Storage/storageAccounts@2019-06-01&#39;</span><span class="w"> </span>existing<span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span>storageAccountName<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">resource</span><span class="w"> </span>functionApp<span class="w"> </span><span class="s">&#39;Microsoft.Web/sites@2020-06-01&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span>functionAppName<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">location</span><span class="p">:</span><span class="w"> </span>location<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">kind</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;functionapp&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">properties</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">siteConfig</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="py">appSettings</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c1">// ...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;StorageAccountKey&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="py">value</span><span class="p">:</span><span class="w"> </span>storageAccount<span class="p">.</span><span class="nf">listKeys</span><span class="p">().</span>keys<span class="p">[</span>0<span class="p">].</span>value<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><p>The VScode extension will show hints to help you understand the data this function returns.</p>
<p>You need to have sufficient permissions to use the listKeys function.</p>
<h2 id="child-and-extension-1">Child and extension</h2>
<p>In this example we are attaching an extension to a child resource.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">resource</span><span class="w"> </span>storageAccount<span class="w"> </span><span class="s">&#39;Microsoft.Storage/storageAccounts@2019-06-01&#39;</span><span class="w"> </span>existing<span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span>storageAccountName<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="kd">resource</span><span class="w"> </span>blobService<span class="w"> </span><span class="si">&#39;blobServices&#39;</span><span class="w"> </span>existing<span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;default&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="cm">/* Note: Here we are attaching to blobServices which itself is a child resource. So we are attaching an extension to a child resource. */</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">resource</span><span class="w"> </span>storageAccountBlobDiagnostics<span class="w"> </span><span class="s">&#39;Microsoft.Insights/diagnosticSettings@2017-05-01-preview&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">scope</span><span class="p">:</span><span class="w"> </span><span class="py">storageAccount</span><span class="p">::</span>blobService<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span>storageAccountBlobDiagnosticSettingsName<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">properties</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">workspaceId</span><span class="p">:</span><span class="w"> </span>logAnalyticsWorkspace<span class="p">.</span>id<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">logs</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="py">category</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;StorageRead&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="py">enabled</span><span class="p">:</span><span class="w"> </span>true<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="py">category</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;StorageWrite&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="py">enabled</span><span class="p">:</span><span class="w"> </span>true<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="py">category</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;StorageDelete&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="py">enabled</span><span class="p">:</span><span class="w"> </span>true<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h1 id="structuring-bicep-for-collaboration">Structuring Bicep for Collaboration</h1>
<h2 id="configuration-maps">configuration maps</h2>
<p>Using many different parameters can be confusing to the user of the template you&rsquo;re writing. One way of solving this is by creating a config map:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="p">@</span><span class="nd">allowed</span><span class="p">([</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="si">&#39;Production&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="si">&#39;Test&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">])</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">param</span><span class="w"> </span>environmentType<span class="w"> </span><span class="nf">string</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="si">&#39;Test&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">var</span><span class="w"> </span>environmentConfigurationMap<span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">Production</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">appServicePlan</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="py">sku</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;P2V3&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="py">capacity</span><span class="p">:</span><span class="w"> </span>3<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">storageAccount</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="py">sku</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;ZRS&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">Test</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">appServicePlan</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="py">sku</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;S2&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="py">capacity</span><span class="p">:</span><span class="w"> </span>1<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">storageAccount</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="py">sku</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;LRS&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">resource</span><span class="w"> </span>appServicePlan<span class="w"> </span><span class="s">&#39;Microsoft.Web/serverfarms@2020-06-01&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span>appServicePlanName<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">location</span><span class="p">:</span><span class="w"> </span>location<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">sku</span><span class="p">:</span><span class="w"> </span>environmentConfigurationMap<span class="p">[</span>environmentType<span class="p">].</span>appServicePlan<span class="p">.</span>sku<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><p>Here we are taking a parameter for the environment, but create an object that contains the settings for that particular environment. Note that we are accessing it like we&rsquo;d access a dictionary in python: <code>sku: environmentConfigurationMap[environmentType].appServicePlan.sku</code></p>
<h2 id="naming">Naming</h2>
<blockquote>
<p>In Bicep, you ordinarily use camelCase capitalization style for the names of parameters, variables, and resource symbolic names.</p>
</blockquote>
<p>Resource names cannot be renamed after they&rsquo;re deployed in Azure.</p>
<h2 id="comments">Comments</h2>
<p>use // for single line comments, and /* */ for multi-line comments.</p>
<p>When adding comments to JSON files, you might have to save the file as jsonc to let the code editor know that comments are allowed.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Notes: Fundamentals of Bicep</title>
      <link>https://mischavandenburg.com/zet/articles/fundamentals-of-bicep/</link>
      <pubDate>Mon, 13 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/articles/fundamentals-of-bicep/</guid>
      <description>I&amp;rsquo;ll be working with Bicep during my next contract, so I&amp;rsquo;m working through the Bicep modules on Microsoft Learn to prepare. I must say that these modules are particularly helpful. They are well structured and they provide you with free sandbox environments to practice deploying the templates you create.
Why Bicep? Resources in Azure are deployed by the Azure Resource Manager (ARM). These resources are JSON objects under the covers, and ARM templates are a way to generate these JSON objects.</description>
      <content:encoded><![CDATA[<p>I&rsquo;ll be working with Bicep during my next contract, so I&rsquo;m working through the Bicep modules on Microsoft Learn to prepare. I must say that these modules are particularly helpful. They are well structured and they provide you with free sandbox environments to practice deploying the templates you create.</p>
<h1 id="why-bicep">Why Bicep?</h1>
<p>Resources in Azure are deployed by the Azure Resource Manager (ARM). These resources are JSON objects under the covers, and ARM templates are a way to generate these JSON objects. However, JSON is not really meant to be edited by humans, and the ARM templates are not very suitable for editing either. Thus, Bicep was developed to allow for a better editing experience and better readability and reusability.</p>
<p>Bicep templates are transpiled into JSON objects, which are sent to the Azure API to create resources with the Azure Resource Manager.</p>
<h1 id="fundamentals-of-bicep-notes">Fundamentals of Bicep Notes</h1>
<blockquote>
<p>A <em>parameter</em> lets you bring in values from outside the template file. For example, if someone is manually deploying the template by using the Azure CLI or Azure PowerShell, they&rsquo;ll be asked to provide values for each parameter. They can also create a <em>parameter file</em>, which lists all of the parameters and values they want to use for the deployment. If the template is deployed from an automated process like a deployment pipeline, the pipeline can provide the parameter values.</p>
</blockquote>
<blockquote>
<p>A <em>variable</em> is defined and set within the template. Variables let you store important information in one place and refer to it throughout the template without having to copy and paste it.</p>
</blockquote>
<h2 id="generating-unique-names">generating unique names</h2>
<blockquote>
<p>Bicep has another function called <code>uniqueString()</code> that comes in handy when you&rsquo;re creating resource names. When you use this function, you need to provide a <em>seed value</em>, which should be different across different deployments but consistent across all deployments of the same resources.</p>
</blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">param</span><span class="w"> </span>storageAccountName<span class="w"> </span><span class="nf">string</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="nf">uniqueString</span><span class="p">(</span><span class="nf">resourceGroup</span><span class="p">().</span>id<span class="p">)</span><span class="w">
</span></span></span></code></pre></div><ul>
<li>Every time you deploy the same resources, they&rsquo;ll go into the same resource group. The <code>uniqueString()</code> function will return the same value every time.</li>
<li>If you deploy into two different resource groups in the Azure subscription, the <code>resourceGroup().id</code> value will be different, because the resource group names will be different. The <code>uniqueString()</code> function will give different values for each set of resources.</li>
<li>If you deploy into two different Azure subscriptions, <em>even if you use the same resource group name</em>, the <code>resourceGroup().id</code> value will be different because the Azure subscription ID will be different. The <code>uniqueString()</code> function will again give different values for each set of resources.</li>
</ul>
<h3 id="combining-strings">combining strings</h3>
<p>Can use string interpolation to generate a unique string with a recognizable hardcoded part:</p>
<p><code>param storageAccountName string = 'toylaunch${uniqueString(resourceGroup().id)}'</code></p>
<p>This can also be handy for generating correct names. For example, storage accounts may not begin with a number.</p>
<h2 id="parameter-decorators">parameter decorators</h2>
<h3 id="allowed-parameters">allowed parameters</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="p">@</span><span class="nd">allowed</span><span class="p">([</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="si">&#39;nonprod&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="si">&#39;prod&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">])</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">param</span><span class="w"> </span>environmentType<span class="w"> </span><span class="nf">string</span><span class="w">
</span></span></span></code></pre></div><p>The template cannot be deployed unless the nonprod or prod values are provided.</p>
<p>@allowed is a <em>parameter decorator</em>: it gives Bicep information on what the parameter&rsquo;s value needs to be.</p>
<p>You can also specify the allowed length of the parameter by using the following decorators:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="p">@</span><span class="nd">minLength</span><span class="p">(</span>5<span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">@</span><span class="nd">maxLength</span><span class="p">(</span>24<span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">param</span><span class="w"> </span>storageAccountName<span class="w"> </span><span class="nf">string</span><span class="w">
</span></span></span></code></pre></div><p>You can apply multiple decorators to a parameter by putting each on a separate line.</p>
<p>These min and maxLength decorators can also be used to limit the length of an array.</p>
<p>To limit int values:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="p">@</span><span class="nd">minValue</span><span class="p">(</span>1<span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">@</span><span class="nd">maxValue</span><span class="p">(</span>10<span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">param</span><span class="w"> </span>appServicePlanInstanceCount<span class="w"> </span><span class="nf">int</span><span class="w">
</span></span></span></code></pre></div><p>Finally, you can add descriptions to your parameters with the @description decorator:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="p">@</span><span class="nd">description</span><span class="p">(</span><span class="s">&#39;The locations into which this Cosmos DB account should be configured. This parameter needs to be a list of objects, each of which has a locationName property.&#39;</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">param</span><span class="w"> </span>cosmosDBAccountLocations<span class="w"> </span><span class="nf">array</span><span class="w">
</span></span></span></code></pre></div><h2 id="if-statements">if statements</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">var</span><span class="w"> </span>storageAccountSkuName<span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">(</span>environmentType<span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="si">&#39;prod&#39;</span><span class="p">)</span><span class="w"> </span><span class="p">?</span><span class="w"> </span><span class="si">&#39;Standard_GRS&#39;</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="si">&#39;Standard_LRS&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">var</span><span class="w"> </span>appServicePlanSkuName<span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">(</span>environmentType<span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="si">&#39;prod&#39;</span><span class="p">)</span><span class="w"> </span><span class="p">?</span><span class="w"> </span><span class="si">&#39;P2V3&#39;</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="si">&#39;F1&#39;</span><span class="w">
</span></span></span></code></pre></div><p>Let&rsquo;s unpack this:</p>
<p>? is a <em>ternary operator</em> and evaluates an if/then statement. The value after ? is used if the expression is true. If it&rsquo;s false, the value after : is used.</p>
<p>So here, if the environmentType is prod, the SKU is set to Standard_GRS</p>
<h2 id="objects-in-bicep">Objects in Bicep</h2>
<p>You can use objects within resource definitions, within variables, or within expressions in your Bicep file.</p>
<p>Objects are the same as dictionaries in python:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">param</span><span class="w"> </span>appServicePlanSku<span class="w"> </span><span class="kt">object</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;F1&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">tier</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;Free&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">capacity</span><span class="p">:</span><span class="w"> </span>1<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><p>These are called &ldquo;properties&rdquo; of type string and int. Note that they are line separated, not comma separated like in python.</p>
<p>When referencing the parameter in the template, you can use dot notation to access the object properties:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">resource</span><span class="w"> </span>appServicePlan<span class="w"> </span><span class="s">&#39;Microsoft.Web/serverfarms@2022-03-01&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span>appServicePlanName<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">location</span><span class="p">:</span><span class="w"> </span>location<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">sku</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">name</span><span class="p">:</span><span class="w"> </span>appServicePlanSku<span class="p">.</span>name<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">tier</span><span class="p">:</span><span class="w"> </span>appServicePlanSku<span class="p">.</span>tier<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">capacity</span><span class="p">:</span><span class="w"> </span>appServicePlanSku<span class="p">.</span>capacity<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><blockquote>
<p>[!important]
Keep in mind that you don&rsquo;t specify the type of each property within an object. However, when you use a property&rsquo;s value, its type must match what&rsquo;s expected. In the previous example, both the name and the tier of the App Service plan SKU must be strings.</p>
</blockquote>
<h3 id="example-tags">Example: tags</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">param</span><span class="w"> </span>resourceTags<span class="w"> </span><span class="kt">object</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">EnvironmentName</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;Test&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">CostCenter</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;1000100&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">Team</span><span class="p">:</span><span class="w"> </span><span class="s">&#39;Human Resources&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">resource</span><span class="w"> </span>appServicePlan<span class="w"> </span><span class="s">&#39;Microsoft.Web/serverfarms@2022-03-01&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span>appServicePlanName<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">location</span><span class="p">:</span><span class="w"> </span>location<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">tags</span><span class="p">:</span><span class="w"> </span>resourceTags<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">sku</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;S1&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">resource</span><span class="w"> </span>appServiceApp<span class="w"> </span><span class="s">&#39;Microsoft.Web/sites@&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span>appServiceAppName<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">location</span><span class="p">:</span><span class="w"> </span>location<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">tags</span><span class="p">:</span><span class="w"> </span>resourceTags<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">kind</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;app&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">properties</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">serverFarmId</span><span class="p">:</span><span class="w"> </span>appServicePlan<span class="p">.</span>id<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><p>Here we take the tags for all the resources of the template as parameters. But we easily reuse all the tags for each resource by referencing the entire object.</p>
<h2 id="arrays">Arrays</h2>
<p>Arrays are not typed in Bicep. You cannot specify that it must contain strings.</p>
<p>Example:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">param</span><span class="w"> </span>cosmosDBAccountLocations<span class="w"> </span><span class="nf">array</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">[</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">locationName</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;australiaeast&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">locationName</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;southcentralus&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">locationName</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;westeurope&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">]</span><span class="w">
</span></span></span></code></pre></div><p>This is an array of objects, which have an locationName property each.</p>
<p>And you would access it by:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">resource</span><span class="w"> </span>account<span class="w"> </span><span class="s">&#39;Microsoft.DocumentDB/databaseAccounts@2022-08-15&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span>accountName<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">location</span><span class="p">:</span><span class="w"> </span>location<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">properties</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">locations</span><span class="p">:</span><span class="w"> </span>cosmosDBAccountLocations<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><h2 id="specifying-parameter-values">Specifying parameter values</h2>
<p>When deploying a template file there are three options:</p>
<ol>
<li>default values</li>
<li>command line</li>
<li>parameter file</li>
</ol>
<h3 id="parameter-file">Parameter file</h3>
<p>This is a json file. To deploy a template with a paramter file, use:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">az deployment group create <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --template-file main.bicep <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --parameters main.parameters.json
</span></span></code></pre></div><h3 id="priority">priority</h3>
<p>The order of priority is this, from high to low priority:</p>
<ol>
<li>Parameters specified on the command line</li>
<li>Parameter file</li>
<li>Default values in template</li>
</ol>
<h2 id="securing-parameters">Securing parameters</h2>
<p>It is best to use Managed Identities for Azure, but if you need to supply secret values to a deployment, use the @secure() decorator. These values aren&rsquo;t available in the deployment logs, and they won&rsquo;t be displayed on the screen when entered in the terminal.</p>
<h2 id="loops">Loops</h2>
<p>Defined with the for keyword. Usually you iterate over an array to create multiple instances of a resource.</p>
<h3 id="copy-loops">Copy loops</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">param</span><span class="w"> </span>storageAccountNames<span class="w"> </span><span class="nf">array</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">[</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="si">&#39;saauditus&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="si">&#39;saauditeurope&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="si">&#39;saauditapac&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">resource</span><span class="w"> </span>storageAccountResources<span class="w"> </span><span class="s">&#39;Microsoft.Storage/storageAccounts@2021-09-01&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">[</span><span class="k">for</span><span class="w"> </span>storageAccountName<span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="py">storageAccountNames</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span>storageAccountName<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">location</span><span class="p">:</span><span class="w"> </span><span class="nf">resourceGroup</span><span class="p">().</span>location<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">kind</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;StorageV2&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">sku</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;Standard_LRS&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}]</span><span class="w">
</span></span></span></code></pre></div><p>Notice that bicep requires &ldquo;[&rdquo; before the for, and a closing bracket.</p>
<h3 id="count-loops">count loops</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">resource</span><span class="w"> </span>storageAccountResources<span class="w"> </span><span class="s">&#39;Microsoft.Storage/storageAccounts@2021-09-01&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">[</span><span class="k">for</span><span class="w"> </span>i<span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="nf">range</span><span class="p">(</span>1<span class="err">,</span>4<span class="p">):</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;sa${i}&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">location</span><span class="p">:</span><span class="w"> </span><span class="nf">resourceGroup</span><span class="p">().</span>location<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">kind</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;StorageV2&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">sku</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;Standard_LRS&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}]</span><span class="w">
</span></span></span></code></pre></div><p>The range function takes two arguments. The first one specifies the starting value, and the second tells Bicep the number of values you want.</p>
<p>If you use range(3,4), you will get 3, 4, 5 and 6.</p>
<h4 id="accessing-the-index">accessing the index</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">param</span><span class="w"> </span>locations<span class="w"> </span><span class="nf">array</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">[</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="si">&#39;westeurope&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="si">&#39;eastus2&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="si">&#39;eastasia&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">resource</span><span class="w"> </span>sqlServers<span class="w"> </span><span class="s">&#39;Microsoft.Sql/servers@2021-11-01-preview&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">[</span><span class="k">for</span><span class="w"> </span><span class="p">(</span>location<span class="err">,</span><span class="w"> </span>i<span class="p">)</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="py">locations</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="s">&#39;sqlserver-${i+1}&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">location</span><span class="p">:</span><span class="w"> </span>location<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">properties</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">administratorLogin</span><span class="p">:</span><span class="w"> </span>administratorLogin<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">administratorLoginPassword</span><span class="p">:</span><span class="w"> </span>administratorLoginPassword<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}]</span><span class="w">
</span></span></span></code></pre></div><p>The first value is zero, so you can add 1 to i if you want your names to be sqlserver-1, sqlserver-2 etc.</p>
<p>i is used here, but you can use any value you want.</p>
<h3 id="filtering-with-loops">Filtering with loops</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">param</span><span class="w"> </span>sqlServerDetails<span class="w"> </span><span class="nf">array</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">[</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="s">&#39;sqlserver-we&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">location</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;westeurope&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">environmentName</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;Production&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="s">&#39;sqlserver-eus2&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">location</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;eastus2&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">environmentName</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;Development&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="s">&#39;sqlserver-eas&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">location</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;eastasia&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">environmentName</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;Production&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">resource</span><span class="w"> </span>sqlServers<span class="w"> </span><span class="s">&#39;Microsoft.Sql/servers@2021-11-01-preview&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">[</span><span class="k">for</span><span class="w"> </span>sqlServer<span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="py">sqlServerDetails</span><span class="p">:</span><span class="w"> </span><span class="k">if</span><span class="w"> </span><span class="p">(</span>sqlServer<span class="p">.</span>environmentName<span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="si">&#39;Production&#39;</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span>sqlServer<span class="p">.</span>name<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">location</span><span class="p">:</span><span class="w"> </span>sqlServer<span class="p">.</span>location<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">properties</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">administratorLogin</span><span class="p">:</span><span class="w"> </span>administratorLogin<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">administratorLoginPassword</span><span class="p">:</span><span class="w"> </span>administratorLoginPassword<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">tags</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">environment</span><span class="p">:</span><span class="w"> </span>sqlServer<span class="p">.</span>environmentName<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}]</span><span class="w">
</span></span></span></code></pre></div><p>This will deploy -we and -eas, but not -eus2, because the environmentName does not match Production.</p>
<h3 id="controlling-loop-execution">Controlling loop execution</h3>
<p>By default all the iterations of a loop are executed simultaneously. However, you don&rsquo;t always want this to be happening.</p>
<p>To control the amount you can use the @batchSize decorator.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="p">@</span><span class="nd">batchSize</span><span class="p">(</span>2<span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">resource</span><span class="w"> </span>appServiceApp<span class="w"> </span><span class="s">&#39;Microsoft.Web/sites@2021-03-01&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">[</span><span class="k">for</span><span class="w"> </span>i<span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="nf">range</span><span class="p">(</span>1<span class="err">,</span>3<span class="p">):</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;app${i}&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c1">// ...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}]</span><span class="w">
</span></span></span></code></pre></div><p>Here bicep will wait for the first two to be fully completed before it moves to the next.</p>
<p>To loop sequentially, meaning one at a time in order, use @batchSize(1)</p>
<h3 id="variable-loops">Variable loops</h3>
<p>You can use loops to create arrays that you can use in the Bicep template.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">var</span><span class="w"> </span><span class="nf">items</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">[</span><span class="k">for</span><span class="w"> </span>i<span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="nf">range</span><span class="p">(</span>1<span class="err">,</span><span class="w"> </span>5<span class="p">):</span><span class="w"> </span><span class="si">&#39;item${i}&#39;</span><span class="p">]</span><span class="w">
</span></span></span></code></pre></div><p>This produces an array containing the values item1, item2 up to 5 stored in the items variable.</p>
<p>Reminds me of list comprehensions in python.</p>
<p>Here is an example:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">param</span><span class="w"> </span>addressPrefix<span class="w"> </span><span class="nf">string</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="s">&#39;10.10.0.0/16&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">param</span><span class="w"> </span>subnets<span class="w"> </span><span class="nf">array</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">[</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;frontend&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">ipAddressRange</span><span class="p">:</span><span class="w"> </span><span class="s">&#39;10.10.0.0/24&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;backend&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">ipAddressRange</span><span class="p">:</span><span class="w"> </span><span class="s">&#39;10.10.1.0/24&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">var</span><span class="w"> </span>subnetsProperty<span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">[</span><span class="k">for</span><span class="w"> </span>subnet<span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="py">subnets</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span>subnet<span class="p">.</span>name<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">properties</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">addressPrefix</span><span class="p">:</span><span class="w"> </span>subnet<span class="p">.</span>ipAddressRange<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">resource</span><span class="w"> </span>virtualNetwork<span class="w"> </span><span class="s">&#39;Microsoft.Network/virtualNetworks@2021-08-01&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;teddybear&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">location</span><span class="p">:</span><span class="w"> </span><span class="nf">resourceGroup</span><span class="p">().</span>location<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">properties</span><span class="p">:{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">addressSpace</span><span class="p">:{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="py">addressPrefixes</span><span class="p">:[</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>addressPrefix<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">subnets</span><span class="p">:</span><span class="w"> </span>subnetsProperty<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><p>The content of the subnetsProperty array would look like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="p">[</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;frontend&#39;</span><span class="err">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">properties</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="py">addressPrefix</span><span class="p">:</span><span class="w"> </span><span class="s">&#39;10.10.0.0/24&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="err">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;backend&#39;</span><span class="err">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">properties</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="py">addressPrefix</span><span class="p">:</span><span class="w"> </span><span class="s">&#39;10.10.1.0/24&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">]</span><span class="w">
</span></span></span></code></pre></div><h3 id="output-loops">Output loops</h3>
<p>To output the contents of the array:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">var</span><span class="w"> </span><span class="nf">items</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">[</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="si">&#39;item1&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="si">&#39;item2&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="si">&#39;item3&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="si">&#39;item4&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="si">&#39;item5&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">output</span><span class="w"> </span>outputItems<span class="w"> </span><span class="nf">array</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">[</span><span class="k">for</span><span class="w"> </span>i<span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="nf">range</span><span class="p">(</span>0<span class="err">,</span><span class="w"> </span><span class="nf">length</span><span class="p">(</span><span class="nf">items</span><span class="p">)):</span><span class="w"> </span><span class="nf">items</span><span class="p">[</span>i<span class="p">]]</span><span class="w">
</span></span></span></code></pre></div><h2 id="modules">Modules</h2>
<p>You can create modules in Bicep so the code becomes reusable. You can share the modules with other teams and use them for different outcomes.</p>
<blockquote>
<p>Generally, it&rsquo;s not a good practice to create a module for every resource that you deploy. A good Bicep module typically defines multiple related resources. However, if you have a particularly complex resource with a lot of configuration, it might make sense to create a single module to encapsulate the complexity. This approach keeps your main templates simple and uncluttered.</p>
</blockquote>
<p>So for example it would make sense to write a networking module and a database module that handles these resources.</p>
<p>Modules can be nested, but it can quickly become very complex.</p>
<p>To call a module in a template:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="kd">module</span><span class="w"> </span>appModule<span class="w"> </span><span class="s">&#39;modules/app.bicep&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="si">&#39;myApp&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">params</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">location</span><span class="p">:</span><span class="w"> </span>location<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">appServiceAppName</span><span class="p">:</span><span class="w"> </span>appServiceAppName<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">environmentType</span><span class="p">:</span><span class="w"> </span>environmentType<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><p>The modules are stored in the modules folder in your root directory.</p>
<h3 id="parameters">Parameters</h3>
<p>Modules will take parameters, but it is good practice to leave out default values for parameters in modules. In templates it&rsquo;s good practice to add defaults wherever you can. Therefore it is best to leave them out in modules because templates usually have their own default values. This can get confusing if you have similar default values in the templates and modules.</p>
<h3 id="module-dependency">Module dependency</h3>
<p>Bicep will figure out automatically if there is a dependency between modules. For example:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bicep" data-lang="bicep"><span class="line"><span class="cl"><span class="p">@</span><span class="nd">description</span><span class="p">(</span><span class="s">&#39;Username for the virtual machine.&#39;</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">param</span><span class="w"> </span>adminUsername<span class="w"> </span><span class="nf">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">@</span><span class="nd">description</span><span class="p">(</span><span class="s">&#39;Password for the virtual machine.&#39;</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">@</span><span class="nd">minLength</span><span class="p">(</span>12<span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">@</span><span class="nd">secure</span><span class="p">()</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">param</span><span class="w"> </span>adminPassword<span class="w"> </span><span class="nf">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">module</span><span class="w"> </span>virtualNetwork<span class="w"> </span><span class="s">&#39;modules/vnet.bicep&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="s">&#39;virtual-network&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">module</span><span class="w"> </span>virtualMachine<span class="w"> </span><span class="s">&#39;modules/vm.bicep&#39;</span><span class="w"> </span><span class="p">=</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">name</span><span class="p">:</span><span class="w"> </span><span class="s">&#39;virtual-machine&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="py">params</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">adminUsername</span><span class="p">:</span><span class="w"> </span>adminUsername<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">adminPassword</span><span class="p">:</span><span class="w"> </span>adminPassword<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="py">subnetResourceId</span><span class="p">:</span><span class="w"> </span>virtualNetwork<span class="p">.</span>outputs<span class="p">.</span>subnetResourceId<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="p">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></div><p>Here the virtualMachine module takes the subnetResourceId from the virtualNetwork module outputs.</p>
<p>Because it is defined like this, Bicep will wait with deploying the virtualMachine modul until the virtualNetwork module is finished, and pass in the required parameter.</p>
<p>It is important to note that this means that it will wait until the virtualNetwork module is completely finished. If it takes a long time to deploy the previous module, all the subsequent modules will have to wait until it&rsquo;s finished.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>I passed the AZ-400 DevOps Expert today</title>
      <link>https://mischavandenburg.com/zet/passed-az-400/</link>
      <pubDate>Sat, 14 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/passed-az-400/</guid>
      <description>I&amp;rsquo;m typing this 30 minutes after I passed my AZ-400 exam. I&amp;rsquo;m sitting in a lovely cafe on Leidseplein in Amsterdam and feel relieved. Another significant certification bites the dust. This one took about 70 hours of study.
I started preparing immediately after passing my AZ-104 exam, which was a good move. The AZ-400 requires you to know many details about Azure services and how to access them. For example, Shared Access Signatures are only used for accessing storage accounts, but they came up quite often as alternative answers to the questions.</description>
      <content:encoded><![CDATA[<p>I&rsquo;m typing this 30 minutes after I passed my AZ-400 exam. I&rsquo;m sitting in a lovely cafe on Leidseplein in Amsterdam and feel relieved. Another significant certification bites the dust. This one took about 70 hours of study.</p>
<p>I started preparing immediately after passing my AZ-104 exam, which was a good move. The AZ-400 requires you to know many details about Azure services and how to access them. For example, Shared Access Signatures are only used for accessing storage accounts, but they came up quite often as alternative answers to the questions.</p>
<p>The exam itself was difficult, but the AZ-104 was harder. The AZ-104 exam was more challenging because the questions were complicated and required you to simultaneously balance many different factors in the mind. The AZ-400 was difficult because the answer alternatives that are provided are incredibly similar to each other, and they make you very insecure about what the right choice might be. As a result, I changed my answers many times.</p>
<p>I will do another study guide for this certification soon and publish my notes and Anki deck too. Now it&rsquo;s time to celebrate and relax a little.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Azure DevOps Personal Access Tokens are always for authenticating into ADO</title>
      <link>https://mischavandenburg.com/zet/azure-personal-access-tokens/</link>
      <pubDate>Fri, 13 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/azure-personal-access-tokens/</guid>
      <description>The PAT (Personal Access Token) often comes up during practice tests for the AZ-400.
One way to remember when to use a PAT is that these are only for authenticating into Azure DevOps, never to external services.
For example, you might get a question on connecting your Azure DevOps project with a GitHub account from Azure DevOps, and PAT will show up as one of the alternative answers. By remembering that PATs are only for authenticating into ADO, you can elminate this alternative, and make your choice easier.</description>
      <content:encoded><![CDATA[<p>The PAT (Personal Access Token) often comes up during practice tests for the AZ-400.</p>
<p>One way to remember when to use a PAT is that these are only for authenticating <strong>into</strong> Azure DevOps, never to external services.</p>
<p>For example, you might get a question on connecting your Azure DevOps project with a GitHub account from Azure DevOps, and PAT will show up as one of the alternative answers. By remembering that PATs are only for authenticating into ADO, you can elminate this alternative, and make your choice easier.</p>
<p>Personal Access Tokens are an alternative to passwords but should be treated in exactly the same way.</p>
<p><a href="https://learn.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops&amp;tabs=Windows">https://learn.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view=azure-devops&amp;tabs=Windows</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>How to build and deploy a Docker container to an Azure VM using Azure Pipelines</title>
      <link>https://mischavandenburg.com/zet/docker-to-azure-vm/</link>
      <pubDate>Sun, 08 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/docker-to-azure-vm/</guid>
      <description>I wanted to build an application from a Dockerfile and deploy it to a VM. I used a default Svelte setup as an example app.
Naturally, Azure prefers that you deploy containers to services such as Azure Container Instances or App Services, so they don&amp;rsquo;t provide modules for the pipelines to deploy to docker servers as far as I could tell.
I searched for a long time but I could not find a solution.</description>
      <content:encoded><![CDATA[<p>I wanted to build an application from a Dockerfile and deploy it to a VM. I used a default Svelte setup as an example app.</p>
<p>Naturally, Azure prefers that you deploy containers to services such as Azure Container Instances or App Services, so they don&rsquo;t provide modules for the pipelines to deploy to docker servers as far as I could tell.</p>
<p>I searched for a long time but I could not find a solution. In the end I just ran shell commands from the pipeline to run the container on on the server.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">steps</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">script</span><span class="p">:</span><span class="w"> </span><span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">      sudo docker stop svelte-test
</span></span></span><span class="line"><span class="cl"><span class="sd">      sudo docker rm svelte-test
</span></span></span><span class="line"><span class="cl"><span class="sd">      sudo docker run --name svelte-test -p 8080:80 -d mischavandenburg/svelte-test:$(Build.BuildId)</span><span class="w">      
</span></span></span></code></pre></div><p>You can find the full pipeline code, the app and Dockerfile in my lab repo:</p>
<p><a href="https://github.com/mischavandenburg/lab/tree/main/azure-pipelines/docker-to-azure-vm">https://github.com/mischavandenburg/lab/tree/main/azure-pipelines/docker-to-azure-vm</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>How to deploy to a Linux VM in Azure with Azure Pipelines</title>
      <link>https://mischavandenburg.com/zet/azure-pipelines-deploy-vm/</link>
      <pubDate>Sun, 08 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/azure-pipelines-deploy-vm/</guid>
      <description>To reach a VM from Azure Pipelines, you need to set up an environment.
Create your Linux VM in Azure.
In Azure DevOps, click envirnoments, new, and select the Virtual Machine option.
A command is generated for you. SSH into your VM and run the command.
Now the VM should show up under environments in Azure DevOps.
Set up a repo with an azure-pipelines.yml with these contents to test. under environment, set the same name as you did in Azure DevOps for your environment.</description>
      <content:encoded><![CDATA[<p>To reach a VM from Azure Pipelines, you need to set up an environment.</p>
<p>Create your Linux VM in Azure.</p>
<p>In Azure DevOps, click envirnoments, new, and select the Virtual Machine option.</p>
<p><img loading="lazy" src="/env1.png" type="" alt=""  /></p>
<p>A command is generated for you. SSH into your VM and run the command.</p>
<p><img loading="lazy" src="/env2.png" type="" alt=""  /></p>
<p>Now the VM should show up under environments in Azure DevOps.</p>
<p>Set up a repo with an azure-pipelines.yml with these contents to test. under <code>environment</code>, set the same name as you did in Azure DevOps for your environment.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">trigger</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="l">main</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">pool</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="nt">vmImage</span><span class="p">:</span><span class="w"> </span><span class="l">ubuntu-latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">jobs</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">deployment</span><span class="p">:</span><span class="w"> </span><span class="l">VMDeploy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">displayName</span><span class="p">:</span><span class="w"> </span><span class="l">Deploy to VM</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">dev</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="nt">resourceType</span><span class="p">:</span><span class="w"> </span><span class="l">VirtualMachine</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">strategy</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">     </span><span class="nt">runOnce</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">deploy</span><span class="p">:</span><span class="w">   
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">steps</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="nt">script</span><span class="p">:</span><span class="w"> </span><span class="l">echo &#34;Hello world&#34;</span><span class="w">
</span></span></span></code></pre></div><p>You can see it when the deploy runs on the VM:</p>
<p><img loading="lazy" src="/env3.png" type="" alt=""  /></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Application Insights: Telemetry Sampling</title>
      <link>https://mischavandenburg.com/zet/application-insights-sampling/</link>
      <pubDate>Tue, 03 Jan 2023 08:41:09 +0100</pubDate>
      
      <guid>https://mischavandenburg.com/zet/application-insights-sampling/</guid>
      <description>Telemetry is the collection of measurements or other data at remote points, and transmitting that data to a receiver for monitoring.
Sampling is used to reduce telemetry traffic and costs for storage and data in Application Insights.
For small and medium sized applications sampling is generally not necessary.
Advantages of sampling:
Throttling data when the application suddenly sends a high volume of telemetry in a short time This saves costs! Keeping a pricing tier quota Reduce network traffic from telemetry collection Three different kinds of sampling:</description>
      <content:encoded><![CDATA[<p>Telemetry is the collection of measurements or other data at remote points, and transmitting that data to a receiver for monitoring.</p>
<p>Sampling is used to reduce telemetry traffic and costs for storage and data in Application Insights.</p>
<p>For small and medium sized applications sampling is generally not necessary.</p>
<p>Advantages of sampling:</p>
<ul>
<li>Throttling data when the application suddenly sends a high volume of telemetry in a short time
<ul>
<li>This saves costs!</li>
</ul>
</li>
<li>Keeping a pricing tier quota</li>
<li>Reduce network traffic from telemetry collection</li>
</ul>
<p>Three different kinds of sampling:</p>
<ul>
<li>adaptive sampling
<ul>
<li>automatically adjusts volume of telemetry</li>
<li>from ASP.NET or Azure Functions</li>
<li>only for these two</li>
</ul>
</li>
<li>fixed-rate sampling
<ul>
<li>rate is set by the administrator</li>
<li>use when you have a clear idea of the appropriate sampling percentage</li>
<li>reduces volume from
<ul>
<li>ASP.NET or ASP.NET Core server</li>
<li>Java server</li>
<li>Python applications</li>
<li>User browsers</li>
</ul>
</li>
</ul>
</li>
<li>ingestion sampling
<ul>
<li>used when monthly quota is often met</li>
<li>reduces amount of processed and retained traffic by Application Insights
<ul>
<li>less processing = less cost</li>
<li>doesn&rsquo;t reduce telemetry traffic sent from the app</li>
<li>happens at Applications Insight service endpoint</li>
</ul>
</li>
<li>disabled if SDK samples telemetry</li>
<li>can set sampling rate without redeploying the app</li>
<li>only applies when no other sampling is in effect
<ul>
<li>supports all Application Insights SDK&rsquo;s</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>Pipelines: Continuous Monitoring</title>
      <link>https://mischavandenburg.com/zet/pipelines-continuous-monitoring/</link>
      <pubDate>Tue, 03 Jan 2023 08:30:03 +0100</pubDate>
      
      <guid>https://mischavandenburg.com/zet/pipelines-continuous-monitoring/</guid>
      <description>This term can be confusing. Initially I thought it meant monitoring of the pipelines themselves. However, in the context of Azure Release Pipelines, continuous monitoring refers to something else.
Continuous monitoring leverages metrics from other services such as Application Insights. You can set up release gates based on these metrics. For example, you can set up a release gate to roll back the deployment if an alert is being fired for high CPU usage in the application.</description>
      <content:encoded><![CDATA[<p>This term can be confusing. Initially I thought it meant monitoring of the pipelines themselves. However, in the context of Azure Release Pipelines, continuous monitoring refers to something else.</p>
<p>Continuous monitoring leverages metrics from other services such as Application Insights. You can set up release gates based on these metrics. For example, you can set up a release gate to roll back the deployment if an alert is being fired for high CPU usage in the application.</p>
<p>You can set up several of these checks. If all these checks pass, the pipeline can proceed.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Distributed Tracing</title>
      <link>https://mischavandenburg.com/zet/distributed-tracing/</link>
      <pubDate>Tue, 03 Jan 2023 07:58:44 +0100</pubDate>
      
      <guid>https://mischavandenburg.com/zet/distributed-tracing/</guid>
      <description>Debugging is done using call stacks in monolithic applications. Nowadays it is more common to deploy an application using a microservices architecture. Microservices make it easier to update certain parts of the application, and allow for more frequent deployments.
Using microservices does have a disadvantage: you cannot use the local call stack for debugging, because calls are sent to different microservices.
Distributed tracing is an implementation of the call stack in the cloud.</description>
      <content:encoded><![CDATA[<p>Debugging is done using <a href="/zet/call-stacks/">call stacks</a> in monolithic applications. Nowadays it is more common to deploy an application using a microservices architecture. Microservices make it easier to update certain parts of the application, and allow for more frequent deployments.</p>
<p>Using microservices does have a disadvantage: you cannot use the local call stack for debugging, because calls are sent to different microservices.</p>
<p>Distributed tracing is an implementation of the call stack in the cloud. It is usually implemented by adding an agent, <a href="/zet/sdk/">SDK</a>, or library to the service. In Azure you can enable distributed tracing via Application Insights through auto-instrumentation or SDKs.</p>
<p><a href="https://learn.microsoft.com/en-us/azure/azure-monitor/app/transaction-diagnostics">Unified cross-component transaction diagnostics</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Study Guide: AZ-104 Azure Administrator Associate</title>
      <link>https://mischavandenburg.com/zet/articles/az-104-study-guide/</link>
      <pubDate>Fri, 30 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/articles/az-104-study-guide/</guid>
      <description>TLDR It took me 80 hours of studying to gain this certification. Here are my notes and Anki deck: GitHub repo
Introduction When I did my English degree at University, exams were usually handwritten essays that needed to be done within a 3-hour timeframe. Sometimes we had multiple-choice tests, and I would always consider them a guaranteed pass because multiple-choice was much easier in my experience.
That opinion has changed since I&amp;rsquo;ve obtained a few IT certifications.</description>
      <content:encoded><![CDATA[<h1 id="tldr">TLDR</h1>
<p>It took me 80 hours of studying to gain this certification. Here are my notes and Anki deck:
<a href="https://github.com/mischavandenburg/az-104-azure-administrator">GitHub repo</a></p>
<h1 id="introduction">Introduction</h1>
<p>When I did my English degree at University, exams were usually handwritten essays that needed to be done within a 3-hour timeframe. Sometimes we had multiple-choice tests, and I would always consider them a guaranteed pass because multiple-choice was much easier in my experience.</p>
<p>That opinion has changed since I&rsquo;ve obtained a few IT certifications. These tests are hard! I&rsquo;m typing this while sitting on the bus on my way home from my AZ-104 exam. I passed with an 860 score of 1000, where 700 or higher is a pass. But it was an astonishingly tough exam. Usually, I finish quickly and spend at least half an hour reviewing my answers. I had only 5 minutes to review my questions this time because I had used up all of the available time. The questions required intense concentration and were time-consuming because I needed to compare many options which were very similar to each other. There were no easy questions.</p>
<h1 id="preparation">Preparation</h1>
<p>I studied 80 hours for this exam in a month. I work full-time as a DevOps Engineer, so I study in the evenings and on weekends. I have my Azure Fundamentals and CKA, but I only work with Azure occasionally in my current role.</p>
<p>Here is what I did to prepare for my exam:</p>
<ul>
<li>Go through all of the <a href="https://learn.microsoft.com/en-us/certifications/exams/az-104">Microsoft Learn modules for the AZ-104</a></li>
<li>Watch the entire <a href="https://www.youtube.com/playlist?list=PLlVtbbG169nGlGPWs9xaLKT1KfwqREHbs">AZ-104 study list by John Savill</a></li>
<li>Practice exams on <a href="https://tutorialsdojo.com/">TutorialsDojo</a> until I could pass them with 90%+ scores</li>
<li>Microsoft ESI practice exams</li>
<li><a href="https://learn.microsoft.com/en-us/shows/exam-readiness-zone/preparing-for-az-104-manage-azure-identities-and-governance-1-of-5">Microsoft AZ-104 Exam prep videos</a></li>
</ul>
<h2 id="microsoft-learn">Microsoft Learn</h2>
<p>You really need to master all of the subject matter. Only completing the Microsoft Learn modules is not enough preparation. They are more like summaries. At the end of each module, they provide links to the documentation for the subject for further study. Unfortunately, Microsoft does not go easy on you. It expects you to know obscure details of nearly every service this exam covers. Therefore, I advise going beyond the Microsoft Learn modules and studying the linked articles after each module.</p>
<h2 id="youtube-az-104-study-playlist-by-john-savill">YouTube AZ-104 Study Playlist by John Savill</h2>
<p>I&rsquo;m not sure if it&rsquo;s better to watch this playlist first and then do the Microsoft modules or the other way around. I did the Microsoft modules first, but for my next exam (AZ-400 DevOps Expert), I&rsquo;ll start with the videos and then do the Microsoft Learn modules.</p>
<h2 id="tutorialsdojo">Tutorialsdojo</h2>
<p>These practice exams are excellent. I used them in preparation for my fundamentals exam.</p>
<p>The best thing about them is that they provide extensive documentation and explanation of the questions. So after you finish the exam, you can study a lot with these examples.</p>
<h2 id="esi-practice-exams">ESI Practice Exams</h2>
<p>You&rsquo;re lucky if your organization participates in Microsoft&rsquo;s <a href="esi.microsoft.com/">Enterprise Skills Initiative</a>. The practice exams provided in the ESI environment give you a good indication of what you can expect at the exam. I first did the Tutorialsdojo exams and then moved on to the ESI exams, and I was humiliated. The ESI questions are very complex and hard to solve, and I learned a lot from these exams.</p>
<p>There are 210 questions total, and I worked through all of them, and whenever I failed a question, I did a deeper dive into the question&rsquo;s theme.</p>
<h1 id="studying">studying</h1>
<p>I take notes in Obsidian, and I use Anki for spaced repetition. I highly recommend keeping a deck of Anki cards and continuously testing yourself. You will need to memorize a lot of details. For example, you are expected to remember that storage accounts of the FileStorage type do not support Geo Redundant Storage. You can find my Anki deck in the <a href="https://github.com/mischavandenburg/az-104-azure-administrator">GitHub repo.</a></p>
<h1 id="links">links</h1>
<p><a href="https://learn.microsoft.com/en-us/certifications/exams/az-104">AZ-104 Exam page with learning modules</a></p>
<p><a href="https://www.youtube.com/playlist?list=PLlVtbbG169nGlGPWs9xaLKT1KfwqREHbs">John Savill&rsquo;s AZ-104 Study playlist</a></p>
<p><a href="https://github.com/mischavandenburg/az-104-azure-administrator">GitHub repo containing my notes and Anki deck</a></p>
<p><a href="https://learn.microsoft.com/en-us/shows/exam-readiness-zone/preparing-for-az-104-manage-azure-identities-and-governance-1-of-5">Microsoft AZ-104 Exam prep videos</a></p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
