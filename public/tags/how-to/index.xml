<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>How-To on Mischa van den Burg</title>
    <link>https://mischavandenburg.com/tags/how-to/</link>
    <description>Recent content in How-To on Mischa van den Burg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 26 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://mischavandenburg.com/tags/how-to/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Run Newsboat in Zenmode</title>
      <link>https://mischavandenburg.com/zet/newsboat-in-zenmode/</link>
      <pubDate>Sun, 26 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/newsboat-in-zenmode/</guid>
      <description>To read the news free from distractions and ads I use Newsboat as a reader for RSS feeds.
However, one thing that annoyed me was that it would span across my entire screen in the terminal. When you read blogs or news pages in the browser, you&amp;rsquo;ll notice that the text is always located in a middle column of the window, so you don&amp;rsquo;t have to move your neck while reading.</description>
      <content:encoded><![CDATA[<p>To read the news free from distractions and ads I use Newsboat as a reader for RSS feeds.</p>
<p>However, one thing that annoyed me was that it would span across my entire screen in the terminal. When you read blogs or news pages in the browser, you&rsquo;ll notice that the text is always located in a middle column of the window, so you don&rsquo;t have to move your neck while reading. At least, this is the case with well designed websites that serve text content.</p>
<p>Vim has a plugin that achieves this and I use it extensively. It is called Zenmode. In Neovim I use a similar plugin called No Neckpain.</p>
<p>To achieve a similar configuration for Newsboat I used tmux. I wrote the following bash script:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">#!/bin/bash</span>
</span></span><span class="line"><span class="cl"><span class="c1"># nb opens a new pane and runs newsboat in it. I want to read from a centered column in my screen.</span>
</span></span><span class="line"><span class="cl">tmux split-pane -h <span class="se">\;</span> resize-pane -x 130<span class="se">\;</span> send -t <span class="m">2</span> <span class="s2">&#34;newsboat&#34;</span> Enter<span class="se">\;</span> send -t <span class="m">1</span> <span class="s2">&#34;clear&#34;</span> Enter
</span></span></code></pre></div><p>Note that this needs to be run from within an existing tmux window with no split panes.</p>
<p>It splits the current window in to two panes, resizes the new pane to a width of 130 pixels and sends the &ldquo;newsboat&rdquo; command to the new pane, and the &ldquo;clear&rdquo; command to the old (left) pane to keep it nice and clean.</p>
<p>In my <code>~/.newsboat/config</code> file I added the following setting:</p>
<p><code>text-width 72</code></p>
<p>This will limit the text on the right hand side of the screen.</p>
<p>The end result looks like this:</p>
<p><img loading="lazy" src="/newsboat-zen.png" type="" alt="Newsboat Zenmode"  /></p>
<h2 id="links">Links:</h2>
<p>202303260903</p>
<p><a href="https://github.com/folke/zen-mode.nvim">https://github.com/folke/zen-mode.nvim</a></p>
<p><a href="https://github.com/shortcuts/no-neck-pain.nvim">https://github.com/shortcuts/no-neck-pain.nvim</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Setting up a new LUKS encrypted disk with dm-crypt in Arch Linux</title>
      <link>https://mischavandenburg.com/zet/articles/new-luks-encrypted-disk/</link>
      <pubDate>Sat, 21 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/articles/new-luks-encrypted-disk/</guid>
      <description>Today I added a harddisk I had lying around because I needed some more space. On my Arch Linux system I have all my drives encrypted like a good boy. It can be a bit tricky when you are adding them because you need to configure a few different files and add different UUID&amp;rsquo;s in each of them.
Here are the steps I follow to add a new disk. Note that this how to assumes that you already have set up your system with dm-crypt.</description>
      <content:encoded><![CDATA[<p>Today I added a harddisk I had lying around because I needed some more space. On my Arch Linux system I have all my drives encrypted like a good boy. It can be a bit tricky when you are adding them because you need to configure a few different files and add different UUID&rsquo;s in each of them.</p>
<p>Here are the steps I follow to add a new disk. Note that this how to assumes that you already have set up your system with dm-crypt.</p>
<p>List out the disks with lsblk:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">(</span>ins<span class="o">)[</span>mischa@arch-beast ~<span class="o">]</span>$ lsblk
</span></span><span class="line"><span class="cl">NAME          MAJ:MIN RM   SIZE RO TYPE  MOUNTPOINTS
</span></span><span class="line"><span class="cl">sda             8:0    <span class="m">0</span> 223.6G  <span class="m">0</span> disk
</span></span><span class="line"><span class="cl">└─sda1          8:1    <span class="m">0</span> 223.6G  <span class="m">0</span> part
</span></span><span class="line"><span class="cl">  └─games     254:0    <span class="m">0</span> 223.6G  <span class="m">0</span> crypt /games
</span></span><span class="line"><span class="cl">sdb             8:16   <span class="m">0</span> 931.5G  <span class="m">0</span> disk
</span></span><span class="line"><span class="cl">└─sdb1          8:17   <span class="m">0</span> 931.5G  <span class="m">0</span> part
</span></span><span class="line"><span class="cl">  └─data-hdd  254:2    <span class="m">0</span> 931.5G  <span class="m">0</span> crypt /data-hdd
</span></span><span class="line"><span class="cl">sdc             8:32   <span class="m">0</span> 931.5G  <span class="m">0</span> disk
</span></span><span class="line"><span class="cl">└─sdc1          8:33   <span class="m">0</span> 931.5G  <span class="m">0</span> part
</span></span><span class="line"><span class="cl">  └─data-hdd2 254:3    <span class="m">0</span> 931.5G  <span class="m">0</span> crypt /data-hdd2
</span></span><span class="line"><span class="cl">sdd             8:48   <span class="m">0</span> 465.8G  <span class="m">0</span> disk
</span></span><span class="line"><span class="cl">├─sdd1          8:49   <span class="m">0</span>   300M  <span class="m">0</span> part  /boot
</span></span><span class="line"><span class="cl">└─sdd2          8:50   <span class="m">0</span> 465.5G  <span class="m">0</span> part
</span></span><span class="line"><span class="cl">  └─root      254:1    <span class="m">0</span> 465.5G  <span class="m">0</span> crypt /
</span></span><span class="line"><span class="cl">sde             8:64   <span class="m">0</span> 931.5G  <span class="m">0</span> disk
</span></span><span class="line"><span class="cl">└─sde1          8:65   <span class="m">0</span> 931.5G  <span class="m">0</span> part
</span></span></code></pre></div><p>I will be adding /dev/sde to my system. As you see, I already created a partition on it, named <code>sde1</code>. The mountpoint for the disk will be <code>/data-hdd3</code>.</p>
<p>If you still need to add your partition, use <code>sudo gdisk /dev/sde</code> to write a new table and partition.</p>
<h2 id="encryption">encryption</h2>
<p>First I create the mount point I&rsquo;ll use and set the appropriate permisssions:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo mkdir /data-hdd3
</span></span><span class="line"><span class="cl">sudo chown mischa:mischa /data-hdd3
</span></span></code></pre></div><p>Now we create a LUKS header and an encrypted filesystem on the disk.
Note that I&rsquo;m using the notation convention from the Arch Wiki where the &ldquo;#&rdquo; indicates that the command should be run as root.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># cryptsetup -y -v luksFormat /dev/sde1</span>
</span></span><span class="line"><span class="cl"><span class="c1"># cryptsetup open /dev/sde1 data-hdd3 </span>
</span></span><span class="line"><span class="cl"><span class="c1"># mkfs.ext4 /dev/mapper/data-hdd3</span>
</span></span><span class="line"><span class="cl"><span class="c1"># mount /dev/mapper/data-hdd3 /data-hdd3</span>
</span></span></code></pre></div><p>Verify that it worked and the new encrypted partition is mounted:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">arch-beast# lsblk
</span></span><span class="line"><span class="cl">NAME          MAJ:MIN RM   SIZE RO TYPE  MOUNTPOINTS
</span></span><span class="line"><span class="cl">sda             8:0    <span class="m">0</span> 223.6G  <span class="m">0</span> disk
</span></span><span class="line"><span class="cl">└─sda1          8:1    <span class="m">0</span> 223.6G  <span class="m">0</span> part
</span></span><span class="line"><span class="cl">  └─games     254:0    <span class="m">0</span> 223.6G  <span class="m">0</span> crypt /games
</span></span><span class="line"><span class="cl">sdb             8:16   <span class="m">0</span> 931.5G  <span class="m">0</span> disk
</span></span><span class="line"><span class="cl">└─sdb1          8:17   <span class="m">0</span> 931.5G  <span class="m">0</span> part
</span></span><span class="line"><span class="cl">  └─data-hdd  254:2    <span class="m">0</span> 931.5G  <span class="m">0</span> crypt /data-hdd
</span></span><span class="line"><span class="cl">sdc             8:32   <span class="m">0</span> 931.5G  <span class="m">0</span> disk
</span></span><span class="line"><span class="cl">└─sdc1          8:33   <span class="m">0</span> 931.5G  <span class="m">0</span> part
</span></span><span class="line"><span class="cl">  └─data-hdd2 254:3    <span class="m">0</span> 931.5G  <span class="m">0</span> crypt /data-hdd2
</span></span><span class="line"><span class="cl">sdd             8:48   <span class="m">0</span> 465.8G  <span class="m">0</span> disk
</span></span><span class="line"><span class="cl">├─sdd1          8:49   <span class="m">0</span>   300M  <span class="m">0</span> part  /boot
</span></span><span class="line"><span class="cl">└─sdd2          8:50   <span class="m">0</span> 465.5G  <span class="m">0</span> part
</span></span><span class="line"><span class="cl">  └─root      254:1    <span class="m">0</span> 465.5G  <span class="m">0</span> crypt /
</span></span><span class="line"><span class="cl">sde             8:64   <span class="m">0</span> 931.5G  <span class="m">0</span> disk
</span></span><span class="line"><span class="cl">└─sde1          8:65   <span class="m">0</span> 931.5G  <span class="m">0</span> part
</span></span><span class="line"><span class="cl">  └─data-hdd3 254:4    <span class="m">0</span> 931.5G  <span class="m">0</span> crypt /data-hdd3
</span></span></code></pre></div><h2 id="auto-mounting-at-boot">Auto mounting at boot</h2>
<p>We&rsquo;ll need to add this disk to the kerenel parameters, /etc/crypttab and /etc/fstab. I haven&rsquo;t gotten round to switching to systemd boot yet, but I will do so very soon.</p>
<p>Open tmux and split the pane. In the bottom pane, run <code>lsblk -f</code> to have all the UUIDs listed. Then open the grub configuration file with <code>sudoedit /etc/default/grub</code></p>
<p><img loading="lazy" src="/luks1.png" type="" alt=""  /></p>
<p>You can discern which uuid to add from the listed examples. For my new disk, I needed to add the following:</p>
<p><code>rd.luks.name=3169af6c-a129-448e-b451-d7767866f607 data-hdd3=/dev/mapper/data-hdd3</code></p>
<p>Then run <code>sudo grub-mkconfig -o /boot/grub/grub.cfg</code> to update grub with the new settings. Adjust the path if you use a different path for your boot partition!</p>
<p>Next, we add it to /etc/crypttab</p>
<p><img loading="lazy" src="/luks2.png" type="" alt=""  /></p>
<p>To mount the new encrypted partition at boot, we add it to /etc/fstab.</p>
<p><strong>Note that this time we need to use the UUID of the partition located at /dev/mapper/data-hdd3</strong></p>
<p><img loading="lazy" src="/luks3.png" type="" alt=""  /></p>
<p>Use <code>sudo findmnt --verify</code> to check if there is antyhing wrong with the file.</p>
<p>Now you should be able to reboot and your new encrypted disk should be mounted automatically.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">(</span>ins<span class="o">)[</span>mischa@arch-beast ~<span class="o">]</span>$ lsblk
</span></span><span class="line"><span class="cl">NAME          MAJ:MIN RM   SIZE RO TYPE  MOUNTPOINTS
</span></span><span class="line"><span class="cl">sda             8:0    <span class="m">0</span> 223.6G  <span class="m">0</span> disk
</span></span><span class="line"><span class="cl">└─sda1          8:1    <span class="m">0</span> 223.6G  <span class="m">0</span> part
</span></span><span class="line"><span class="cl">  └─games     254:1    <span class="m">0</span> 223.6G  <span class="m">0</span> crypt /games
</span></span><span class="line"><span class="cl">sdb             8:16   <span class="m">0</span> 931.5G  <span class="m">0</span> disk
</span></span><span class="line"><span class="cl">└─sdb1          8:17   <span class="m">0</span> 931.5G  <span class="m">0</span> part
</span></span><span class="line"><span class="cl">  └─data-hdd  254:0    <span class="m">0</span> 931.5G  <span class="m">0</span> crypt /data-hdd
</span></span><span class="line"><span class="cl">sdc             8:32   <span class="m">0</span> 931.5G  <span class="m">0</span> disk
</span></span><span class="line"><span class="cl">└─sdc1          8:33   <span class="m">0</span> 931.5G  <span class="m">0</span> part
</span></span><span class="line"><span class="cl">  └─data-hdd2 254:4    <span class="m">0</span> 931.5G  <span class="m">0</span> crypt /data-hdd2
</span></span><span class="line"><span class="cl">sdd             8:48   <span class="m">0</span> 465.8G  <span class="m">0</span> disk
</span></span><span class="line"><span class="cl">├─sdd1          8:49   <span class="m">0</span>   300M  <span class="m">0</span> part  /boot
</span></span><span class="line"><span class="cl">└─sdd2          8:50   <span class="m">0</span> 465.5G  <span class="m">0</span> part
</span></span><span class="line"><span class="cl">  └─root      254:2    <span class="m">0</span> 465.5G  <span class="m">0</span> crypt /
</span></span><span class="line"><span class="cl">sde             8:64   <span class="m">0</span> 931.5G  <span class="m">0</span> disk
</span></span><span class="line"><span class="cl">└─sde1          8:65   <span class="m">0</span> 931.5G  <span class="m">0</span> part
</span></span><span class="line"><span class="cl">  └─data-hdd3 254:3    <span class="m">0</span> 931.5G  <span class="m">0</span> crypt /data-hdd3
</span></span></code></pre></div><h1 id="links">links</h1>
<p><a href="https://wiki.archlinux.org/title/Dm-crypt/Encrypting_an_entire_system#LUKS_on_a_partition">https://wiki.archlinux.org/title/Dm-crypt/Encrypting_an_entire_system#LUKS_on_a_partition</a></p>
<p><a href="https://wiki.archlinux.org/title/GRUB">https://wiki.archlinux.org/title/GRUB</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>How to build and deploy a Docker container to an Azure VM using Azure Pipelines</title>
      <link>https://mischavandenburg.com/zet/docker-to-azure-vm/</link>
      <pubDate>Sun, 08 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/docker-to-azure-vm/</guid>
      <description>I wanted to build an application from a Dockerfile and deploy it to a VM. I used a default Svelte setup as an example app.
Naturally, Azure prefers that you deploy containers to services such as Azure Container Instances or App Services, so they don&amp;rsquo;t provide modules for the pipelines to deploy to docker servers as far as I could tell.
I searched for a long time but I could not find a solution.</description>
      <content:encoded><![CDATA[<p>I wanted to build an application from a Dockerfile and deploy it to a VM. I used a default Svelte setup as an example app.</p>
<p>Naturally, Azure prefers that you deploy containers to services such as Azure Container Instances or App Services, so they don&rsquo;t provide modules for the pipelines to deploy to docker servers as far as I could tell.</p>
<p>I searched for a long time but I could not find a solution. In the end I just ran shell commands from the pipeline to run the container on on the server.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">steps</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">script</span><span class="p">:</span><span class="w"> </span><span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">      sudo docker stop svelte-test
</span></span></span><span class="line"><span class="cl"><span class="sd">      sudo docker rm svelte-test
</span></span></span><span class="line"><span class="cl"><span class="sd">      sudo docker run --name svelte-test -p 8080:80 -d mischavandenburg/svelte-test:$(Build.BuildId)</span><span class="w">      
</span></span></span></code></pre></div><p>You can find the full pipeline code, the app and Dockerfile in my lab repo:</p>
<p><a href="https://github.com/mischavandenburg/lab/tree/main/azure-pipelines/docker-to-azure-vm">https://github.com/mischavandenburg/lab/tree/main/azure-pipelines/docker-to-azure-vm</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>How to deploy to a Linux VM in Azure with Azure Pipelines</title>
      <link>https://mischavandenburg.com/zet/azure-pipelines-deploy-vm/</link>
      <pubDate>Sun, 08 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/azure-pipelines-deploy-vm/</guid>
      <description>To reach a VM from Azure Pipelines, you need to set up an environment.
Create your Linux VM in Azure.
In Azure DevOps, click envirnoments, new, and select the Virtual Machine option.
A command is generated for you. SSH into your VM and run the command.
Now the VM should show up under environments in Azure DevOps.
Set up a repo with an azure-pipelines.yml with these contents to test. under environment, set the same name as you did in Azure DevOps for your environment.</description>
      <content:encoded><![CDATA[<p>To reach a VM from Azure Pipelines, you need to set up an environment.</p>
<p>Create your Linux VM in Azure.</p>
<p>In Azure DevOps, click envirnoments, new, and select the Virtual Machine option.</p>
<p><img loading="lazy" src="/env1.png" type="" alt=""  /></p>
<p>A command is generated for you. SSH into your VM and run the command.</p>
<p><img loading="lazy" src="/env2.png" type="" alt=""  /></p>
<p>Now the VM should show up under environments in Azure DevOps.</p>
<p>Set up a repo with an azure-pipelines.yml with these contents to test. under <code>environment</code>, set the same name as you did in Azure DevOps for your environment.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">trigger</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="l">main</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">pool</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="nt">vmImage</span><span class="p">:</span><span class="w"> </span><span class="l">ubuntu-latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">jobs</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">deployment</span><span class="p">:</span><span class="w"> </span><span class="l">VMDeploy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">displayName</span><span class="p">:</span><span class="w"> </span><span class="l">Deploy to VM</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">environment</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">dev</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">   </span><span class="nt">resourceType</span><span class="p">:</span><span class="w"> </span><span class="l">VirtualMachine</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">strategy</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">     </span><span class="nt">runOnce</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">deploy</span><span class="p">:</span><span class="w">   
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">steps</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="nt">script</span><span class="p">:</span><span class="w"> </span><span class="l">echo &#34;Hello world&#34;</span><span class="w">
</span></span></span></code></pre></div><p>You can see it when the deploy runs on the VM:</p>
<p><img loading="lazy" src="/env3.png" type="" alt=""  /></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Deploying a Linux VM to Azure with Terraform</title>
      <link>https://mischavandenburg.com/zet/terraform-linux-vm/</link>
      <pubDate>Sat, 07 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/terraform-linux-vm/</guid>
      <description>For a project I&amp;rsquo;m setting up my environment with Terraform.
I used this tutorial, but modified the code to make it simpler and easier to understand for beginners. The original uses a random module to generate random names, and generates a new SSH key. Also, this tutorial uses expensive VM tiers and Premium storage, which are not necessary when you are learning.
I also thought the SSH configuration was overcomplicated. My version just takes an SSH keypair stored at ~/.</description>
      <content:encoded><![CDATA[<p>For a project I&rsquo;m setting up my environment with Terraform.</p>
<p>I used <a href="https://learn.microsoft.com/en-us/azure/virtual-machines/linux/quick-create-terraform">this tutorial</a>, but modified the code to make it simpler and easier to understand for beginners. The original uses a random module to generate random names, and generates a new SSH key. Also, this tutorial uses expensive VM tiers and Premium storage, which are not necessary when you are learning.</p>
<p>I also thought the SSH configuration was overcomplicated. My version just takes an SSH keypair stored at <code>~/.ssh/id_rsa.pub</code></p>
<p>To run:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-hcl" data-lang="hcl"><span class="line"><span class="cl"><span class="k">terraform</span> <span class="k">init</span>
</span></span><span class="line"><span class="cl"><span class="k">terraform</span> <span class="k">plan</span>
</span></span><span class="line"><span class="cl"><span class="k">terraform</span> <span class="k">apply</span>
</span></span></code></pre></div><p>The scripts prints the public IP of the newly created VM. You should be able to SSH to it:</p>
<p><code>ssh azureuser@the_printed_ip_address</code></p>
<p>You can find the code in <a href="https://github.com/mischavandenburg/lab/tree/main/terraform/azure-simple-linux-vm">my &ldquo;lab&rdquo; repo on GitHub.</a></p>
<p><a href="https://github.com/mischavandenburg/lab/tree/main/terraform/azure-simple-linux-vm">https://github.com/mischavandenburg/lab/tree/main/terraform/azure-simple-linux-vm</a></p>
<p><a href="https://learn.microsoft.com/en-us/azure/virtual-machines/linux/quick-create-terraform">https://learn.microsoft.com/en-us/azure/virtual-machines/linux/quick-create-terraform</a></p>
<p><a href="https://learn.microsoft.com/en-us/azure/developer/terraform/authenticate-to-azure?source=recommendations&amp;tabs=bash#authenticate-to-azure-via-a-microsoft-account">https://learn.microsoft.com/en-us/azure/developer/terraform/authenticate-to-azure?source=recommendations&amp;tabs=bash#authenticate-to-azure-via-a-microsoft-account</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>How to follow symbolic links while searching with Telescope in neovim</title>
      <link>https://mischavandenburg.com/zet/neovim-telescope-follow-symlinks/</link>
      <pubDate>Fri, 06 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/neovim-telescope-follow-symlinks/</guid>
      <description>I use the Obsidian app, but I mostly write and search my notes with neovim. I added my zet directory from this blog repo into the Obsidian vault as a symbolic link, but I soon discovered that these files were not being searched.
Telescope.nvim uses ripgrep (rg) to do the live grepping in its search, and ripgrep does not follow symbolic links by default. You need to pass the -L flag to it.</description>
      <content:encoded><![CDATA[<p>I use the <a href="/zet/articles/obsidian-introduction/">Obsidian</a> app, but I mostly write and search my notes with neovim. I added my zet directory from this blog repo into the Obsidian vault as a symbolic link, but I soon discovered that these files were not being searched.</p>
<p>Telescope.nvim uses ripgrep (rg) to do the live grepping in its search, and ripgrep does not follow symbolic links by default. You need to pass the -L flag to it.</p>
<p>To pass the -L flag, and some other flags, I added the following to my telescope config file:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-lua" data-lang="lua"><span class="line"><span class="cl"><span class="c1">-- Custom ripgrep configuration:</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">telescope</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;telescope&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">telescopeConfig</span> <span class="o">=</span> <span class="n">require</span><span class="p">(</span><span class="s2">&#34;telescope.config&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">-- Clone the default Telescope configuration</span>
</span></span><span class="line"><span class="cl"><span class="kd">local</span> <span class="n">vimgrep_arguments</span> <span class="o">=</span> <span class="p">{</span> <span class="n">unpack</span><span class="p">(</span><span class="n">telescopeConfig.values</span><span class="p">.</span><span class="n">vimgrep_arguments</span><span class="p">)</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">-- I want to search in hidden/dot files.</span>
</span></span><span class="line"><span class="cl"><span class="n">table.insert</span><span class="p">(</span><span class="n">vimgrep_arguments</span><span class="p">,</span> <span class="s2">&#34;--hidden&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">-- I don&#39;t want to search in the `.git` directory.</span>
</span></span><span class="line"><span class="cl"><span class="n">table.insert</span><span class="p">(</span><span class="n">vimgrep_arguments</span><span class="p">,</span> <span class="s2">&#34;--glob&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">table.insert</span><span class="p">(</span><span class="n">vimgrep_arguments</span><span class="p">,</span> <span class="s2">&#34;!**/.git/*&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">-- I want to follow symbolic links</span>
</span></span><span class="line"><span class="cl"><span class="n">table.insert</span><span class="p">(</span><span class="n">vimgrep_arguments</span><span class="p">,</span> <span class="s2">&#34;-L&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">telescope.setup</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">	<span class="n">defaults</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="c1">-- `hidden = true` is not supported in text grep commands.</span>
</span></span><span class="line"><span class="cl">		<span class="n">vimgrep_arguments</span> <span class="o">=</span> <span class="n">vimgrep_arguments</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">	<span class="p">},</span>
</span></span><span class="line"><span class="cl">	<span class="n">pickers</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="n">find_files</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="c1">-- `hidden = true` will still show the inside of `.git/` as it&#39;s not `.gitignore`d.</span>
</span></span><span class="line"><span class="cl">			<span class="n">find_command</span> <span class="o">=</span> <span class="p">{</span> <span class="s2">&#34;rg&#34;</span><span class="p">,</span> <span class="s2">&#34;--files&#34;</span><span class="p">,</span> <span class="s2">&#34;--hidden&#34;</span><span class="p">,</span> <span class="s2">&#34;--glob&#34;</span><span class="p">,</span> <span class="s2">&#34;!**/.git/*&#34;</span><span class="p">,</span> <span class="s2">&#34;-L&#34;</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">		<span class="p">},</span>
</span></span><span class="line"><span class="cl">	<span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="p">})</span>
</span></span></code></pre></div><p>Based on the configuration examples found on the project&rsquo;s GitHub page.</p>
<p><a href="https://github.com/nvim-telescope/telescope.nvim">https://github.com/nvim-telescope/telescope.nvim</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>How to install the Openstack CLI on Linux</title>
      <link>https://mischavandenburg.com/zet/install-openstack-cli/</link>
      <pubDate>Thu, 05 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/install-openstack-cli/</guid>
      <description>Make sure to have pip installed.
Run pip install python-openstackclient
Pip will install a binary called &amp;ldquo;openstack&amp;rdquo; in ~/.local/bin
If the openstack command is not available in your session, you might need to add it to your PATH:
export PATH=&amp;quot;$HOME/.local/bin:$PATH&amp;quot;
Add this to your ~/.zshrc or ~/.bashrc to make sure this happens for each shell session.
Don&amp;rsquo;t forget to source your updated ~/.zshrc if you chose to add it:
source ~/.</description>
      <content:encoded><![CDATA[<p>Make sure to have pip installed.</p>
<p>Run <code>pip install python-openstackclient</code></p>
<p>Pip will install a binary called &ldquo;openstack&rdquo; in ~/.local/bin</p>
<p>If the openstack command is not available in your session, you might need to add it to your PATH:</p>
<p><code>export PATH=&quot;$HOME/.local/bin:$PATH&quot;</code></p>
<p>Add this to your ~/.zshrc or ~/.bashrc to make sure this happens for each shell session.</p>
<p>Don&rsquo;t forget to source your updated ~/.zshrc if you chose to add it:</p>
<p><code>source ~/.zshrc</code></p>
<p><a href="https://docs.openstack.org/newton/user-guide/common/cli-install-openstack-command-line-clients.html">https://docs.openstack.org/newton/user-guide/common/cli-install-openstack-command-line-clients.html</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>How to Reset a VM Root Password using the Openstack CLI</title>
      <link>https://mischavandenburg.com/zet/openstack-root-password/</link>
      <pubDate>Thu, 05 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/openstack-root-password/</guid>
      <description> Download the Openstack RC file from the Openstack portal. Click your username in the top right corner to find it. Source the RC file to make the environment variables avaialable to your current session: source ~/my_openstack.sh Find the instance ID of your VM from the portal. Run openstack server set --root-password be3xxxx5-8348-418b-xxxb-c4xxxx575cd You will be prompted for the new password which will be set on the virtual machine. </description>
      <content:encoded><![CDATA[<ol>
<li>Download the Openstack RC file from the Openstack portal. Click your username in the top right corner to find it.</li>
<li>Source the RC file to make the environment variables avaialable to your current session: <code>source ~/my_openstack.sh</code></li>
<li>Find the instance ID of your VM from the portal.</li>
<li>Run <code>openstack server set --root-password be3xxxx5-8348-418b-xxxb-c4xxxx575cd</code></li>
<li>You will be prompted for the new password which will be set on the virtual machine.</li>
</ol>
]]></content:encoded>
    </item>
    
    <item>
      <title>How to run installed pip packages as binaries</title>
      <link>https://mischavandenburg.com/zet/run-installed-pip-packages/</link>
      <pubDate>Thu, 05 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/run-installed-pip-packages/</guid>
      <description>When you install a pip package which is meant to be run from the command line as a command, you might find that it is not available to you after installation.
If this happens, it might be that the path is missing from your PATH variable. Therefore, the shell does not source these binaries when initiated, and does not know that these executables exist.
You can find the location of your binaries by running pip show package_name</description>
      <content:encoded><![CDATA[<p>When you install a pip package which is meant to be run from the command line as a command, you might find that it is not available to you after installation.</p>
<p>If this happens, it might be that the path is missing from your PATH variable. Therefore, the shell does not source these binaries when initiated, and does not know that these executables exist.</p>
<p>You can find the location of your binaries by running <code>pip show package_name</code></p>
<p>Usually the binaries will be located in ~/.local/bin on a UNIX based system.</p>
<p>To add this to your path, run:</p>
<p><code>export PATH=&quot;$HOME/.local/bin:$PATH&quot;</code></p>
<p>Add this to your ~/.zshrc or ~/.bashrc to make sure this happens for each shell session.</p>
<p>Don&rsquo;t forget to source your updated ~/.zshrc if you chose to add it:</p>
<p><code>source ~/.zshrc</code></p>
<p><a href="https://stackoverflow.com/questions/29980798/where-does-pip-install-its-packages">https://stackoverflow.com/questions/29980798/where-does-pip-install-its-packages</a></p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
