<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Grafana on Mischa van den Burg</title>
    <link>https://mischavandenburg.com/tags/grafana/</link>
    <description>Recent content in Grafana on Mischa van den Burg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 25 Dec 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://mischavandenburg.com/tags/grafana/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Video - How To Install Prometheus &amp; Grafana In Your Homelab</title>
      <link>https://mischavandenburg.com/zet/video-install-prometheus-grafana-homelab/</link>
      <pubDate>Mon, 25 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/video-install-prometheus-grafana-homelab/</guid>
      <description>In this video I&amp;rsquo;ll be installing Prometheus and Grafana in a Kubernetes cluster running in Rancher Desktop on my MacBook.
There are many options available out there but this is the easiest one I found to get up and running quickly.
helm repo add prometheus-community https://prometheus-community.github.io/helm-charts helm repo update helm install prometheus-stack prometheus-community/kube-prometheus-stack --namespace=prometheus-stack --create-namespace
helm show values prometheus-community/kube-prometheus-stack &amp;gt; prometheus-default-values.yaml
Opening the Grafana UI k port-forward svc/prometheus-stack-grafana 3000:80</description>
      <content:encoded><![CDATA[
<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/3AINqaBwOYs" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<p>In this video I&rsquo;ll be installing Prometheus and Grafana in a Kubernetes cluster running in Rancher Desktop on my MacBook.</p>
<p>There are many options available out there but this is the easiest one I found to get up and running quickly.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
</span></span><span class="line"><span class="cl">helm repo update
</span></span></code></pre></div><p><code>helm install prometheus-stack prometheus-community/kube-prometheus-stack --namespace=prometheus-stack --create-namespace</code></p>
<p><code>helm show values prometheus-community/kube-prometheus-stack &gt; prometheus-default-values.yaml</code></p>
<h2 id="opening-the-grafana-ui">Opening the Grafana UI</h2>
<p><code>k port-forward svc/prometheus-stack-grafana 3000:80</code></p>
<p>Then you can open it by entering <code>localhost:3000</code> in your browser.</p>
<p>The default credentials are admin:prom-operator</p>
<h2 id="links">Links:</h2>
<p>202312250812</p>
<p><a href="https://youtu.be/3AINqaBwOYs?si=maN1rfbg4pzBc3xI">https://youtu.be/3AINqaBwOYs?si=maN1rfbg4pzBc3xI</a></p>
<p><a href="https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack#configuration">https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack#configuration</a></p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Deploying Grafana Agent With Custom Secrets From Azure Key Vault Using Akv2k8s And K8s-Monitoring Helm Chart</title>
      <link>https://mischavandenburg.com/zet/grafana-agent-with-custom-secrets-akv2k8s/</link>
      <pubDate>Tue, 28 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/grafana-agent-with-custom-secrets-akv2k8s/</guid>
      <description>Grafana has developed a Helm chart which greatly simplifies the deployment of a monitoring stack to your Kubernetes clusters.
It contains:
kube-state-metrics, which gathers metrics about Kubernetes objects Node exporter, which gathers metrics about Kubernetes nodes OpenCost, which interprets the above to create cost metrics for the cluster, and Grafana Agent, which scrapes the above services to forward metrics to Prometheus and logs to Loki The Prometheus and Loki services may be hosted on the same cluster, or remotely (e.</description>
      <content:encoded><![CDATA[<p>Grafana has developed a Helm chart which greatly simplifies the deployment of a monitoring stack to your Kubernetes clusters.</p>
<p>It contains:</p>
<ul>
<li>kube-state-metrics, which gathers metrics about Kubernetes objects</li>
<li>Node exporter, which gathers metrics about Kubernetes nodes</li>
<li>OpenCost, which interprets the above to create cost metrics for the cluster, and</li>
<li>Grafana Agent, which scrapes the above services to forward metrics to Prometheus and logs to Loki</li>
</ul>
<p>The Prometheus and Loki services may be hosted on the same cluster, or remotely (e.g. on Grafana Cloud).</p>
<p>For my current project I&rsquo;m setting it up to a Grafana Cloud stack, but as stated above it can also be used with a local or other remote Prometheus instance.</p>
<h1 id="akv2k8s">akv2k8s</h1>
<p>We use akv2k8s on our clusters to synch secrets from Azure Key Vaults to Kubernetes secrets or injecting them as environment variables. This way we can prevent checking in secrets to our code.</p>
<p>However, when I first tried to deploy this chart, external secrets were not supported. They have now been fixed by Pete Wall and I managed to deploy the k8s-monitoring by writing a wrapper Helm chart with the external secret objects.</p>
<h1 id="code">code</h1>
<p>All code is available in my <a href="https://github.com/mischavandenburg/lab/tree/main/kubernetes/k8smonitoring-secrets">lab repo</a>. I wrote the following Chart.yaml:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">apiVersion</span><span class="p">:</span><span class="w"> </span><span class="l">v2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">k8s-monitoring</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="m">1.0.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">This chart deploys the k8s-monitoring chart with custom secrets</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">dependencies</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">k8s-monitoring</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="m">0.5.1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">repository</span><span class="p">:</span><span class="w"> </span><span class="l">https://grafana.github.io/helm-charts/</span><span class="w">
</span></span></span></code></pre></div><p>Then I created a templates directory and added secrets.yaml:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">apiVersion</span><span class="p">:</span><span class="w"> </span><span class="l">spv.no/v1alpha1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">kind</span><span class="p">:</span><span class="w"> </span><span class="l">AzureKeyVaultSecret</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">metadata</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">prometheus-user</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">spec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">vault</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span>{{<span class="w"> </span><span class="l">.Values.keyVault }}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">object</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">prometheus-user</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">secret</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">output</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">secret</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">grafana-agent-credentials-akv2k8s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">dataKey</span><span class="p">:</span><span class="w"> </span><span class="l">prometheus-user</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">apiVersion</span><span class="p">:</span><span class="w"> </span><span class="l">spv.no/v1alpha1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">kind</span><span class="p">:</span><span class="w"> </span><span class="l">AzureKeyVaultSecret</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">metadata</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">prometheus-password</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">spec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">vault</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span>{{<span class="w"> </span><span class="l">.Values.keyVault }}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">object</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">prometheus-password</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">secret</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">output</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">secret</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">grafana-agent-credentials-akv2k8s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">dataKey</span><span class="p">:</span><span class="w"> </span><span class="l">prometheus-password</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">apiVersion</span><span class="p">:</span><span class="w"> </span><span class="l">spv.no/v1alpha1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">kind</span><span class="p">:</span><span class="w"> </span><span class="l">AzureKeyVaultSecret</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">metadata</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">prometheus-host</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">spec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">vault</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span>{{<span class="w"> </span><span class="l">.Values.keyVault }}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">object</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">prometheus-host</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">secret</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">output</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">secret</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">grafana-agent-credentials-akv2k8s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">dataKey</span><span class="p">:</span><span class="w"> </span><span class="l">prometheus-host</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nn">---</span><span class="w">
</span></span></span></code></pre></div><p>Then, to use the external secrets in the values file, I used the following configuration:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">keyVault</span><span class="p">:</span><span class="w"> </span><span class="l">kv-123-hello</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">k8s-monitoring</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">cluster</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">aks-123-hello</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">externalServices</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">prometheus</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">hostKey</span><span class="p">:</span><span class="w"> </span><span class="l">prometheus-host</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">basicAuth</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">usernameKey</span><span class="p">:</span><span class="w"> </span><span class="l">prometheus-user</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">passwordKey</span><span class="p">:</span><span class="w"> </span><span class="l">prometheus-password</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">secret</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">create</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">grafana-agent-credentials-akv2k8s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">namespace</span><span class="p">:</span><span class="w"> </span><span class="l">k8s-monitoring</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">extraConfig</span><span class="p">:</span><span class="w"> </span><span class="p">|-</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">    logging {
</span></span></span><span class="line"><span class="cl"><span class="sd">      level  = &#34;info&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">      format = &#34;logfmt&#34;
</span></span></span><span class="line"><span class="cl"><span class="sd">    }</span><span class="w">    
</span></span></span></code></pre></div><p>This chart can be deployed using <code>helm install</code> but we are using GitOps like the gods intended. When this is configured in ArgoCD, the chart will be deployed with the secrets templates. These templates will retreive the secrets from the Azure Key Vault and synch them to the <code>grafana-agent-credentials-akv2k8s</code> secret.</p>
<h1 id="bug">bug</h1>
<p>Althoug this might have been a slight bug during the first implementation of this chart, I did run into the following error in my first attempts. The logs of the Grafana Agent showed:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">unsupported protocol scheme <span class="se">\&#34;\&#34;</span><span class="s2">&#34;
</span></span></span></code></pre></div><p>After a lot of debugging I decided to completely rebuild the deployment from scratch, and then I found out that I had put the externalServices.prometheus and externalServices.secret objects in a different order which messed up the rest of the values file. <strong>It is important to keep the order that is given in the values.yaml in the k8s-monitoring repo.</strong></p>
<h2 id="links">Links:</h2>
<p>Helm chart:</p>
<p><a href="https://github.com/grafana/k8s-monitoring-helm/tree/main/charts/k8s-monitoring">https://github.com/grafana/k8s-monitoring-helm/tree/main/charts/k8s-monitoring</a></p>
<p>GitHub issue:</p>
<p><a href="https://github.com/grafana/k8s-monitoring-helm/issues/81#issuecomment-1828771508">https://github.com/grafana/k8s-monitoring-helm/issues/81#issuecomment-1828771508</a></p>
<p>Link to example code in my lab repo:</p>
<p><a href="https://github.com/mischavandenburg/lab/tree/main/kubernetes/k8smonitoring-secrets">https://github.com/mischavandenburg/lab/tree/main/kubernetes/k8smonitoring-secrets</a></p>
<p>202311281011</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Setting up Grafana Cloud with Entra ID authentication using Terraform</title>
      <link>https://mischavandenburg.com/zet/grafana-cloud-azure-ad/</link>
      <pubDate>Fri, 17 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mischavandenburg.com/zet/grafana-cloud-azure-ad/</guid>
      <description>Been working on a nice project lately. My current client has chosen to run Grafana Cloud and the instance was running in West US, which was leading to slower performance. I took up the project of provisioning a new instance in West Europe. Although I would have preferred to host Grafana ourselves or use Azure Managed Grafana, this is what the client has chosen so I that is what I&amp;rsquo;ll have to work with.</description>
      <content:encoded><![CDATA[<p>Been working on a nice project lately. My current client has chosen to run Grafana Cloud and the instance was running in West US, which was leading to slower performance. I took up the project of provisioning a new instance in West Europe. Although I would have preferred to host Grafana ourselves or use Azure Managed Grafana, this is what the client has chosen so I that is what I&rsquo;ll have to work with.</p>
<p>Also taking the opportunity to refactor the IaC and review our authrozation methods. We were using LBAC but I would rather use RBAC.</p>
<p>A few goals for the configuration:</p>
<ul>
<li>Authentication to the Grafana Cloud instance must happen through Entra ID</li>
<li>User management is based on Entra ID groups</li>
<li>Teams within Grafana are automatically syched with Entra ID groups</li>
<li>In other words, if a new user is added to an Entra ID group, it must automatically be added to the team in Grafana</li>
</ul>
<p>To provision the instance I used the following terraform code. First we need the providers.tf:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-terraform" data-lang="terraform"><span class="line"><span class="cl"><span class="nx">terraform</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="na">required_version</span> = <span class="s2">&#34;~&gt; 1.4&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="nx">required_providers</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="na">grafana</span> = <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="na">source</span>  = <span class="s2">&#34;grafana/grafana&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="na">version</span> = <span class="s2">&#34;&gt;= 1.40.1&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="kr">
</span></span></span><span class="line"><span class="cl"><span class="kr">provider</span> <span class="s2">&#34;grafana&#34;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="na">alias</span>         = <span class="s2">&#34;grafana_cloud&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="na">cloud_api_key</span> = <span class="nb">var</span><span class="p">.</span><span class="nx">grafana_api_key</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span><span class="c1">
</span></span></span><span class="line"><span class="cl"><span class="c1">
</span></span></span><span class="line"><span class="cl"><span class="c1"># Provider for managing the content of the Grafana Cloud instance
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">provider</span> <span class="s2">&#34;grafana&#34;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="na">alias</span> = <span class="s2">&#34;content&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="na">url</span>   = <span class="nx">grafana_cloud_stack</span><span class="p">.</span><span class="nx">vanoord_stack</span><span class="p">.</span><span class="nx">url</span>
</span></span><span class="line"><span class="cl">  <span class="na">auth</span>  = <span class="nx">grafana_cloud_stack_service_account_token</span><span class="p">.</span><span class="nx">cloud_sa</span><span class="p">.</span><span class="nx">key</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Here I&rsquo;m declaring a provider for provisioning the cloud instance itself, &ldquo;grafana_cloud&rdquo;, and a second one to manage the content.</p>
<p>Next we provision the instance and service accounts, in cloud-instance.tf :</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-terraform" data-lang="terraform"><span class="line"><span class="cl"><span class="kr">resource</span> <span class="s2">&#34;grafana_cloud_stack&#34;</span> <span class="s2">&#34;vanoord_stack&#34;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="kr">  provider</span> <span class="o">=</span> <span class="nx">grafana</span><span class="p">.</span><span class="nx">grafana_cloud</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="na">name</span>        = <span class="s2">&#34;vanoord&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="na">slug</span>        = <span class="s2">&#34;vanoord&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="na">region_slug</span> = <span class="s2">&#34;prod-eu-west-3&#34;</span><span class="c1"> # Example &#34;us&#34;,&#34;eu&#34; etc
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="kr">
</span></span></span><span class="line"><span class="cl"><span class="kr">resource</span> <span class="s2">&#34;grafana_cloud_stack_service_account&#34;</span> <span class="s2">&#34;cloud_sa&#34;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="kr">  provider</span>   <span class="o">=</span> <span class="nx">grafana</span><span class="p">.</span><span class="nx">grafana_cloud</span>
</span></span><span class="line"><span class="cl">  <span class="na">stack_slug</span> = <span class="nx">grafana_cloud_stack</span><span class="p">.</span><span class="nx">vanoord_stack</span><span class="p">.</span><span class="nx">slug</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="na">name</span>        = <span class="s2">&#34;terraform-serviceaccount&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="na">role</span>        = <span class="s2">&#34;Admin&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="na">is_disabled</span> = <span class="kc">false</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="kr">
</span></span></span><span class="line"><span class="cl"><span class="kr">resource</span> <span class="s2">&#34;grafana_cloud_stack_service_account_token&#34;</span> <span class="s2">&#34;cloud_sa&#34;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="kr">  provider</span>   <span class="o">=</span> <span class="nx">grafana</span><span class="p">.</span><span class="nx">grafana_cloud</span>
</span></span><span class="line"><span class="cl">  <span class="na">stack_slug</span> = <span class="nx">grafana_cloud_stack</span><span class="p">.</span><span class="nx">vanoord_stack</span><span class="p">.</span><span class="nx">slug</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="na">name</span>               = <span class="s2">&#34;terraform-serviceaccount-key&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="na">service_account_id</span> = <span class="nx">grafana_cloud_stack_service_account</span><span class="p">.</span><span class="nx">cloud_sa</span><span class="p">.</span><span class="nx">id</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="kr">
</span></span></span><span class="line"><span class="cl"><span class="kr">resource</span> <span class="s2">&#34;grafana_folder&#34;</span> <span class="s2">&#34;mischa&#34;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="kr">  provider</span> <span class="o">=</span> <span class="nx">grafana</span><span class="p">.</span><span class="nx">content</span>
</span></span><span class="line"><span class="cl">  <span class="na">title</span>    = <span class="s2">&#34;Mischa Test Folder&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Next I configured the instance to enable authentication with Entra ID. The process was quite straight forward and I used this documentation:</p>
<p><a href="https://grafana.com/docs/grafana-cloud/account-management/authentication-and-permissions/authorization/#configure-oauth-with-microsoft-azure-ad">https://grafana.com/docs/grafana-cloud/account-management/authentication-and-permissions/authorization/#configure-oauth-with-microsoft-azure-ad</a></p>
<p>However, make sure to add this configuration under &ldquo;Token Configuration&rdquo; in the App Registration:</p>
<p><img loading="lazy" src="/grafad1.png" type="" alt=""  /></p>
<p>And add the following Graph API permissions:</p>
<p><img loading="lazy" src="/grafad2.png" type="" alt=""  /></p>
<p>When adding a new team, the group ID&rsquo;s of the Entra ID groups must also be added to the Grafana Cloud instance in Grafana Cloud under Security -&gt; Advanced Auth -&gt; Azure AD -&gt; Configure -&gt; Allowed Groups.</p>
<p>Finally, to automatically synch the memebers of the Entra ID groups to teams in the Grafana Cloud instance, I wrote the following code:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-terraform" data-lang="terraform"><span class="line"><span class="cl"><span class="nx">locals</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="na">teams</span> = <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;team1&#34;</span> <span class="o">=</span> <span class="p">{</span> <span class="s2">&#34;AADGroupObjectIds&#34;</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;id1&#34;</span><span class="p">]</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;team2&#34;</span> <span class="o">=</span> <span class="p">{</span> <span class="s2">&#34;AADGroupObjectIds&#34;</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;id2&#34;</span><span class="p">]</span> <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="kr">
</span></span></span><span class="line"><span class="cl"><span class="kr">resource</span> <span class="s2">&#34;grafana_team&#34;</span> <span class="s2">&#34;teams&#34;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="kr">  provider</span>                         <span class="o">=</span> <span class="nx">grafana</span><span class="p">.</span><span class="nx">content</span>
</span></span><span class="line"><span class="cl">  <span class="na">for_each</span>                         = <span class="nx">local</span><span class="p">.</span><span class="nx">teams</span>
</span></span><span class="line"><span class="cl">  <span class="na">name</span>                             = <span class="nb">each</span><span class="p">.</span><span class="nx">key</span>
</span></span><span class="line"><span class="cl">  <span class="na">ignore_externally_synced_members</span> = <span class="kc">false</span>
</span></span><span class="line"><span class="cl">  <span class="nx">team_sync</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="na">groups</span> = <span class="nb">each</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">AADGroupObjectIds</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>With this setup the members of the Entra ID groups are automatically synched to the teams in Grafana Cloud.</p>
<p>In the next article I&rsquo;ll add data sources and authorize teams to data sources and other resources within Grafana.</p>
<h2 id="links">Links:</h2>
<p>202311171711</p>
<p>[[azure]]</p>
<p>[[grafana]]</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
